{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0","program":"C:\\Users\\Mark\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","tungstenite","--edition=2018","C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","-C","metadata=cde5e99520ca48fe","-C","extra-filename=-cde5e99520ca48fe","--out-dir","c:\\Users\\Mark\\Documents\\Projeto-Final\\sevidor\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Mark\\Documents\\Projeto-Final\\sevidor\\target\\rls\\debug\\deps","--extern","base64=c:\\Users\\Mark\\Documents\\Projeto-Final\\sevidor\\target\\rls\\debug\\deps\\libbase64-dd750cd4c1b815b2.rmeta","--extern","byteorder=c:\\Users\\Mark\\Documents\\Projeto-Final\\sevidor\\target\\rls\\debug\\deps\\libbyteorder-112591953c6c1c4f.rmeta","--extern","bytes=c:\\Users\\Mark\\Documents\\Projeto-Final\\sevidor\\target\\rls\\debug\\deps\\libbytes-a1a1ddb7dc52b426.rmeta","--extern","http=c:\\Users\\Mark\\Documents\\Projeto-Final\\sevidor\\target\\rls\\debug\\deps\\libhttp-04f195644cf1886d.rmeta","--extern","httparse=c:\\Users\\Mark\\Documents\\Projeto-Final\\sevidor\\target\\rls\\debug\\deps\\libhttparse-326f95ac6b0a0bcf.rmeta","--extern","log=c:\\Users\\Mark\\Documents\\Projeto-Final\\sevidor\\target\\rls\\debug\\deps\\liblog-f62450e45a57545a.rmeta","--extern","rand=c:\\Users\\Mark\\Documents\\Projeto-Final\\sevidor\\target\\rls\\debug\\deps\\librand-841df428a69fbccb.rmeta","--extern","sha1=c:\\Users\\Mark\\Documents\\Projeto-Final\\sevidor\\target\\rls\\debug\\deps\\libsha1-2c946a4d4d40b055.rmeta","--extern","thiserror=c:\\Users\\Mark\\Documents\\Projeto-Final\\sevidor\\target\\rls\\debug\\deps\\libthiserror-121516cfac3c71c9.rmeta","--extern","url=c:\\Users\\Mark\\Documents\\Projeto-Final\\sevidor\\target\\rls\\debug\\deps\\liburl-7fe61d0b51e90011.rmeta","--extern","utf8=c:\\Users\\Mark\\Documents\\Projeto-Final\\sevidor\\target\\rls\\debug\\deps\\libutf8-8022d343f2f70b36.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Mark\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Mark\\Documents\\Projeto-Final\\sevidor\\target\\rls\\debug\\deps\\libtungstenite-cde5e99520ca48fe.rmeta"},"prelude":{"crate_id":{"name":"tungstenite","disambiguator":[5453194877668331653,10733990422336392926]},"crate_root":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src","external_crates":[{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[902711862199739234,15082167224296373374]}},{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[5048311760381386034,12753961808535803278]}},{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[847775214756591688,12437863933651081164]}},{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[18098153966720408130,4102567439342721650]}},{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[14085577876822856882,15393158987199036233]}},{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[3188366355873518403,14471389999965490426]}},{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[10237517513868340142,18396708545822173986]}},{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17305999185247584930,14125623615750666193]}},{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7451980452763147359,4800032867518142595]}},{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[842541340887862638,17591716377464122790]}},{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[14650435931294811010,18006816567319070280]}},{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[16073749092757737146,5785406473963590530]}},{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[9426002052484834533,14451905897035318657]}},{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\lib.rs","num":14,"id":{"name":"http","disambiguator":[16904237346837138496,13898978492181319649]}},{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\lib.rs","num":15,"id":{"name":"fnv","disambiguator":[16532409871647146675,5038852771148610996]}},{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\buffer.rs","num":16,"id":{"name":"bytes","disambiguator":[17071574347066633541,17584306485224086250]}},{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\lib.rs","num":17,"id":{"name":"itoa","disambiguator":[4277204124851102138,1187940562638195608]}},{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","num":18,"id":{"name":"log","disambiguator":[7959388870600472482,1551976684805635354]}},{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","num":19,"id":{"name":"cfg_if","disambiguator":[5920805980929341637,15126950819943592384]}},{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","num":20,"id":{"name":"url","disambiguator":[2612230936929937989,15005376976627862139]}},{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","num":21,"id":{"name":"matches","disambiguator":[3964966339363841112,2702610496873783981]}},{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","num":22,"id":{"name":"form_urlencoded","disambiguator":[10321424453214693670,5323884935037621440]}},{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","num":23,"id":{"name":"percent_encoding","disambiguator":[1339879131169385792,201168947964313436]}},{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","num":24,"id":{"name":"idna","disambiguator":[16315888311005892080,5962192028665407561]}},{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","num":25,"id":{"name":"unicode_bidi","disambiguator":[3023759135346373756,4161434126619126612]}},{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","num":26,"id":{"name":"unicode_normalization","disambiguator":[5337133732332731196,2652326558897428413]}},{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","num":27,"id":{"name":"tinyvec","disambiguator":[938508932933322853,2653717381514196811]}},{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","num":28,"id":{"name":"tinyvec_macros","disambiguator":[11998534634037662251,14925790107582650280]}},{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","num":29,"id":{"name":"thiserror","disambiguator":[1389042092633378369,11711626832086471350]}},{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","num":30,"id":{"name":"thiserror_impl","disambiguator":[984413686481597903,767796805575449240]}},{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\client.rs","num":31,"id":{"name":"httparse","disambiguator":[10658732646033470166,9062794864920940869]}},{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\mod.rs","num":32,"id":{"name":"sha1","disambiguator":[13912998354660853362,3015155084103025477]}},{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\mod.rs","num":33,"id":{"name":"digest","disambiguator":[9855900221482718968,13653089840385564105]}},{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\mod.rs","num":34,"id":{"name":"generic_array","disambiguator":[17793137987905285886,3561437211753892560]}},{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\mod.rs","num":35,"id":{"name":"typenum","disambiguator":[16502928387760071906,14708972271356257153]}},{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\mod.rs","num":36,"id":{"name":"block_buffer","disambiguator":[14881038981631653435,17396686565275309046]}},{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\mod.rs","num":37,"id":{"name":"cpufeatures","disambiguator":[17220370789984931359,5974307960944187932]}},{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\mod.rs","num":38,"id":{"name":"opaque_debug","disambiguator":[18019404188365104909,14688825178579244095]}},{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","num":39,"id":{"name":"byteorder","disambiguator":[679908780473436287,3094678682410985808]}},{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\message.rs","num":40,"id":{"name":"utf8","disambiguator":[13598937085472709260,13431013254383680139]}},{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\client.rs","num":41,"id":{"name":"rand","disambiguator":[5879702363821397066,1639249094072799469]}},{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\client.rs","num":42,"id":{"name":"rand_core","disambiguator":[5755728079787626093,6384702701893577135]}},{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\client.rs","num":43,"id":{"name":"getrandom","disambiguator":[14104630944641526501,12629704499326302705]}},{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\client.rs","num":44,"id":{"name":"rand_chacha","disambiguator":[3341938805920981880,2744200159667148883]}},{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\client.rs","num":45,"id":{"name":"ppv_lite86","disambiguator":[1009793201100299592,3641076265698151146]}},{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\client.rs","num":46,"id":{"name":"base64","disambiguator":[3172116067170045584,8777831871071121164]}}],"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\lib.rs","byte_start":0,"byte_end":1018,"line_start":1,"line_end":40,"column_start":1,"column_end":62}},"imports":[{"kind":"Use","ref_id":{"krate":14,"index":0},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\lib.rs","byte_start":306,"byte_end":310,"line_start":15,"line_end":15,"column_start":9,"column_end":13},"alias_span":null,"name":"http","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1691},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\mod.rs","byte_start":86891,"byte_end":86901,"line_start":13,"line_end":13,"column_start":23,"column_end":33},"alias_span":null,"name":"CloseFrame","value":"","parent":{"krate":0,"index":596}},{"kind":"Use","ref_id":{"krate":0,"index":1724},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\mod.rs","byte_start":86903,"byte_end":86908,"line_start":13,"line_end":13,"column_start":35,"column_end":40},"alias_span":null,"name":"Frame","value":"","parent":{"krate":0,"index":596}},{"kind":"Use","ref_id":{"krate":0,"index":1712},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\mod.rs","byte_start":86910,"byte_end":86921,"line_start":13,"line_end":13,"column_start":42,"column_end":53},"alias_span":null,"name":"FrameHeader","value":"","parent":{"krate":0,"index":596}},{"kind":"Use","ref_id":{"krate":0,"index":1691},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":56598,"byte_end":56608,"line_start":7,"line_end":7,"column_start":23,"column_end":33},"alias_span":null,"name":"CloseFrame","value":"","parent":{"krate":0,"index":595}},{"kind":"Use","ref_id":{"krate":0,"index":1763},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":56619,"byte_end":56626,"line_start":7,"line_end":7,"column_start":44,"column_end":51},"alias_span":null,"name":"Message","value":"","parent":{"krate":0,"index":595}},{"kind":"Use","ref_id":{"krate":0,"index":127},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\lib.rs","byte_start":648,"byte_end":654,"line_start":32,"line_end":32,"column_start":14,"column_end":20},"alias_span":null,"name":"client","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":120},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\lib.rs","byte_start":656,"byte_end":663,"line_start":32,"line_end":32,"column_start":22,"column_end":29},"alias_span":null,"name":"connect","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1269},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\lib.rs","byte_start":678,"byte_end":683,"line_start":33,"line_end":33,"column_start":13,"column_end":18},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":186},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\lib.rs","byte_start":685,"byte_end":691,"line_start":33,"line_end":33,"column_start":20,"column_end":26},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1479},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\lib.rs","byte_start":718,"byte_end":733,"line_start":34,"line_end":34,"column_start":25,"column_end":40},"alias_span":null,"name":"ClientHandshake","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1498},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\lib.rs","byte_start":743,"byte_end":758,"line_start":34,"line_end":34,"column_start":50,"column_end":65},"alias_span":null,"name":"ServerHandshake","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":569},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\lib.rs","byte_start":760,"byte_end":774,"line_start":34,"line_end":34,"column_start":67,"column_end":81},"alias_span":null,"name":"HandshakeError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1763},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\lib.rs","byte_start":792,"byte_end":799,"line_start":35,"line_end":35,"column_start":16,"column_end":23},"alias_span":null,"name":"Message","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1816},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\lib.rs","byte_start":801,"byte_end":810,"line_start":35,"line_end":35,"column_start":25,"column_end":34},"alias_span":null,"name":"WebSocket","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1131},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\lib.rs","byte_start":826,"byte_end":832,"line_start":36,"line_end":36,"column_start":14,"column_end":20},"alias_span":null,"name":"accept","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1136},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\lib.rs","byte_start":834,"byte_end":844,"line_start":36,"line_end":36,"column_start":22,"column_end":32},"alias_span":null,"name":"accept_hdr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1133},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\lib.rs","byte_start":846,"byte_end":868,"line_start":36,"line_end":36,"column_start":34,"column_end":56},"alias_span":null,"name":"accept_hdr_with_config","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1129},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\lib.rs","byte_start":870,"byte_end":888,"line_start":36,"line_end":36,"column_start":58,"column_end":76},"alias_span":null,"name":"accept_with_config","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\lib.rs","byte_start":0,"byte_end":1018,"line_start":1,"line_end":40,"column_start":1,"column_end":62},"name":"","qualname":"::","value":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":40},{"krate":0,"index":159},{"krate":0,"index":205},{"krate":0,"index":595},{"krate":0,"index":1100},{"krate":0,"index":1139},{"krate":0,"index":1183},{"krate":0,"index":1213},{"krate":0,"index":1214},{"krate":0,"index":1215},{"krate":0,"index":1216},{"krate":0,"index":1217},{"krate":0,"index":1220},{"krate":0,"index":1223},{"krate":0,"index":1224},{"krate":0,"index":1227},{"krate":0,"index":1230},{"krate":0,"index":1231},{"krate":0,"index":1234},{"krate":0,"index":1237},{"krate":0,"index":1240},{"krate":0,"index":1241},{"krate":0,"index":1244},{"krate":0,"index":1247},{"krate":0,"index":1248},{"krate":0,"index":1251},{"krate":0,"index":1254},{"krate":0,"index":1257}],"decl_id":null,"docs":" Lightweight, flexible WebSockets for Rust.\n","sig":null,"attributes":[{"value":"/ Lightweight, flexible WebSockets for Rust.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\lib.rs","byte_start":0,"byte_end":46,"line_start":1,"line_end":1,"column_start":1,"column_end":47}},{"value":"deny(missing_docs, missing_copy_implementations,\n       missing_debug_implementations, trivial_casts, trivial_numeric_casts,\n       unstable_features, unused_must_use, unused_mut, unused_imports,\n       unused_import_braces)","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\lib.rs","byte_start":47,"byte_end":296,"line_start":2,"line_end":13,"column_start":1,"column_end":3}}]},{"kind":"Mod","id":{"krate":0,"index":6},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\buffer.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"buffer","qualname":"::buffer","value":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\buffer.rs","parent":null,"children":[{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":1260},{"krate":0,"index":1265},{"krate":0,"index":20},{"krate":0,"index":32},{"krate":0,"index":37}],"decl_id":null,"docs":" A buffer for reading data from the network.","sig":null,"attributes":[{"value":"/ A buffer for reading data from the network.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\buffer.rs","byte_start":1020,"byte_end":1067,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\buffer.rs","byte_start":1068,"byte_end":1071,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The `ReadBuffer` is a buffer of bytes similar to a first-in, first-out queue.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\buffer.rs","byte_start":1072,"byte_end":1153,"line_start":3,"line_end":3,"column_start":1,"column_end":82}},{"value":"/ It is filled by reading from a stream supporting `Read` and is then","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\buffer.rs","byte_start":1154,"byte_end":1225,"line_start":4,"line_end":4,"column_start":1,"column_end":72}},{"value":"/ accessible as a cursor for reading bytes.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\buffer.rs","byte_start":1226,"byte_end":1271,"line_start":5,"line_end":5,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":1260},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\buffer.rs","byte_start":1424,"byte_end":1434,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"ReadBuffer","qualname":"::buffer::ReadBuffer","value":"ReadBuffer {  }","parent":null,"children":[{"krate":0,"index":1262},{"krate":0,"index":1263}],"decl_id":null,"docs":" A FIFO buffer for reading packets from the network.\n","sig":null,"attributes":[{"value":"/ A FIFO buffer for reading packets from the network.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\buffer.rs","byte_start":1340,"byte_end":1395,"line_start":11,"line_end":11,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\buffer.rs","byte_start":1631,"byte_end":1634,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<ReadBuffer<CHUNK_SIZE>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new empty input buffer.\n","sig":null,"attributes":[{"value":"/ Create a new empty input buffer.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\buffer.rs","byte_start":1583,"byte_end":1619,"line_start":19,"line_end":19,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\buffer.rs","byte_start":1770,"byte_end":1783,"line_start":25,"line_end":25,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<ReadBuffer<CHUNK_SIZE>>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new empty input buffer with a given `capacity`.\n","sig":null,"attributes":[{"value":"/ Create a new empty input buffer with a given `capacity`.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\buffer.rs","byte_start":1698,"byte_end":1758,"line_start":24,"line_end":24,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\buffer.rs","byte_start":1957,"byte_end":1976,"line_start":30,"line_end":30,"column_start":12,"column_end":31},"name":"from_partially_read","qualname":"<ReadBuffer<CHUNK_SIZE>>::from_partially_read","value":"pub fn from_partially_read(Vec<u8>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a input buffer filled with previously read data.\n","sig":null,"attributes":[{"value":"/ Create a input buffer filled with previously read data.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\buffer.rs","byte_start":1886,"byte_end":1945,"line_start":29,"line_end":29,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\buffer.rs","byte_start":2130,"byte_end":2139,"line_start":35,"line_end":35,"column_start":12,"column_end":21},"name":"as_cursor","qualname":"<ReadBuffer<CHUNK_SIZE>>::as_cursor","value":"pub fn as_cursor(&Self) -> &Cursor<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Get a cursor to the data storage.\n","sig":null,"attributes":[{"value":"/ Get a cursor to the data storage.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\buffer.rs","byte_start":2081,"byte_end":2118,"line_start":34,"line_end":34,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\buffer.rs","byte_start":2259,"byte_end":2272,"line_start":40,"line_end":40,"column_start":12,"column_end":25},"name":"as_cursor_mut","qualname":"<ReadBuffer<CHUNK_SIZE>>::as_cursor_mut","value":"pub fn as_cursor_mut(&mut Self) -> &mut Cursor<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Get a cursor to the mutable data storage.\n","sig":null,"attributes":[{"value":"/ Get a cursor to the mutable data storage.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\buffer.rs","byte_start":2202,"byte_end":2247,"line_start":39,"line_end":39,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\buffer.rs","byte_start":2417,"byte_end":2425,"line_start":45,"line_end":45,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<ReadBuffer<CHUNK_SIZE>>::into_vec","value":"pub fn into_vec(Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Consume the `ReadBuffer` and get the internal storage.\n","sig":null,"attributes":[{"value":"/ Consume the `ReadBuffer` and get the internal storage.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\buffer.rs","byte_start":2347,"byte_end":2405,"line_start":44,"line_end":44,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\buffer.rs","byte_start":2822,"byte_end":2831,"line_start":55,"line_end":55,"column_start":12,"column_end":21},"name":"read_from","qualname":"<ReadBuffer<CHUNK_SIZE>>::read_from","value":"pub fn read_from<S: Read>(&mut Self, &mut S) -> IoResult<usize>","parent":null,"children":[],"decl_id":null,"docs":" Read next portion of data from the given input stream.\n","sig":null,"attributes":[{"value":"/ Read next portion of data from the given input stream.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\buffer.rs","byte_start":2752,"byte_end":2810,"line_start":54,"line_end":54,"column_start":5,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":40},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"client","qualname":"::client","value":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","parent":null,"children":[{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":53},{"krate":0,"index":56},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":66},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":84},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":92},{"krate":0,"index":95},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":102},{"krate":0,"index":105},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":120},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":127},{"krate":0,"index":130},{"krate":0,"index":132},{"krate":0,"index":135},{"krate":0,"index":138},{"krate":0,"index":140},{"krate":0,"index":143},{"krate":0,"index":145},{"krate":0,"index":148},{"krate":0,"index":150},{"krate":0,"index":152}],"decl_id":null,"docs":" Methods to connect to a WebSocket as a client.\n","sig":null,"attributes":[{"value":"/ Methods to connect to a WebSocket as a client.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":4822,"byte_end":4872,"line_start":1,"line_end":1,"column_start":1,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":115},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":6178,"byte_end":6197,"line_start":42,"line_end":42,"column_start":8,"column_end":27},"name":"connect_with_config","qualname":"::client::connect_with_config","value":"pub fn connect_with_config<Req: IntoClientRequest>(Req,\n                                                   Option<WebSocketConfig>,\n                                                   u8)\n-> Result<(WebSocket<MaybeTlsStream<TcpStream>>, Response)>","parent":null,"children":[],"decl_id":null,"docs":" Connect to the given WebSocket in blocking mode.","sig":null,"attributes":[{"value":"/ Connect to the given WebSocket in blocking mode.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":5342,"byte_end":5394,"line_start":27,"line_end":27,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":5395,"byte_end":5398,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Uses a websocket configuration passed as an argument to the function. Calling it with `None` is","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":5399,"byte_end":5498,"line_start":29,"line_end":29,"column_start":1,"column_end":100}},{"value":"/ equal to calling `connect()` function.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":5499,"byte_end":5541,"line_start":30,"line_end":30,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":5542,"byte_end":5545,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ The URL may be either ws:// or wss://.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":5546,"byte_end":5588,"line_start":32,"line_end":32,"column_start":1,"column_end":43}},{"value":"/ To support wss:// URLs, feature `native-tls` or `rustls-tls` must be turned on.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":5589,"byte_end":5672,"line_start":33,"line_end":33,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":5673,"byte_end":5676,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ This function \"just works\" for those who wants a simple blocking solution","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":5677,"byte_end":5754,"line_start":35,"line_end":35,"column_start":1,"column_end":78}},{"value":"/ similar to `std::net::TcpStream`. If you want a non-blocking or other","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":5755,"byte_end":5828,"line_start":36,"line_end":36,"column_start":1,"column_end":74}},{"value":"/ custom stream, call `client` instead.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":5829,"byte_end":5870,"line_start":37,"line_end":37,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":5871,"byte_end":5874,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ This function uses `native_tls` or `rustls` to do TLS depending on the feature flags enabled. If","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":5875,"byte_end":5975,"line_start":39,"line_end":39,"column_start":1,"column_end":101}},{"value":"/ you want to use other TLS libraries, use `client` instead. There is no need to enable any of","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":5976,"byte_end":6072,"line_start":40,"line_end":40,"column_start":1,"column_end":97}},{"value":"/ the `*-tls` features if you don't call `connect` since it's the only function that uses them.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":6073,"byte_end":6170,"line_start":41,"line_end":41,"column_start":1,"column_end":98}}]},{"kind":"Function","id":{"krate":0,"index":120},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":9396,"byte_end":9403,"line_start":116,"line_end":116,"column_start":8,"column_end":15},"name":"connect","qualname":"::client::connect","value":"pub fn connect<Req: IntoClientRequest>(Req)\n-> Result<(WebSocket<MaybeTlsStream<TcpStream>>, Response)>","parent":null,"children":[],"decl_id":null,"docs":" Connect to the given WebSocket in blocking mode.","sig":null,"attributes":[{"value":"/ Connect to the given WebSocket in blocking mode.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":8707,"byte_end":8759,"line_start":104,"line_end":104,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":8760,"byte_end":8763,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ The URL may be either ws:// or wss://.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":8764,"byte_end":8806,"line_start":106,"line_end":106,"column_start":1,"column_end":43}},{"value":"/ To support wss:// URLs, feature `native-tls` or `rustls-tls` must be turned on.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":8807,"byte_end":8890,"line_start":107,"line_end":107,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":8891,"byte_end":8894,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ This function \"just works\" for those who wants a simple blocking solution","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":8895,"byte_end":8972,"line_start":109,"line_end":109,"column_start":1,"column_end":78}},{"value":"/ similar to `std::net::TcpStream`. If you want a non-blocking or other","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":8973,"byte_end":9046,"line_start":110,"line_end":110,"column_start":1,"column_end":74}},{"value":"/ custom stream, call `client` instead.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":9047,"byte_end":9088,"line_start":111,"line_end":111,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":9089,"byte_end":9092,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ This function uses `native_tls` or `rustls` to do TLS depending on the feature flags enabled. If","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":9093,"byte_end":9193,"line_start":113,"line_end":113,"column_start":1,"column_end":101}},{"value":"/ you want to use other TLS libraries, use `client` instead. There is no need to enable any of","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":9194,"byte_end":9290,"line_start":114,"line_end":114,"column_start":1,"column_end":97}},{"value":"/ the `*-tls` features if you don't call `connect` since it's the only function that uses them.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":9291,"byte_end":9388,"line_start":115,"line_end":115,"column_start":1,"column_end":98}}]},{"kind":"Function","id":{"krate":0,"index":123},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":10101,"byte_end":10109,"line_start":136,"line_end":136,"column_start":8,"column_end":16},"name":"uri_mode","qualname":"::client::uri_mode","value":"pub fn uri_mode(&Uri) -> Result<Mode>","parent":null,"children":[],"decl_id":null,"docs":" Get the mode of the given URL.","sig":null,"attributes":[{"value":"/ Get the mode of the given URL.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":9884,"byte_end":9918,"line_start":132,"line_end":132,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":9919,"byte_end":9922,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ This function may be used to ease the creation of custom TLS streams","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":9923,"byte_end":9995,"line_start":134,"line_end":134,"column_start":1,"column_end":73}},{"value":"/ in non-blocking algorithms or for use with TLS libraries other than `native_tls` or `rustls`.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":9996,"byte_end":10093,"line_start":135,"line_end":135,"column_start":1,"column_end":98}}]},{"kind":"Function","id":{"krate":0,"index":124},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":10703,"byte_end":10721,"line_start":150,"line_end":150,"column_start":8,"column_end":26},"name":"client_with_config","qualname":"::client::client_with_config","value":"pub fn client_with_config<Stream, Req>(Req, Stream, Option<WebSocketConfig>)\n->\n    StdResult<(WebSocket<Stream>, Response),\n              HandshakeError<ClientHandshake<Stream>>> where Stream: Read +\nWrite, Req: IntoClientRequest","parent":null,"children":[],"decl_id":null,"docs":" Do the client handshake over the given stream given a web socket configuration. Passing `None`\n as configuration is equal to calling `client()` function.","sig":null,"attributes":[{"value":"/ Do the client handshake over the given stream given a web socket configuration. Passing `None`","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":10316,"byte_end":10414,"line_start":144,"line_end":144,"column_start":1,"column_end":99}},{"value":"/ as configuration is equal to calling `client()` function.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":10415,"byte_end":10476,"line_start":145,"line_end":145,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":10477,"byte_end":10480,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ Use this function if you need a nonblocking handshake support or if you","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":10481,"byte_end":10556,"line_start":147,"line_end":147,"column_start":1,"column_end":76}},{"value":"/ want to use a custom stream like `mio::net::TcpStream` or `openssl::ssl::SslStream`.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":10557,"byte_end":10645,"line_start":148,"line_end":148,"column_start":1,"column_end":89}},{"value":"/ Any stream supporting `Read + Write` will do.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":10646,"byte_end":10695,"line_start":149,"line_end":149,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":127},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":11328,"byte_end":11334,"line_start":167,"line_end":167,"column_start":8,"column_end":14},"name":"client","qualname":"::client::client","value":"pub fn client<Stream, Req>(Req, Stream)\n->\n    StdResult<(WebSocket<Stream>, Response),\n              HandshakeError<ClientHandshake<Stream>>> where Stream: Read +\nWrite, Req: IntoClientRequest","parent":null,"children":[],"decl_id":null,"docs":" Do the client handshake over the given stream.","sig":null,"attributes":[{"value":"/ Do the client handshake over the given stream.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":11051,"byte_end":11101,"line_start":162,"line_end":162,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":11102,"byte_end":11105,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ Use this function if you need a nonblocking handshake support or if you","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":11106,"byte_end":11181,"line_start":164,"line_end":164,"column_start":1,"column_end":76}},{"value":"/ want to use a custom stream like `mio::net::TcpStream` or `openssl::ssl::SslStream`.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":11182,"byte_end":11270,"line_start":165,"line_end":165,"column_start":1,"column_end":89}},{"value":"/ Any stream supporting `Read + Write` will do.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":11271,"byte_end":11320,"line_start":166,"line_end":166,"column_start":1,"column_end":50}}]},{"kind":"Trait","id":{"krate":0,"index":130},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":11809,"byte_end":11826,"line_start":182,"line_end":182,"column_start":11,"column_end":28},"name":"IntoClientRequest","qualname":"::client::IntoClientRequest","value":"IntoClientRequest","parent":null,"children":[{"krate":0,"index":131}],"decl_id":null,"docs":" Trait for converting various types into HTTP requests used for a client connection.","sig":null,"attributes":[{"value":"/ Trait for converting various types into HTTP requests used for a client connection.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":11585,"byte_end":11672,"line_start":178,"line_end":178,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":11673,"byte_end":11676,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ This trait is implemented by default for string slices, strings, `url::Url`, `http::Uri` and","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":11677,"byte_end":11773,"line_start":180,"line_end":180,"column_start":1,"column_end":97}},{"value":"/ `http::Request<()>`.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":11774,"byte_end":11798,"line_start":181,"line_end":181,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":11911,"byte_end":11930,"line_start":184,"line_end":184,"column_start":8,"column_end":27},"name":"into_client_request","qualname":"::client::IntoClientRequest::into_client_request","value":"pub fn into_client_request(Self) -> Result<Request>","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" Convert into a `Request` that can be used for a client connection.\n","sig":null,"attributes":[{"value":"/ Convert into a `Request` that can be used for a client connection.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":11833,"byte_end":11903,"line_start":183,"line_end":183,"column_start":5,"column_end":75}}]},{"kind":"Mod","id":{"krate":0,"index":159},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","parent":null,"children":[{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":164},{"krate":0,"index":167},{"krate":0,"index":170},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":177},{"krate":0,"index":180},{"krate":0,"index":183},{"krate":0,"index":186},{"krate":0,"index":1269},{"krate":0,"index":1270},{"krate":0,"index":1275},{"krate":0,"index":1284},{"krate":0,"index":1286},{"krate":0,"index":1288},{"krate":0,"index":1290},{"krate":0,"index":1292},{"krate":0,"index":1294},{"krate":0,"index":1296},{"krate":0,"index":189},{"krate":0,"index":191},{"krate":0,"index":193},{"krate":0,"index":195},{"krate":0,"index":197},{"krate":0,"index":199},{"krate":0,"index":201},{"krate":0,"index":203},{"krate":0,"index":1328},{"krate":0,"index":1329},{"krate":0,"index":1330},{"krate":0,"index":1339},{"krate":0,"index":1341},{"krate":0,"index":1342},{"krate":0,"index":1345},{"krate":0,"index":1346},{"krate":0,"index":1348},{"krate":0,"index":1350},{"krate":0,"index":1356},{"krate":0,"index":1357},{"krate":0,"index":1362},{"krate":0,"index":1371},{"krate":0,"index":1373},{"krate":0,"index":1375},{"krate":0,"index":1376},{"krate":0,"index":1379},{"krate":0,"index":1380},{"krate":0,"index":1382},{"krate":0,"index":1384},{"krate":0,"index":1440},{"krate":0,"index":1441},{"krate":0,"index":1442},{"krate":0,"index":1451},{"krate":0,"index":1453},{"krate":0,"index":1454},{"krate":0,"index":1457},{"krate":0,"index":1458},{"krate":0,"index":1473},{"krate":0,"index":1474},{"krate":0,"index":1475},{"krate":0,"index":1477}],"decl_id":null,"docs":" Error handling.\n","sig":null,"attributes":[{"value":"/ Error handling.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":13353,"byte_end":13372,"line_start":1,"line_end":1,"column_start":1,"column_end":20}}]},{"kind":"Type","id":{"krate":0,"index":186},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":13566,"byte_end":13572,"line_start":10,"line_end":10,"column_start":10,"column_end":16},"name":"Result","qualname":"::error::Result","value":"result::Result<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Result type of all Tungstenite library calls.\n","sig":null,"attributes":[{"value":"/ Result type of all Tungstenite library calls.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":13507,"byte_end":13556,"line_start":9,"line_end":9,"column_start":1,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1298},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":14364,"byte_end":14380,"line_start":27,"line_end":27,"column_start":5,"column_end":21},"name":"ConnectionClosed","qualname":"::error::Error::ConnectionClosed","value":"Error::ConnectionClosed","parent":{"krate":0,"index":1269},"children":[],"decl_id":null,"docs":" WebSocket connection closed normally. This informs you of the close.\n It's not an error as such and nothing wrong happened.","sig":null,"attributes":[{"value":"/ WebSocket connection closed normally. This informs you of the close.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":13688,"byte_end":13760,"line_start":15,"line_end":15,"column_start":5,"column_end":77}},{"value":"/ It's not an error as such and nothing wrong happened.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":13765,"byte_end":13822,"line_start":16,"line_end":16,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":13827,"byte_end":13830,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ This is returned as soon as the close handshake is finished (we have both sent and","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":13835,"byte_end":13921,"line_start":18,"line_end":18,"column_start":5,"column_end":91}},{"value":"/ received a close frame) on the server end and as soon as the server has closed the","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":13926,"byte_end":14012,"line_start":19,"line_end":19,"column_start":5,"column_end":91}},{"value":"/ underlying connection if this endpoint is a client.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":14017,"byte_end":14072,"line_start":20,"line_end":20,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":14077,"byte_end":14080,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ Thus when you receive this, it is safe to drop the underlying connection.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":14085,"byte_end":14162,"line_start":22,"line_end":22,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":14167,"byte_end":14170,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ Receiving this error means that the WebSocket object is not usable anymore and the","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":14175,"byte_end":14261,"line_start":24,"line_end":24,"column_start":5,"column_end":91}},{"value":"/ only meaningful action with it is dropping it.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":14266,"byte_end":14316,"line_start":25,"line_end":25,"column_start":5,"column_end":55}},{"value":"error(\"Connection closed normally\")","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":14321,"byte_end":14359,"line_start":26,"line_end":26,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1300},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":14801,"byte_end":14814,"line_start":36,"line_end":36,"column_start":5,"column_end":18},"name":"AlreadyClosed","qualname":"::error::Error::AlreadyClosed","value":"Error::AlreadyClosed","parent":{"krate":0,"index":1269},"children":[],"decl_id":null,"docs":" Trying to work with already closed connection.","sig":null,"attributes":[{"value":"/ Trying to work with already closed connection.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":14386,"byte_end":14436,"line_start":28,"line_end":28,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":14441,"byte_end":14444,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ Trying to read or write after receiving `ConnectionClosed` causes this.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":14449,"byte_end":14524,"line_start":30,"line_end":30,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":14529,"byte_end":14532,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ As opposed to `ConnectionClosed`, this indicates your code tries to operate on the","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":14537,"byte_end":14623,"line_start":32,"line_end":32,"column_start":5,"column_end":91}},{"value":"/ connection when it really shouldn't anymore, so this really indicates a programmer","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":14628,"byte_end":14714,"line_start":33,"line_end":33,"column_start":5,"column_end":91}},{"value":"/ error on your part.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":14719,"byte_end":14742,"line_start":34,"line_end":34,"column_start":5,"column_end":28}},{"value":"error(\"Trying to work with closed connection\")","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":14747,"byte_end":14796,"line_start":35,"line_end":35,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1302},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":15012,"byte_end":15014,"line_start":40,"line_end":40,"column_start":5,"column_end":7},"name":"Io","qualname":"::error::Error::Io","value":"Error::Io(io::Error)","parent":{"krate":0,"index":1269},"children":[],"decl_id":null,"docs":" Input-output error. Apart from WouldBlock, these are generally errors with the\n underlying connection and you should probably consider them fatal.\n","sig":null,"attributes":[{"value":"/ Input-output error. Apart from WouldBlock, these are generally errors with the","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":14820,"byte_end":14902,"line_start":37,"line_end":37,"column_start":5,"column_end":87}},{"value":"/ underlying connection and you should probably consider them fatal.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":14907,"byte_end":14977,"line_start":38,"line_end":38,"column_start":5,"column_end":75}},{"value":"error(\"IO error: {0}\")","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":14982,"byte_end":15007,"line_start":39,"line_end":39,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1305},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":15247,"byte_end":15250,"line_start":46,"line_end":46,"column_start":5,"column_end":8},"name":"Tls","qualname":"::error::Error::Tls","value":"Error::Tls(TlsError)","parent":{"krate":0,"index":1269},"children":[],"decl_id":null,"docs":" TLS error.","sig":null,"attributes":[{"value":"/ TLS error.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":15039,"byte_end":15053,"line_start":41,"line_end":41,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":15058,"byte_end":15061,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ Note that this error variant is enabled unconditionally even if no TLS feature is enabled,","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":15066,"byte_end":15160,"line_start":43,"line_end":43,"column_start":5,"column_end":99}},{"value":"/ to provide a feature-agnostic API surface.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":15165,"byte_end":15211,"line_start":44,"line_end":44,"column_start":5,"column_end":51}},{"value":"error(\"TLS error: {0}\")","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":15216,"byte_end":15242,"line_start":45,"line_end":45,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1308},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":15480,"byte_end":15488,"line_start":51,"line_end":51,"column_start":5,"column_end":13},"name":"Capacity","qualname":"::error::Error::Capacity","value":"Error::Capacity(CapacityError)","parent":{"krate":0,"index":1269},"children":[],"decl_id":null,"docs":" - When reading: buffer capacity exhausted.\n - When writing: your message is bigger than the configured max message size\n   (64MB by default).\n","sig":null,"attributes":[{"value":"/ - When reading: buffer capacity exhausted.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":15274,"byte_end":15320,"line_start":47,"line_end":47,"column_start":5,"column_end":51}},{"value":"/ - When writing: your message is bigger than the configured max message size","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":15325,"byte_end":15404,"line_start":48,"line_end":48,"column_start":5,"column_end":84}},{"value":"/   (64MB by default).","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":15409,"byte_end":15433,"line_start":49,"line_end":49,"column_start":5,"column_end":29}},{"value":"error(\"Space limit exceeded: {0}\")","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":15438,"byte_end":15475,"line_start":50,"line_end":50,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1311},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":15591,"byte_end":15599,"line_start":54,"line_end":54,"column_start":5,"column_end":13},"name":"Protocol","qualname":"::error::Error::Protocol","value":"Error::Protocol(ProtocolError)","parent":{"krate":0,"index":1269},"children":[],"decl_id":null,"docs":" Protocol violation.\n","sig":null,"attributes":[{"value":"/ Protocol violation.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":15517,"byte_end":15540,"line_start":52,"line_end":52,"column_start":5,"column_end":28}},{"value":"error(\"WebSocket protocol error: {0}\")","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":15545,"byte_end":15586,"line_start":53,"line_end":53,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1314},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":15696,"byte_end":15709,"line_start":57,"line_end":57,"column_start":5,"column_end":18},"name":"SendQueueFull","qualname":"::error::Error::SendQueueFull","value":"Error::SendQueueFull(Message)","parent":{"krate":0,"index":1269},"children":[],"decl_id":null,"docs":" Message send queue full.\n","sig":null,"attributes":[{"value":"/ Message send queue full.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":15628,"byte_end":15656,"line_start":55,"line_end":55,"column_start":5,"column_end":33}},{"value":"error(\"Send queue is full\")","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":15661,"byte_end":15691,"line_start":56,"line_end":56,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1317},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":15787,"byte_end":15791,"line_start":60,"line_end":60,"column_start":5,"column_end":9},"name":"Utf8","qualname":"::error::Error::Utf8","value":"Error::Utf8","parent":{"krate":0,"index":1269},"children":[],"decl_id":null,"docs":" UTF coding error.\n","sig":null,"attributes":[{"value":"/ UTF coding error.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":15724,"byte_end":15745,"line_start":58,"line_end":58,"column_start":5,"column_end":26}},{"value":"error(\"UTF-8 encoding error\")","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":15750,"byte_end":15782,"line_start":59,"line_end":59,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1319},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":15849,"byte_end":15852,"line_start":63,"line_end":63,"column_start":5,"column_end":8},"name":"Url","qualname":"::error::Error::Url","value":"Error::Url(UrlError)","parent":{"krate":0,"index":1269},"children":[],"decl_id":null,"docs":" Invalid URL.\n","sig":null,"attributes":[{"value":"/ Invalid URL.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":15797,"byte_end":15813,"line_start":61,"line_end":61,"column_start":5,"column_end":21}},{"value":"error(\"URL error: {0}\")","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":15818,"byte_end":15844,"line_start":62,"line_end":62,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1322},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":15940,"byte_end":15944,"line_start":66,"line_end":66,"column_start":5,"column_end":9},"name":"Http","qualname":"::error::Error::Http","value":"Error::Http(Response<Option<String>>)","parent":{"krate":0,"index":1269},"children":[],"decl_id":null,"docs":" HTTP error.\n","sig":null,"attributes":[{"value":"/ HTTP error.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":15876,"byte_end":15891,"line_start":64,"line_end":64,"column_start":5,"column_end":20}},{"value":"error(\"HTTP error: {}\",.0.status())","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":15896,"byte_end":15935,"line_start":65,"line_end":65,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1325},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":16042,"byte_end":16052,"line_start":69,"line_end":69,"column_start":5,"column_end":15},"name":"HttpFormat","qualname":"::error::Error::HttpFormat","value":"Error::HttpFormat(http::Error)","parent":{"krate":0,"index":1269},"children":[],"decl_id":null,"docs":" HTTP format error.\n","sig":null,"attributes":[{"value":"/ HTTP format error.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":15976,"byte_end":15998,"line_start":67,"line_end":67,"column_start":5,"column_end":27}},{"value":"error(\"HTTP format error: {0}\")","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":16003,"byte_end":16037,"line_start":68,"line_end":68,"column_start":5,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":1269},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":13676,"byte_end":13681,"line_start":14,"line_end":14,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"pub enum Error {\n    ConnectionClosed,\n    AlreadyClosed,\n    Io(io::Error),\n    Tls(TlsError),\n    Capacity(CapacityError),\n    Protocol(ProtocolError),\n    SendQueueFull(Message),\n    Utf8,\n    Url(UrlError),\n    Http(Response<Option<String>>),\n    HttpFormat(http::Error),\n}","parent":null,"children":[{"krate":0,"index":1298},{"krate":0,"index":1300},{"krate":0,"index":1302},{"krate":0,"index":1305},{"krate":0,"index":1308},{"krate":0,"index":1311},{"krate":0,"index":1314},{"krate":0,"index":1317},{"krate":0,"index":1319},{"krate":0,"index":1322},{"krate":0,"index":1325}],"decl_id":null,"docs":" Possible WebSocket errors.\n","sig":null,"attributes":[{"value":"/ Possible WebSocket errors.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":13612,"byte_end":13642,"line_start":12,"line_end":12,"column_start":1,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1351},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":17600,"byte_end":17614,"line_start":128,"line_end":128,"column_start":5,"column_end":19},"name":"TooManyHeaders","qualname":"::error::CapacityError::TooManyHeaders","value":"CapacityError::TooManyHeaders","parent":{"krate":0,"index":1328},"children":[],"decl_id":null,"docs":" Too many headers provided (see [`httparse::Error::TooManyHeaders`]).\n","sig":null,"attributes":[{"value":"/ Too many headers provided (see [`httparse::Error::TooManyHeaders`]).","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":17490,"byte_end":17562,"line_start":126,"line_end":126,"column_start":5,"column_end":77}},{"value":"error(\"Too many headers\")","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":17567,"byte_end":17595,"line_start":127,"line_end":127,"column_start":5,"column_end":33}}]},{"kind":"StructVariant","id":{"krate":0,"index":1353},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":17768,"byte_end":17782,"line_start":132,"line_end":132,"column_start":5,"column_end":19},"name":"MessageTooLong","qualname":"::error::CapacityError::MessageTooLong","value":"CapacityError::MessageTooLong { size, max_size }","parent":{"krate":0,"index":1328},"children":[],"decl_id":null,"docs":" Received header is too long.\n Message is bigger than the maximum allowed size.\n","sig":null,"attributes":[{"value":"/ Received header is too long.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":17620,"byte_end":17652,"line_start":129,"line_end":129,"column_start":5,"column_end":37}},{"value":"/ Message is bigger than the maximum allowed size.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":17657,"byte_end":17709,"line_start":130,"line_end":130,"column_start":5,"column_end":57}},{"value":"error(\"Message too long: {size} > {max_size}\")","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":17714,"byte_end":17763,"line_start":131,"line_end":131,"column_start":5,"column_end":54}}]},{"kind":"Enum","id":{"krate":0,"index":1328},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":17470,"byte_end":17483,"line_start":125,"line_end":125,"column_start":10,"column_end":23},"name":"CapacityError","qualname":"::error::CapacityError","value":"pub enum CapacityError {\n    TooManyHeaders,\n    MessageTooLong {\n        size: usize,\n        max_size: usize,\n    },\n}","parent":null,"children":[{"krate":0,"index":1351},{"krate":0,"index":1353}],"decl_id":null,"docs":" Indicates the specific type/cause of a capacity error.\n","sig":null,"attributes":[{"value":"/ Indicates the specific type/cause of a capacity error.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":17350,"byte_end":17408,"line_start":123,"line_end":123,"column_start":1,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1385},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":18226,"byte_end":18241,"line_start":145,"line_end":145,"column_start":5,"column_end":20},"name":"WrongHttpMethod","qualname":"::error::ProtocolError::WrongHttpMethod","value":"ProtocolError::WrongHttpMethod","parent":{"krate":0,"index":1356},"children":[],"decl_id":null,"docs":" Use of the wrong HTTP method (the WebSocket protocol requires the GET method be used).\n","sig":null,"attributes":[{"value":"/ Use of the wrong HTTP method (the WebSocket protocol requires the GET method be used).","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":18064,"byte_end":18154,"line_start":143,"line_end":143,"column_start":5,"column_end":95}},{"value":"error(\"Unsupported HTTP method used - only GET is allowed\")","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":18159,"byte_end":18221,"line_start":144,"line_end":144,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1387},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":18387,"byte_end":18403,"line_start":148,"line_end":148,"column_start":5,"column_end":21},"name":"WrongHttpVersion","qualname":"::error::ProtocolError::WrongHttpVersion","value":"ProtocolError::WrongHttpVersion","parent":{"krate":0,"index":1356},"children":[],"decl_id":null,"docs":" Wrong HTTP version used (the WebSocket protocol requires version 1.1 or higher).\n","sig":null,"attributes":[{"value":"/ Wrong HTTP version used (the WebSocket protocol requires version 1.1 or higher).","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":18247,"byte_end":18331,"line_start":146,"line_end":146,"column_start":5,"column_end":89}},{"value":"error(\"HTTP version must be 1.1 or higher\")","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":18336,"byte_end":18382,"line_start":147,"line_end":147,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1389},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":18510,"byte_end":18540,"line_start":151,"line_end":151,"column_start":5,"column_end":35},"name":"MissingConnectionUpgradeHeader","qualname":"::error::ProtocolError::MissingConnectionUpgradeHeader","value":"ProtocolError::MissingConnectionUpgradeHeader","parent":{"krate":0,"index":1356},"children":[],"decl_id":null,"docs":" Missing `Connection: upgrade` HTTP header.\n","sig":null,"attributes":[{"value":"/ Missing `Connection: upgrade` HTTP header.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":18409,"byte_end":18455,"line_start":149,"line_end":149,"column_start":5,"column_end":51}},{"value":"error(\"No \\\"Connection: upgrade\\\" header\")","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":18460,"byte_end":18505,"line_start":150,"line_end":150,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1391},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":18645,"byte_end":18674,"line_start":154,"line_end":154,"column_start":5,"column_end":34},"name":"MissingUpgradeWebSocketHeader","qualname":"::error::ProtocolError::MissingUpgradeWebSocketHeader","value":"ProtocolError::MissingUpgradeWebSocketHeader","parent":{"krate":0,"index":1356},"children":[],"decl_id":null,"docs":" Missing `Upgrade: websocket` HTTP header.\n","sig":null,"attributes":[{"value":"/ Missing `Upgrade: websocket` HTTP header.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":18546,"byte_end":18591,"line_start":152,"line_end":152,"column_start":5,"column_end":50}},{"value":"error(\"No \\\"Upgrade: websocket\\\" header\")","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":18596,"byte_end":18640,"line_start":153,"line_end":153,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1393},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":18793,"byte_end":18825,"line_start":157,"line_end":157,"column_start":5,"column_end":37},"name":"MissingSecWebSocketVersionHeader","qualname":"::error::ProtocolError::MissingSecWebSocketVersionHeader","value":"ProtocolError::MissingSecWebSocketVersionHeader","parent":{"krate":0,"index":1356},"children":[],"decl_id":null,"docs":" Missing `Sec-WebSocket-Version: 13` HTTP header.\n","sig":null,"attributes":[{"value":"/ Missing `Sec-WebSocket-Version: 13` HTTP header.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":18680,"byte_end":18732,"line_start":155,"line_end":155,"column_start":5,"column_end":57}},{"value":"error(\"No \\\"Sec-WebSocket-Version: 13\\\" header\")","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":18737,"byte_end":18788,"line_start":156,"line_end":156,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1395},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":18928,"byte_end":18950,"line_start":160,"line_end":160,"column_start":5,"column_end":27},"name":"MissingSecWebSocketKey","qualname":"::error::ProtocolError::MissingSecWebSocketKey","value":"ProtocolError::MissingSecWebSocketKey","parent":{"krate":0,"index":1356},"children":[],"decl_id":null,"docs":" Missing `Sec-WebSocket-Key` HTTP header.\n","sig":null,"attributes":[{"value":"/ Missing `Sec-WebSocket-Key` HTTP header.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":18831,"byte_end":18875,"line_start":158,"line_end":158,"column_start":5,"column_end":49}},{"value":"error(\"No \\\"Sec-WebSocket-Key\\\" header\")","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":18880,"byte_end":18923,"line_start":159,"line_end":159,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1397},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":19127,"byte_end":19156,"line_start":163,"line_end":163,"column_start":5,"column_end":34},"name":"SecWebSocketAcceptKeyMismatch","qualname":"::error::ProtocolError::SecWebSocketAcceptKeyMismatch","value":"ProtocolError::SecWebSocketAcceptKeyMismatch","parent":{"krate":0,"index":1356},"children":[],"decl_id":null,"docs":" The `Sec-WebSocket-Accept` header is either not present or does not specify the correct key value.\n","sig":null,"attributes":[{"value":"/ The `Sec-WebSocket-Accept` header is either not present or does not specify the correct key value.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":18956,"byte_end":19058,"line_start":161,"line_end":161,"column_start":5,"column_end":107}},{"value":"error(\"Key mismatch in \\\"Sec-WebSocket-Accept\\\" header\")","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":19063,"byte_end":19122,"line_start":162,"line_end":162,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1399},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":19259,"byte_end":19275,"line_start":166,"line_end":166,"column_start":5,"column_end":21},"name":"JunkAfterRequest","qualname":"::error::ProtocolError::JunkAfterRequest","value":"ProtocolError::JunkAfterRequest","parent":{"krate":0,"index":1356},"children":[],"decl_id":null,"docs":" Garbage data encountered after client request.\n","sig":null,"attributes":[{"value":"/ Garbage data encountered after client request.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":19162,"byte_end":19212,"line_start":164,"line_end":164,"column_start":5,"column_end":55}},{"value":"error(\"Junk after client request\")","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":19217,"byte_end":19254,"line_start":165,"line_end":165,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1401},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":19383,"byte_end":19407,"line_start":169,"line_end":169,"column_start":5,"column_end":29},"name":"CustomResponseSuccessful","qualname":"::error::ProtocolError::CustomResponseSuccessful","value":"ProtocolError::CustomResponseSuccessful","parent":{"krate":0,"index":1356},"children":[],"decl_id":null,"docs":" Custom responses must be unsuccessful.\n","sig":null,"attributes":[{"value":"/ Custom responses must be unsuccessful.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":19281,"byte_end":19323,"line_start":167,"line_end":167,"column_start":5,"column_end":47}},{"value":"error(\"Custom response must not be successful\")","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":19328,"byte_end":19378,"line_start":168,"line_end":168,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1403},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":19507,"byte_end":19526,"line_start":172,"line_end":172,"column_start":5,"column_end":24},"name":"HandshakeIncomplete","qualname":"::error::ProtocolError::HandshakeIncomplete","value":"ProtocolError::HandshakeIncomplete","parent":{"krate":0,"index":1356},"children":[],"decl_id":null,"docs":" No more data while still performing handshake.\n","sig":null,"attributes":[{"value":"/ No more data while still performing handshake.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":19413,"byte_end":19463,"line_start":170,"line_end":170,"column_start":5,"column_end":55}},{"value":"error(\"Handshake not finished\")","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":19468,"byte_end":19502,"line_start":171,"line_end":171,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1405},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":19620,"byte_end":19633,"line_start":175,"line_end":175,"column_start":5,"column_end":18},"name":"HttparseError","qualname":"::error::ProtocolError::HttparseError","value":"ProtocolError::HttparseError(httparse::Error)","parent":{"krate":0,"index":1356},"children":[],"decl_id":null,"docs":" Wrapper around a [`httparse::Error`] value.\n","sig":null,"attributes":[{"value":"/ Wrapper around a [`httparse::Error`] value.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":19532,"byte_end":19579,"line_start":173,"line_end":173,"column_start":5,"column_end":52}},{"value":"error(\"httparse error: {0}\")","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":19584,"byte_end":19615,"line_start":174,"line_end":174,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1408},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":19780,"byte_end":19796,"line_start":178,"line_end":178,"column_start":5,"column_end":21},"name":"SendAfterClosing","qualname":"::error::ProtocolError::SendAfterClosing","value":"ProtocolError::SendAfterClosing","parent":{"krate":0,"index":1356},"children":[],"decl_id":null,"docs":" Not allowed to send after having sent a closing frame.\n","sig":null,"attributes":[{"value":"/ Not allowed to send after having sent a closing frame.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":19664,"byte_end":19722,"line_start":176,"line_end":176,"column_start":5,"column_end":63}},{"value":"error(\"Sending after closing is not allowed\")","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":19727,"byte_end":19775,"line_start":177,"line_end":177,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1410},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":19906,"byte_end":19926,"line_start":181,"line_end":181,"column_start":5,"column_end":25},"name":"ReceivedAfterClosing","qualname":"::error::ProtocolError::ReceivedAfterClosing","value":"ProtocolError::ReceivedAfterClosing","parent":{"krate":0,"index":1356},"children":[],"decl_id":null,"docs":" Remote sent data after sending a closing frame.\n","sig":null,"attributes":[{"value":"/ Remote sent data after sending a closing frame.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":19802,"byte_end":19853,"line_start":179,"line_end":179,"column_start":5,"column_end":56}},{"value":"error(\"Remote sent after having closed\")","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":19858,"byte_end":19901,"line_start":180,"line_end":180,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1412},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":20027,"byte_end":20046,"line_start":184,"line_end":184,"column_start":5,"column_end":24},"name":"NonZeroReservedBits","qualname":"::error::ProtocolError::NonZeroReservedBits","value":"ProtocolError::NonZeroReservedBits","parent":{"krate":0,"index":1356},"children":[],"decl_id":null,"docs":" Reserved bits in frame header are non-zero.\n","sig":null,"attributes":[{"value":"/ Reserved bits in frame header are non-zero.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":19932,"byte_end":19979,"line_start":182,"line_end":182,"column_start":5,"column_end":52}},{"value":"error(\"Reserved bits are non-zero\")","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":19984,"byte_end":20022,"line_start":183,"line_end":183,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1414},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":20188,"byte_end":20211,"line_start":187,"line_end":187,"column_start":5,"column_end":28},"name":"UnmaskedFrameFromClient","qualname":"::error::ProtocolError::UnmaskedFrameFromClient","value":"ProtocolError::UnmaskedFrameFromClient","parent":{"krate":0,"index":1356},"children":[],"decl_id":null,"docs":" The server must close the connection when an unmasked frame is received.\n","sig":null,"attributes":[{"value":"/ The server must close the connection when an unmasked frame is received.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":20052,"byte_end":20128,"line_start":185,"line_end":185,"column_start":5,"column_end":81}},{"value":"error(\"Received an unmasked frame from client\")","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":20133,"byte_end":20183,"line_start":186,"line_end":186,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1416},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":20347,"byte_end":20368,"line_start":190,"line_end":190,"column_start":5,"column_end":26},"name":"MaskedFrameFromServer","qualname":"::error::ProtocolError::MaskedFrameFromServer","value":"ProtocolError::MaskedFrameFromServer","parent":{"krate":0,"index":1356},"children":[],"decl_id":null,"docs":" The client must close the connection when a masked frame is received.\n","sig":null,"attributes":[{"value":"/ The client must close the connection when a masked frame is received.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":20217,"byte_end":20290,"line_start":188,"line_end":188,"column_start":5,"column_end":78}},{"value":"error(\"Received a masked frame from server\")","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":20295,"byte_end":20342,"line_start":189,"line_end":189,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1418},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":20462,"byte_end":20484,"line_start":193,"line_end":193,"column_start":5,"column_end":27},"name":"FragmentedControlFrame","qualname":"::error::ProtocolError::FragmentedControlFrame","value":"ProtocolError::FragmentedControlFrame","parent":{"krate":0,"index":1356},"children":[],"decl_id":null,"docs":" Control frames must not be fragmented.\n","sig":null,"attributes":[{"value":"/ Control frames must not be fragmented.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":20374,"byte_end":20416,"line_start":191,"line_end":191,"column_start":5,"column_end":47}},{"value":"error(\"Fragmented control frame\")","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":20421,"byte_end":20457,"line_start":192,"line_end":192,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1420},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":20629,"byte_end":20647,"line_start":196,"line_end":196,"column_start":5,"column_end":23},"name":"ControlFrameTooBig","qualname":"::error::ProtocolError::ControlFrameTooBig","value":"ProtocolError::ControlFrameTooBig","parent":{"krate":0,"index":1356},"children":[],"decl_id":null,"docs":" Control frames must have a payload of 125 bytes or less.\n","sig":null,"attributes":[{"value":"/ Control frames must have a payload of 125 bytes or less.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":20490,"byte_end":20550,"line_start":194,"line_end":194,"column_start":5,"column_end":65}},{"value":"error(\"Control frame too big (payload must be 125 bytes or less)\")","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":20555,"byte_end":20624,"line_start":195,"line_end":195,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1422},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":20747,"byte_end":20770,"line_start":199,"line_end":199,"column_start":5,"column_end":28},"name":"UnknownControlFrameType","qualname":"::error::ProtocolError::UnknownControlFrameType","value":"ProtocolError::UnknownControlFrameType(u8)","parent":{"krate":0,"index":1356},"children":[],"decl_id":null,"docs":" Type of control frame not recognised.\n","sig":null,"attributes":[{"value":"/ Type of control frame not recognised.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":20653,"byte_end":20694,"line_start":197,"line_end":197,"column_start":5,"column_end":46}},{"value":"error(\"Unknown control frame type: {0}\")","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":20699,"byte_end":20742,"line_start":198,"line_end":198,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1425},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":20868,"byte_end":20888,"line_start":202,"line_end":202,"column_start":5,"column_end":25},"name":"UnknownDataFrameType","qualname":"::error::ProtocolError::UnknownDataFrameType","value":"ProtocolError::UnknownDataFrameType(u8)","parent":{"krate":0,"index":1356},"children":[],"decl_id":null,"docs":" Type of data frame not recognised.\n","sig":null,"attributes":[{"value":"/ Type of data frame not recognised.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":20780,"byte_end":20818,"line_start":200,"line_end":200,"column_start":5,"column_end":43}},{"value":"error(\"Unknown data frame type: {0}\")","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":20823,"byte_end":20863,"line_start":201,"line_end":201,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1428},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":21028,"byte_end":21051,"line_start":205,"line_end":205,"column_start":5,"column_end":28},"name":"UnexpectedContinueFrame","qualname":"::error::ProtocolError::UnexpectedContinueFrame","value":"ProtocolError::UnexpectedContinueFrame","parent":{"krate":0,"index":1356},"children":[],"decl_id":null,"docs":" Received a continue frame despite there being nothing to continue.\n","sig":null,"attributes":[{"value":"/ Received a continue frame despite there being nothing to continue.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":20898,"byte_end":20968,"line_start":203,"line_end":203,"column_start":5,"column_end":75}},{"value":"error(\"Continue frame but nothing to continue\")","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":20973,"byte_end":21023,"line_start":204,"line_end":204,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1430},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":21176,"byte_end":21192,"line_start":208,"line_end":208,"column_start":5,"column_end":21},"name":"ExpectedFragment","qualname":"::error::ProtocolError::ExpectedFragment","value":"ProtocolError::ExpectedFragment(Data)","parent":{"krate":0,"index":1356},"children":[],"decl_id":null,"docs":" Received data while waiting for more fragments.\n","sig":null,"attributes":[{"value":"/ Received data while waiting for more fragments.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":21057,"byte_end":21108,"line_start":206,"line_end":206,"column_start":5,"column_end":56}},{"value":"error(\"While waiting for more fragments received: {0}\")","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":21113,"byte_end":21171,"line_start":207,"line_end":207,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1433},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":21331,"byte_end":21359,"line_start":211,"line_end":211,"column_start":5,"column_end":33},"name":"ResetWithoutClosingHandshake","qualname":"::error::ProtocolError::ResetWithoutClosingHandshake","value":"ProtocolError::ResetWithoutClosingHandshake","parent":{"krate":0,"index":1356},"children":[],"decl_id":null,"docs":" Connection closed without performing the closing handshake.\n","sig":null,"attributes":[{"value":"/ Connection closed without performing the closing handshake.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":21204,"byte_end":21267,"line_start":209,"line_end":209,"column_start":5,"column_end":68}},{"value":"error(\"Connection reset without closing handshake\")","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":21272,"byte_end":21326,"line_start":210,"line_end":210,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1435},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":21452,"byte_end":21465,"line_start":214,"line_end":214,"column_start":5,"column_end":18},"name":"InvalidOpcode","qualname":"::error::ProtocolError::InvalidOpcode","value":"ProtocolError::InvalidOpcode(u8)","parent":{"krate":0,"index":1356},"children":[],"decl_id":null,"docs":" Encountered an invalid opcode.\n","sig":null,"attributes":[{"value":"/ Encountered an invalid opcode.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":21365,"byte_end":21399,"line_start":212,"line_end":212,"column_start":5,"column_end":39}},{"value":"error(\"Encountered invalid opcode: {0}\")","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":21404,"byte_end":21447,"line_start":213,"line_end":213,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1438},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":21568,"byte_end":21588,"line_start":217,"line_end":217,"column_start":5,"column_end":25},"name":"InvalidCloseSequence","qualname":"::error::ProtocolError::InvalidCloseSequence","value":"ProtocolError::InvalidCloseSequence","parent":{"krate":0,"index":1356},"children":[],"decl_id":null,"docs":" The payload for the closing frame is invalid.\n","sig":null,"attributes":[{"value":"/ The payload for the closing frame is invalid.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":21475,"byte_end":21524,"line_start":215,"line_end":215,"column_start":5,"column_end":54}},{"value":"error(\"Invalid close sequence\")","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":21529,"byte_end":21563,"line_start":216,"line_end":216,"column_start":5,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":1356},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":18044,"byte_end":18057,"line_start":142,"line_end":142,"column_start":10,"column_end":23},"name":"ProtocolError","qualname":"::error::ProtocolError","value":"pub enum ProtocolError {\n    WrongHttpMethod,\n    WrongHttpVersion,\n    MissingConnectionUpgradeHeader,\n    MissingUpgradeWebSocketHeader,\n    MissingSecWebSocketVersionHeader,\n    MissingSecWebSocketKey,\n    SecWebSocketAcceptKeyMismatch,\n    JunkAfterRequest,\n    CustomResponseSuccessful,\n    HandshakeIncomplete,\n    HttparseError(httparse::Error),\n    SendAfterClosing,\n    ReceivedAfterClosing,\n    NonZeroReservedBits,\n    UnmaskedFrameFromClient,\n    MaskedFrameFromServer,\n    FragmentedControlFrame,\n    ControlFrameTooBig,\n    UnknownControlFrameType(u8),\n    UnknownDataFrameType(u8),\n    UnexpectedContinueFrame,\n    ExpectedFragment(Data),\n    ResetWithoutClosingHandshake,\n    InvalidOpcode(u8),\n    InvalidCloseSequence,\n}","parent":null,"children":[{"krate":0,"index":1385},{"krate":0,"index":1387},{"krate":0,"index":1389},{"krate":0,"index":1391},{"krate":0,"index":1393},{"krate":0,"index":1395},{"krate":0,"index":1397},{"krate":0,"index":1399},{"krate":0,"index":1401},{"krate":0,"index":1403},{"krate":0,"index":1405},{"krate":0,"index":1408},{"krate":0,"index":1410},{"krate":0,"index":1412},{"krate":0,"index":1414},{"krate":0,"index":1416},{"krate":0,"index":1418},{"krate":0,"index":1420},{"krate":0,"index":1422},{"krate":0,"index":1425},{"krate":0,"index":1428},{"krate":0,"index":1430},{"krate":0,"index":1433},{"krate":0,"index":1435},{"krate":0,"index":1438}],"decl_id":null,"docs":" Indicates the specific type/cause of a protocol error.\n","sig":null,"attributes":[{"value":"/ Indicates the specific type/cause of a protocol error.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":17924,"byte_end":17982,"line_start":140,"line_end":140,"column_start":1,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1460},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":21829,"byte_end":21849,"line_start":225,"line_end":225,"column_start":5,"column_end":25},"name":"TlsFeatureNotEnabled","qualname":"::error::UrlError::TlsFeatureNotEnabled","value":"UrlError::TlsFeatureNotEnabled","parent":{"krate":0,"index":1440},"children":[],"decl_id":null,"docs":" TLS is used despite not being compiled with the TLS feature enabled.\n","sig":null,"attributes":[{"value":"/ TLS is used despite not being compiled with the TLS feature enabled.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":21708,"byte_end":21780,"line_start":223,"line_end":223,"column_start":5,"column_end":77}},{"value":"error(\"TLS support not compiled in\")","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":21785,"byte_end":21824,"line_start":224,"line_end":224,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1462},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":21941,"byte_end":21951,"line_start":228,"line_end":228,"column_start":5,"column_end":15},"name":"NoHostName","qualname":"::error::UrlError::NoHostName","value":"UrlError::NoHostName","parent":{"krate":0,"index":1440},"children":[],"decl_id":null,"docs":" The URL does not include a host name.\n","sig":null,"attributes":[{"value":"/ The URL does not include a host name.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":21855,"byte_end":21896,"line_start":226,"line_end":226,"column_start":5,"column_end":46}},{"value":"error(\"No host name in the URL\")","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":21901,"byte_end":21936,"line_start":227,"line_end":227,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1464},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":22039,"byte_end":22054,"line_start":231,"line_end":231,"column_start":5,"column_end":20},"name":"UnableToConnect","qualname":"::error::UrlError::UnableToConnect","value":"UrlError::UnableToConnect(String)","parent":{"krate":0,"index":1440},"children":[],"decl_id":null,"docs":" Failed to connect with this URL.\n","sig":null,"attributes":[{"value":"/ Failed to connect with this URL.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":21957,"byte_end":21993,"line_start":229,"line_end":229,"column_start":5,"column_end":41}},{"value":"error(\"Unable to connect to {0}\")","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":21998,"byte_end":22034,"line_start":230,"line_end":230,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1467},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":22185,"byte_end":22205,"line_start":234,"line_end":234,"column_start":5,"column_end":25},"name":"UnsupportedUrlScheme","qualname":"::error::UrlError::UnsupportedUrlScheme","value":"UrlError::UnsupportedUrlScheme","parent":{"krate":0,"index":1440},"children":[],"decl_id":null,"docs":" Unsupported URL scheme used (only `ws://` or `wss://` may be used).\n","sig":null,"attributes":[{"value":"/ Unsupported URL scheme used (only `ws://` or `wss://` may be used).","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":22068,"byte_end":22139,"line_start":232,"line_end":232,"column_start":5,"column_end":76}},{"value":"error(\"URL scheme not supported\")","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":22144,"byte_end":22180,"line_start":233,"line_end":233,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1469},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":22310,"byte_end":22323,"line_start":237,"line_end":237,"column_start":5,"column_end":18},"name":"EmptyHostName","qualname":"::error::UrlError::EmptyHostName","value":"UrlError::EmptyHostName","parent":{"krate":0,"index":1440},"children":[],"decl_id":null,"docs":" The URL host name, though included, is empty.\n","sig":null,"attributes":[{"value":"/ The URL host name, though included, is empty.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":22211,"byte_end":22260,"line_start":235,"line_end":235,"column_start":5,"column_end":54}},{"value":"error(\"URL contains empty host name\")","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":22265,"byte_end":22305,"line_start":236,"line_end":236,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1471},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":22413,"byte_end":22426,"line_start":240,"line_end":240,"column_start":5,"column_end":18},"name":"NoPathOrQuery","qualname":"::error::UrlError::NoPathOrQuery","value":"UrlError::NoPathOrQuery","parent":{"krate":0,"index":1440},"children":[],"decl_id":null,"docs":" The URL does not include a path/query.\n","sig":null,"attributes":[{"value":"/ The URL does not include a path/query.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":22329,"byte_end":22371,"line_start":238,"line_end":238,"column_start":5,"column_end":47}},{"value":"error(\"No path/query in URL\")","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":22376,"byte_end":22408,"line_start":239,"line_end":239,"column_start":5,"column_end":37}}]},{"kind":"Enum","id":{"krate":0,"index":1440},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":21693,"byte_end":21701,"line_start":222,"line_end":222,"column_start":10,"column_end":18},"name":"UrlError","qualname":"::error::UrlError","value":"pub enum UrlError {\n    TlsFeatureNotEnabled,\n    NoHostName,\n    UnableToConnect(String),\n    UnsupportedUrlScheme,\n    EmptyHostName,\n    NoPathOrQuery,\n}","parent":null,"children":[{"krate":0,"index":1460},{"krate":0,"index":1462},{"krate":0,"index":1464},{"krate":0,"index":1467},{"krate":0,"index":1469},{"krate":0,"index":1471}],"decl_id":null,"docs":" Indicates the specific type/cause of URL error.\n","sig":null,"attributes":[{"value":"/ Indicates the specific type/cause of URL error.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":21593,"byte_end":21644,"line_start":220,"line_end":220,"column_start":1,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":1473},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":22731,"byte_end":22739,"line_start":250,"line_end":250,"column_start":10,"column_end":18},"name":"TlsError","qualname":"::error::TlsError","value":"pub enum TlsError { }","parent":null,"children":[],"decl_id":null,"docs":" TLS errors.","sig":null,"attributes":[{"value":"/ TLS errors.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":22431,"byte_end":22446,"line_start":243,"line_end":243,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":22447,"byte_end":22450,"line_start":244,"line_end":244,"column_start":1,"column_end":4}},{"value":"/ Note that even if you enable only the rustls-based TLS support, the error at runtime could still","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":22451,"byte_end":22551,"line_start":245,"line_end":245,"column_start":1,"column_end":101}},{"value":"/ be `Native`, as another crate in the dependency graph may enable native TLS support.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":22552,"byte_end":22640,"line_start":246,"line_end":246,"column_start":1,"column_end":89}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":22641,"byte_end":22679,"line_start":247,"line_end":247,"column_start":1,"column_end":39}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":22704,"byte_end":22721,"line_start":249,"line_end":249,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":205},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"handshake","qualname":"::handshake","value":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\mod.rs","parent":null,"children":[{"krate":0,"index":206},{"krate":0,"index":318},{"krate":0,"index":349},{"krate":0,"index":482},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":531},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":538},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":545},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":552},{"krate":0,"index":555},{"krate":0,"index":558},{"krate":0,"index":561},{"krate":0,"index":1555},{"krate":0,"index":1559},{"krate":0,"index":564},{"krate":0,"index":569},{"krate":0,"index":577},{"krate":0,"index":580},{"krate":0,"index":583},{"krate":0,"index":585},{"krate":0,"index":588},{"krate":0,"index":1562},{"krate":0,"index":1571},{"krate":0,"index":593}],"decl_id":null,"docs":" WebSocket handshake control.\n","sig":null,"attributes":[{"value":"/ WebSocket handshake control.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\mod.rs","byte_start":23176,"byte_end":23208,"line_start":1,"line_end":1,"column_start":1,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":206},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\client.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"client","qualname":"::handshake::client","value":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\client.rs","parent":null,"children":[{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":212},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":222},{"krate":0,"index":225},{"krate":0,"index":228},{"krate":0,"index":231},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":243},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":250},{"krate":0,"index":253},{"krate":0,"index":256},{"krate":0,"index":259},{"krate":0,"index":262},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":270},{"krate":0,"index":273},{"krate":0,"index":276},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":283},{"krate":0,"index":286},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":1479},{"krate":0,"index":1484},{"krate":0,"index":291},{"krate":0,"index":294},{"krate":0,"index":300},{"krate":0,"index":1487},{"krate":0,"index":1489},{"krate":0,"index":301},{"krate":0,"index":309},{"krate":0,"index":312},{"krate":0,"index":316}],"decl_id":null,"docs":" Client handshake machine.\n","sig":null,"attributes":[{"value":"/ Client handshake machine.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\client.rs","byte_start":27266,"byte_end":27295,"line_start":1,"line_end":1,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":289},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\client.rs","byte_start":27822,"byte_end":27829,"line_start":24,"line_end":24,"column_start":10,"column_end":17},"name":"Request","qualname":"::handshake::client::Request","value":"HttpRequest<()>","parent":null,"children":[],"decl_id":null,"docs":" Client request type.\n","sig":null,"attributes":[{"value":"/ Client request type.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\client.rs","byte_start":27788,"byte_end":27812,"line_start":23,"line_end":23,"column_start":1,"column_end":25}}]},{"kind":"Type","id":{"krate":0,"index":290},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\client.rs","byte_start":27885,"byte_end":27893,"line_start":27,"line_end":27,"column_start":10,"column_end":18},"name":"Response","qualname":"::handshake::client::Response","value":"HttpResponse<()>","parent":null,"children":[],"decl_id":null,"docs":" Client response type.\n","sig":null,"attributes":[{"value":"/ Client response type.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\client.rs","byte_start":27850,"byte_end":27875,"line_start":26,"line_end":26,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":1479},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\client.rs","byte_start":27970,"byte_end":27985,"line_start":31,"line_end":31,"column_start":12,"column_end":27},"name":"ClientHandshake","qualname":"::handshake::client::ClientHandshake","value":"ClientHandshake {  }","parent":null,"children":[{"krate":0,"index":1481},{"krate":0,"index":1482},{"krate":0,"index":1483}],"decl_id":null,"docs":" Client handshake role.\n","sig":null,"attributes":[{"value":"/ Client handshake role.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\client.rs","byte_start":27915,"byte_end":27941,"line_start":29,"line_end":29,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\client.rs","byte_start":28180,"byte_end":28185,"line_start":39,"line_end":39,"column_start":12,"column_end":17},"name":"start","qualname":"<ClientHandshake<S>>::start","value":"pub fn start(S, Request, Option<WebSocketConfig>)\n-> Result<MidHandshake<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Initiate a client handshake.\n","sig":null,"attributes":[{"value":"/ Initiate a client handshake.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\client.rs","byte_start":28136,"byte_end":28168,"line_start":38,"line_end":38,"column_start":5,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":318},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\headers.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"headers","qualname":"::handshake::headers","value":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\headers.rs","parent":null,"children":[{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":323},{"krate":0,"index":326},{"krate":0,"index":329},{"krate":0,"index":332},{"krate":0,"index":335},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":342},{"krate":0,"index":346}],"decl_id":null,"docs":" HTTP Request and response header handling.\n","sig":null,"attributes":[{"value":"/ HTTP Request and response header handling.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\headers.rs","byte_start":38844,"byte_end":38890,"line_start":1,"line_end":1,"column_start":1,"column_end":47}}]},{"kind":"Const","id":{"krate":0,"index":338},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\headers.rs","byte_start":39080,"byte_end":39091,"line_start":10,"line_end":10,"column_start":11,"column_end":22},"name":"MAX_HEADERS","qualname":"::handshake::headers::MAX_HEADERS","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Limit for the number of header lines.\n","sig":null,"attributes":[{"value":"/ Limit for the number of header lines.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\headers.rs","byte_start":39028,"byte_end":39069,"line_start":9,"line_end":9,"column_start":1,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":349},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\server.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"server","qualname":"::handshake::server","value":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\server.rs","parent":null,"children":[{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":355},{"krate":0,"index":358},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":364},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":371},{"krate":0,"index":374},{"krate":0,"index":377},{"krate":0,"index":380},{"krate":0,"index":383},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":395},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":402},{"krate":0,"index":405},{"krate":0,"index":408},{"krate":0,"index":411},{"krate":0,"index":414},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":422},{"krate":0,"index":425},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":432},{"krate":0,"index":435},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":454},{"krate":0,"index":457},{"krate":0,"index":460},{"krate":0,"index":464},{"krate":0,"index":466},{"krate":0,"index":1491},{"krate":0,"index":1493},{"krate":0,"index":1495},{"krate":0,"index":1496},{"krate":0,"index":469},{"krate":0,"index":1498},{"krate":0,"index":1505},{"krate":0,"index":471},{"krate":0,"index":475}],"decl_id":null,"docs":" Server handshake machine.\n","sig":null,"attributes":[{"value":"/ Server handshake machine.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\server.rs","byte_start":41516,"byte_end":41545,"line_start":1,"line_end":1,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":438},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\server.rs","byte_start":42127,"byte_end":42134,"line_start":27,"line_end":27,"column_start":10,"column_end":17},"name":"Request","qualname":"::handshake::server::Request","value":"HttpRequest<()>","parent":null,"children":[],"decl_id":null,"docs":" Server request type.\n","sig":null,"attributes":[{"value":"/ Server request type.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\server.rs","byte_start":42093,"byte_end":42117,"line_start":26,"line_end":26,"column_start":1,"column_end":25}}]},{"kind":"Type","id":{"krate":0,"index":439},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\server.rs","byte_start":42190,"byte_end":42198,"line_start":30,"line_end":30,"column_start":10,"column_end":18},"name":"Response","qualname":"::handshake::server::Response","value":"HttpResponse<()>","parent":null,"children":[],"decl_id":null,"docs":" Server response type.\n","sig":null,"attributes":[{"value":"/ Server response type.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\server.rs","byte_start":42155,"byte_end":42180,"line_start":29,"line_end":29,"column_start":1,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":440},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\server.rs","byte_start":42261,"byte_end":42274,"line_start":33,"line_end":33,"column_start":10,"column_end":23},"name":"ErrorResponse","qualname":"::handshake::server::ErrorResponse","value":"HttpResponse<Option<String>>","parent":null,"children":[],"decl_id":null,"docs":" Server error response type.\n","sig":null,"attributes":[{"value":"/ Server error response type.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\server.rs","byte_start":42220,"byte_end":42251,"line_start":32,"line_end":32,"column_start":1,"column_end":32}}]},{"kind":"Function","id":{"krate":0,"index":450},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\server.rs","byte_start":43900,"byte_end":43915,"line_start":84,"line_end":84,"column_start":8,"column_end":23},"name":"create_response","qualname":"::handshake::server::create_response","value":"pub fn create_response(&Request) -> Result<Response>","parent":null,"children":[],"decl_id":null,"docs":" Create a response for the request.\n","sig":null,"attributes":[{"value":"/ Create a response for the request.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\server.rs","byte_start":43854,"byte_end":43892,"line_start":83,"line_end":83,"column_start":1,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":451},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\server.rs","byte_start":44067,"byte_end":44092,"line_start":89,"line_end":89,"column_start":8,"column_end":33},"name":"create_response_with_body","qualname":"::handshake::server::create_response_with_body","value":"pub fn create_response_with_body<T, impl FnOnce() -> T: FnOnce() ->\n                                 T>(&HttpRequest<T>, impl FnOnce() -> T)\n-> Result<HttpResponse<T>>","parent":null,"children":[],"decl_id":null,"docs":" Create a response for the request with a custom body.\n","sig":null,"attributes":[{"value":"/ Create a response for the request with a custom body.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\server.rs","byte_start":44002,"byte_end":44059,"line_start":88,"line_end":88,"column_start":1,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":464},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\server.rs","byte_start":46379,"byte_end":46387,"line_start":155,"line_end":155,"column_start":11,"column_end":19},"name":"Callback","qualname":"::handshake::server::Callback","value":"Callback: Sized","parent":null,"children":[{"krate":0,"index":465}],"decl_id":null,"docs":" The callback trait.","sig":null,"attributes":[{"value":"/ The callback trait.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\server.rs","byte_start":46024,"byte_end":46047,"line_start":149,"line_end":149,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\server.rs","byte_start":46048,"byte_end":46051,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ The callback is called when the server receives an incoming WebSocket","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\server.rs","byte_start":46052,"byte_end":46125,"line_start":151,"line_end":151,"column_start":1,"column_end":74}},{"value":"/ handshake request from the client. Specifying a callback allows you to analyze incoming headers","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\server.rs","byte_start":46126,"byte_end":46225,"line_start":152,"line_end":152,"column_start":1,"column_end":100}},{"value":"/ and add additional headers to the response that server sends to the client and/or reject the","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\server.rs","byte_start":46226,"byte_end":46322,"line_start":153,"line_end":153,"column_start":1,"column_end":97}},{"value":"/ connection based on the incoming headers.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\server.rs","byte_start":46323,"byte_end":46368,"line_start":154,"line_end":154,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\server.rs","byte_start":46621,"byte_end":46631,"line_start":159,"line_end":159,"column_start":8,"column_end":18},"name":"on_request","qualname":"::handshake::server::Callback::on_request","value":"pub fn on_request(Self, &Request, Response)\n-> StdResult<Response, ErrorResponse>","parent":{"krate":0,"index":464},"children":[],"decl_id":null,"docs":" Called whenever the server read the request from the client and is ready to reply to it.\n May return additional reply headers.\n Returning an error resulting in rejecting the incoming connection.\n","sig":null,"attributes":[{"value":"/ Called whenever the server read the request from the client and is ready to reply to it.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\server.rs","byte_start":46401,"byte_end":46493,"line_start":156,"line_end":156,"column_start":5,"column_end":97}},{"value":"/ May return additional reply headers.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\server.rs","byte_start":46498,"byte_end":46538,"line_start":157,"line_end":157,"column_start":5,"column_end":45}},{"value":"/ Returning an error resulting in rejecting the incoming connection.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\server.rs","byte_start":46543,"byte_end":46613,"line_start":158,"line_end":158,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":1491},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\server.rs","byte_start":47111,"byte_end":47121,"line_start":181,"line_end":181,"column_start":12,"column_end":22},"name":"NoCallback","qualname":"::handshake::server::NoCallback","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stub for callback that does nothing.\n","sig":null,"attributes":[{"value":"/ Stub for callback that does nothing.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\server.rs","byte_start":47029,"byte_end":47069,"line_start":179,"line_end":179,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1498},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\server.rs","byte_start":47414,"byte_end":47429,"line_start":196,"line_end":196,"column_start":12,"column_end":27},"name":"ServerHandshake","qualname":"::handshake::server::ServerHandshake","value":"ServerHandshake {  }","parent":null,"children":[{"krate":0,"index":1501},{"krate":0,"index":1502},{"krate":0,"index":1503},{"krate":0,"index":1504}],"decl_id":null,"docs":" Server handshake role.\n","sig":null,"attributes":[{"value":"/ Server handshake role.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\server.rs","byte_start":47320,"byte_end":47346,"line_start":193,"line_end":193,"column_start":1,"column_end":27}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\server.rs","byte_start":47347,"byte_end":47385,"line_start":194,"line_end":194,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\server.rs","byte_start":48386,"byte_end":48391,"line_start":214,"line_end":214,"column_start":12,"column_end":17},"name":"start","qualname":"<ServerHandshake<S, C>>::start","value":"pub fn start(S, C, Option<WebSocketConfig>) -> MidHandshake<Self>","parent":null,"children":[],"decl_id":null,"docs":" Start server handshake. `callback` specifies a custom callback which the user can pass to\n the handshake, this callback will be called when the a websocket client connnects to the\n server, you can specify the callback if you want to add additional header to the client\n upon join based on the incoming headers.\n","sig":null,"attributes":[{"value":"/ Start server handshake. `callback` specifies a custom callback which the user can pass to","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\server.rs","byte_start":48039,"byte_end":48132,"line_start":210,"line_end":210,"column_start":5,"column_end":98}},{"value":"/ the handshake, this callback will be called when the a websocket client connnects to the","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\server.rs","byte_start":48137,"byte_end":48229,"line_start":211,"line_end":211,"column_start":5,"column_end":97}},{"value":"/ server, you can specify the callback if you want to add additional header to the client","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\server.rs","byte_start":48234,"byte_end":48325,"line_start":212,"line_end":212,"column_start":5,"column_end":96}},{"value":"/ upon join based on the incoming headers.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\server.rs","byte_start":48330,"byte_end":48374,"line_start":213,"line_end":213,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":1509},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\machine.rs","byte_start":52555,"byte_end":52571,"line_start":13,"line_end":13,"column_start":12,"column_end":28},"name":"HandshakeMachine","qualname":"::handshake::machine::HandshakeMachine","value":"HandshakeMachine {  }","parent":null,"children":[{"krate":0,"index":1511},{"krate":0,"index":1512}],"decl_id":null,"docs":" A generic handshake state machine.\n","sig":null,"attributes":[{"value":"/ A generic handshake state machine.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\machine.rs","byte_start":52488,"byte_end":52526,"line_start":11,"line_end":11,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\machine.rs","byte_start":52725,"byte_end":52735,"line_start":20,"line_end":20,"column_start":12,"column_end":22},"name":"start_read","qualname":"<HandshakeMachine<Stream>>::start_read","value":"pub fn start_read(Stream) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Start reading data from the peer.\n","sig":null,"attributes":[{"value":"/ Start reading data from the peer.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\machine.rs","byte_start":52676,"byte_end":52713,"line_start":19,"line_end":19,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":517},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\machine.rs","byte_start":52906,"byte_end":52917,"line_start":24,"line_end":24,"column_start":12,"column_end":23},"name":"start_write","qualname":"<HandshakeMachine<Stream>>::start_write","value":"pub fn start_write<D: Into<Vec<u8>>>(Stream, D) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Start writing data to the peer.\n","sig":null,"attributes":[{"value":"/ Start writing data to the peer.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\machine.rs","byte_start":52859,"byte_end":52894,"line_start":23,"line_end":23,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":519},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\machine.rs","byte_start":53138,"byte_end":53145,"line_start":28,"line_end":28,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<HandshakeMachine<Stream>>::get_ref","value":"pub fn get_ref(&Self) -> &Stream","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the inner stream.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the inner stream.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\machine.rs","byte_start":53075,"byte_end":53126,"line_start":27,"line_end":27,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\machine.rs","byte_start":53261,"byte_end":53268,"line_start":32,"line_end":32,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<HandshakeMachine<Stream>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut Stream","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the inner stream.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the inner stream.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\machine.rs","byte_start":53197,"byte_end":53249,"line_start":31,"line_end":31,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":523},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\machine.rs","byte_start":53438,"byte_end":53450,"line_start":39,"line_end":39,"column_start":12,"column_end":24},"name":"single_round","qualname":"<HandshakeMachine<Stream>>::single_round","value":"pub fn single_round<Obj: TryParse>(Self) -> Result<RoundResult<Obj, Stream>>","parent":null,"children":[],"decl_id":null,"docs":" Perform a single handshake round.\n","sig":null,"attributes":[{"value":"/ Perform a single handshake round.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\machine.rs","byte_start":53389,"byte_end":53426,"line_start":38,"line_end":38,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1519},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\machine.rs","byte_start":55707,"byte_end":55717,"line_start":93,"line_end":93,"column_start":5,"column_end":15},"name":"WouldBlock","qualname":"::handshake::machine::RoundResult::WouldBlock","value":"RoundResult::WouldBlock(HandshakeMachine<Stream>)","parent":{"krate":0,"index":1516},"children":[],"decl_id":null,"docs":" Round not done, I/O would block.\n","sig":null,"attributes":[{"value":"/ Round not done, I/O would block.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\machine.rs","byte_start":55666,"byte_end":55702,"line_start":92,"line_end":92,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1522},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\machine.rs","byte_start":55786,"byte_end":55796,"line_start":95,"line_end":95,"column_start":5,"column_end":15},"name":"Incomplete","qualname":"::handshake::machine::RoundResult::Incomplete","value":"RoundResult::Incomplete(HandshakeMachine<Stream>)","parent":{"krate":0,"index":1516},"children":[],"decl_id":null,"docs":" Round done, state unchanged.\n","sig":null,"attributes":[{"value":"/ Round done, state unchanged.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\machine.rs","byte_start":55749,"byte_end":55781,"line_start":94,"line_end":94,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1525},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\machine.rs","byte_start":55852,"byte_end":55865,"line_start":97,"line_end":97,"column_start":5,"column_end":18},"name":"StageFinished","qualname":"::handshake::machine::RoundResult::StageFinished","value":"RoundResult::StageFinished(StageResult<Obj, Stream>)","parent":{"krate":0,"index":1516},"children":[],"decl_id":null,"docs":" Stage complete.\n","sig":null,"attributes":[{"value":"/ Stage complete.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\machine.rs","byte_start":55828,"byte_end":55847,"line_start":96,"line_end":96,"column_start":5,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":1516},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\machine.rs","byte_start":55635,"byte_end":55646,"line_start":91,"line_end":91,"column_start":10,"column_end":21},"name":"RoundResult","qualname":"::handshake::machine::RoundResult","value":"pub enum RoundResult<Obj, Stream> {\n    WouldBlock(HandshakeMachine<Stream>),\n    Incomplete(HandshakeMachine<Stream>),\n    StageFinished(StageResult<Obj, Stream>),\n}","parent":null,"children":[{"krate":0,"index":1519},{"krate":0,"index":1522},{"krate":0,"index":1525}],"decl_id":null,"docs":" The result of the round.\n","sig":null,"attributes":[{"value":"/ The result of the round.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\machine.rs","byte_start":55580,"byte_end":55608,"line_start":89,"line_end":89,"column_start":1,"column_end":29}}]},{"kind":"StructVariant","id":{"krate":0,"index":1535},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\machine.rs","byte_start":56014,"byte_end":56025,"line_start":104,"line_end":104,"column_start":5,"column_end":16},"name":"DoneReading","qualname":"::handshake::machine::StageResult::DoneReading","value":"StageResult::DoneReading { result, stream, tail }","parent":{"krate":0,"index":1532},"children":[],"decl_id":null,"docs":" Reading round finished.\n","sig":null,"attributes":[{"value":"/ Reading round finished.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\machine.rs","byte_start":55982,"byte_end":56009,"line_start":103,"line_end":103,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1539},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\machine.rs","byte_start":56110,"byte_end":56121,"line_start":106,"line_end":106,"column_start":5,"column_end":16},"name":"DoneWriting","qualname":"::handshake::machine::StageResult::DoneWriting","value":"StageResult::DoneWriting(Stream)","parent":{"krate":0,"index":1532},"children":[],"decl_id":null,"docs":" Writing round finished.\n","sig":null,"attributes":[{"value":"/ Writing round finished.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\machine.rs","byte_start":56078,"byte_end":56105,"line_start":105,"line_end":105,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":1532},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\machine.rs","byte_start":55951,"byte_end":55962,"line_start":102,"line_end":102,"column_start":10,"column_end":21},"name":"StageResult","qualname":"::handshake::machine::StageResult","value":"pub enum StageResult<Obj, Stream> {\n    DoneReading {\n        result: Obj,\n        stream: Stream,\n        tail: Vec<u8>,\n    },\n    DoneWriting(Stream),\n}","parent":null,"children":[{"krate":0,"index":1535},{"krate":0,"index":1539}],"decl_id":null,"docs":" The result of the stage.\n","sig":null,"attributes":[{"value":"/ The result of the stage.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\machine.rs","byte_start":55896,"byte_end":55924,"line_start":100,"line_end":100,"column_start":1,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":525},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\machine.rs","byte_start":56170,"byte_end":56178,"line_start":110,"line_end":110,"column_start":11,"column_end":19},"name":"TryParse","qualname":"::handshake::machine::TryParse","value":"TryParse: Sized","parent":null,"children":[{"krate":0,"index":526}],"decl_id":null,"docs":" The parseable object.\n","sig":null,"attributes":[{"value":"/ The parseable object.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\machine.rs","byte_start":56134,"byte_end":56159,"line_start":109,"line_end":109,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\machine.rs","byte_start":56255,"byte_end":56264,"line_start":112,"line_end":112,"column_start":8,"column_end":17},"name":"try_parse","qualname":"::handshake::machine::TryParse::try_parse","value":"pub fn try_parse(&[u8]) -> Result<Option<(usize, Self)>>","parent":{"krate":0,"index":525},"children":[],"decl_id":null,"docs":" Return Ok(None) if incomplete, Err on syntax error.\n","sig":null,"attributes":[{"value":"/ Return Ok(None) if incomplete, Err on syntax error.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\machine.rs","byte_start":56192,"byte_end":56247,"line_start":111,"line_end":111,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1555},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\mod.rs","byte_start":23536,"byte_end":23548,"line_start":22,"line_end":22,"column_start":12,"column_end":24},"name":"MidHandshake","qualname":"::handshake::MidHandshake","value":"MidHandshake {  }","parent":null,"children":[{"krate":0,"index":1557},{"krate":0,"index":1558}],"decl_id":null,"docs":" A WebSocket handshake.\n","sig":null,"attributes":[{"value":"/ A WebSocket handshake.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\mod.rs","byte_start":23481,"byte_end":23507,"line_start":20,"line_end":20,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\mod.rs","byte_start":23734,"byte_end":23741,"line_start":29,"line_end":29,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<MidHandshake<Role>>::get_ref","value":"pub fn get_ref(&Self) -> &HandshakeMachine<Role::InternalStream>","parent":null,"children":[],"decl_id":null,"docs":" Allow access to machine\n","sig":null,"attributes":[{"value":"/ Allow access to machine","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\mod.rs","byte_start":23695,"byte_end":23722,"line_start":28,"line_end":28,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":567},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\mod.rs","byte_start":23874,"byte_end":23881,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<MidHandshake<Role>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut HandshakeMachine<Role::InternalStream>","parent":null,"children":[],"decl_id":null,"docs":" Allow mutable access to machine\n","sig":null,"attributes":[{"value":"/ Allow mutable access to machine","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\mod.rs","byte_start":23827,"byte_end":23862,"line_start":33,"line_end":33,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":568},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\mod.rs","byte_start":24026,"byte_end":24035,"line_start":39,"line_end":39,"column_start":12,"column_end":21},"name":"handshake","qualname":"<MidHandshake<Role>>::handshake","value":"pub fn handshake(Self) -> Result<Role::FinalResult, HandshakeError<Role>>","parent":null,"children":[],"decl_id":null,"docs":" Restarts the handshake process.\n","sig":null,"attributes":[{"value":"/ Restarts the handshake process.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\mod.rs","byte_start":23979,"byte_end":24014,"line_start":38,"line_end":38,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":571},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\mod.rs","byte_start":24802,"byte_end":24813,"line_start":59,"line_end":59,"column_start":5,"column_end":16},"name":"Interrupted","qualname":"::handshake::HandshakeError::Interrupted","value":"HandshakeError::Interrupted(MidHandshake<Role>)","parent":{"krate":0,"index":569},"children":[],"decl_id":null,"docs":" Handshake was interrupted (would block).\n","sig":null,"attributes":[{"value":"/ Handshake was interrupted (would block).","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\mod.rs","byte_start":24753,"byte_end":24797,"line_start":58,"line_end":58,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":574},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\mod.rs","byte_start":24865,"byte_end":24872,"line_start":61,"line_end":61,"column_start":5,"column_end":12},"name":"Failure","qualname":"::handshake::HandshakeError::Failure","value":"HandshakeError::Failure(Error)","parent":{"krate":0,"index":569},"children":[],"decl_id":null,"docs":" Handshake failed.\n","sig":null,"attributes":[{"value":"/ Handshake failed.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\mod.rs","byte_start":24839,"byte_end":24860,"line_start":60,"line_end":60,"column_start":5,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":569},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\mod.rs","byte_start":24711,"byte_end":24725,"line_start":57,"line_end":57,"column_start":10,"column_end":24},"name":"HandshakeError","qualname":"::handshake::HandshakeError","value":"pub enum HandshakeError<Role: HandshakeRole> {\n    Interrupted(MidHandshake<Role>),\n    Failure(Error),\n}","parent":null,"children":[{"krate":0,"index":571},{"krate":0,"index":574}],"decl_id":null,"docs":" A handshake result.\n","sig":null,"attributes":[{"value":"/ A handshake result.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\mod.rs","byte_start":24678,"byte_end":24701,"line_start":56,"line_end":56,"column_start":1,"column_end":24}}]},{"kind":"Trait","id":{"krate":0,"index":588},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\mod.rs","byte_start":25802,"byte_end":25815,"line_start":91,"line_end":91,"column_start":11,"column_end":24},"name":"HandshakeRole","qualname":"::handshake::HandshakeRole","value":"HandshakeRole","parent":null,"children":[{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":592}],"decl_id":null,"docs":" Handshake role.\n","sig":null,"attributes":[{"value":"/ Handshake role.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\mod.rs","byte_start":25772,"byte_end":25791,"line_start":90,"line_end":90,"column_start":1,"column_end":20}}]},{"kind":"Type","id":{"krate":0,"index":589},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\mod.rs","byte_start":25846,"byte_end":25858,"line_start":93,"line_end":93,"column_start":10,"column_end":22},"name":"IncomingData","qualname":"::handshake::HandshakeRole::IncomingData","value":"type IncomingData: TryParse;","parent":{"krate":0,"index":588},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":590},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\mod.rs","byte_start":25898,"byte_end":25912,"line_start":95,"line_end":95,"column_start":10,"column_end":24},"name":"InternalStream","qualname":"::handshake::HandshakeRole::InternalStream","value":"type InternalStream: Read + Write;","parent":{"krate":0,"index":588},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":591},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\mod.rs","byte_start":25956,"byte_end":25967,"line_start":97,"line_end":97,"column_start":10,"column_end":21},"name":"FinalResult","qualname":"::handshake::HandshakeRole::FinalResult","value":"type FinalResult;","parent":{"krate":0,"index":588},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\mod.rs","byte_start":25995,"byte_end":26009,"line_start":99,"line_end":99,"column_start":8,"column_end":22},"name":"stage_finished","qualname":"::handshake::HandshakeRole::stage_finished","value":"pub fn stage_finished(&mut Self,\n                      StageResult<Self::IncomingData, Self::InternalStream>)\n-> Result<ProcessingResult<Self::InternalStream, Self::FinalResult>, Error>","parent":{"krate":0,"index":588},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1565},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\mod.rs","byte_start":26301,"byte_end":26309,"line_start":109,"line_end":109,"column_start":5,"column_end":13},"name":"Continue","qualname":"::handshake::ProcessingResult::Continue","value":"ProcessingResult::Continue(HandshakeMachine<Stream>)","parent":{"krate":0,"index":1562},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1568},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\mod.rs","byte_start":26341,"byte_end":26345,"line_start":110,"line_end":110,"column_start":5,"column_end":9},"name":"Done","qualname":"::handshake::ProcessingResult::Done","value":"ProcessingResult::Done(FinalResult)","parent":{"krate":0,"index":1562},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1562},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\mod.rs","byte_start":26257,"byte_end":26273,"line_start":108,"line_end":108,"column_start":10,"column_end":26},"name":"ProcessingResult","qualname":"::handshake::ProcessingResult","value":"pub enum ProcessingResult<Stream, FinalResult> {\n    Continue(HandshakeMachine<Stream>),\n    Done(FinalResult),\n}","parent":null,"children":[{"krate":0,"index":1565},{"krate":0,"index":1568}],"decl_id":null,"docs":" Stage processing result.\n","sig":null,"attributes":[{"value":"/ Stage processing result.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\mod.rs","byte_start":26187,"byte_end":26215,"line_start":105,"line_end":105,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":593},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\mod.rs","byte_start":26640,"byte_end":26657,"line_start":117,"line_end":117,"column_start":8,"column_end":25},"name":"derive_accept_key","qualname":"::handshake::derive_accept_key","value":"pub fn derive_accept_key(&[u8]) -> String","parent":null,"children":[],"decl_id":null,"docs":" Derive the `Sec-WebSocket-Accept` response header from a `Sec-WebSocket-Key` request header.","sig":null,"attributes":[{"value":"/ Derive the `Sec-WebSocket-Accept` response header from a `Sec-WebSocket-Key` request header.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\mod.rs","byte_start":26363,"byte_end":26459,"line_start":113,"line_end":113,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\mod.rs","byte_start":26460,"byte_end":26463,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ This function can be used to perform a handshake before passing a raw TCP stream to","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\mod.rs","byte_start":26464,"byte_end":26551,"line_start":115,"line_end":115,"column_start":1,"column_end":88}},{"value":"/ [`WebSocket::from_raw_socket`][crate::protocol::WebSocket::from_raw_socket].","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\mod.rs","byte_start":26552,"byte_end":26632,"line_start":116,"line_end":116,"column_start":1,"column_end":81}}]},{"kind":"Mod","id":{"krate":0,"index":595},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"protocol","qualname":"::protocol","value":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","parent":null,"children":[{"krate":0,"index":596},{"krate":0,"index":879},{"krate":0,"index":982},{"krate":0,"index":983},{"krate":0,"index":986},{"krate":0,"index":989},{"krate":0,"index":990},{"krate":0,"index":991},{"krate":0,"index":994},{"krate":0,"index":995},{"krate":0,"index":998},{"krate":0,"index":1001},{"krate":0,"index":1004},{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1010},{"krate":0,"index":1013},{"krate":0,"index":1016},{"krate":0,"index":1019},{"krate":0,"index":1022},{"krate":0,"index":1025},{"krate":0,"index":1028},{"krate":0,"index":1029},{"krate":0,"index":1032},{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":1040},{"krate":0,"index":1043},{"krate":0,"index":1046},{"krate":0,"index":1790},{"krate":0,"index":1795},{"krate":0,"index":1797},{"krate":0,"index":1799},{"krate":0,"index":1800},{"krate":0,"index":1801},{"krate":0,"index":1803},{"krate":0,"index":1804},{"krate":0,"index":1806},{"krate":0,"index":1811},{"krate":0,"index":1813},{"krate":0,"index":1815},{"krate":0,"index":1049},{"krate":0,"index":1816},{"krate":0,"index":1820},{"krate":0,"index":1051},{"krate":0,"index":1062},{"krate":0,"index":1823},{"krate":0,"index":1831},{"krate":0,"index":1068},{"krate":0,"index":1833},{"krate":0,"index":1844},{"krate":0,"index":1846},{"krate":0,"index":1847},{"krate":0,"index":1849},{"krate":0,"index":1850},{"krate":0,"index":1852},{"krate":0,"index":1854},{"krate":0,"index":1091},{"krate":0,"index":1095},{"krate":0,"index":1097}],"decl_id":null,"docs":" Generic WebSocket message stream.\n","sig":null,"attributes":[{"value":"/ Generic WebSocket message stream.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":56507,"byte_end":56544,"line_start":1,"line_end":1,"column_start":1,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":596},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"frame","qualname":"::protocol::frame","value":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\mod.rs","parent":null,"children":[{"krate":0,"index":597},{"krate":0,"index":675},{"krate":0,"index":809},{"krate":0,"index":818},{"krate":0,"index":819},{"krate":0,"index":822},{"krate":0,"index":825},{"krate":0,"index":828},{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":833},{"krate":0,"index":836},{"krate":0,"index":839},{"krate":0,"index":842},{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":847},{"krate":0,"index":850},{"krate":0,"index":853},{"krate":0,"index":1732},{"krate":0,"index":1736},{"krate":0,"index":856},{"krate":0,"index":863},{"krate":0,"index":866},{"krate":0,"index":1739},{"krate":0,"index":1743},{"krate":0,"index":870}],"decl_id":null,"docs":" Utilities to work with raw WebSocket frames.\n","sig":null,"attributes":[{"value":"/ Utilities to work with raw WebSocket frames.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\mod.rs","byte_start":86659,"byte_end":86707,"line_start":1,"line_end":1,"column_start":1,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":597},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"coding","qualname":"::protocol::frame::coding","value":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","parent":null,"children":[{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":603},{"krate":0,"index":606},{"krate":0,"index":1575},{"krate":0,"index":1582},{"krate":0,"index":1584},{"krate":0,"index":1585},{"krate":0,"index":1588},{"krate":0,"index":1589},{"krate":0,"index":1591},{"krate":0,"index":1593},{"krate":0,"index":1594},{"krate":0,"index":1604},{"krate":0,"index":1606},{"krate":0,"index":1607},{"krate":0,"index":1610},{"krate":0,"index":1611},{"krate":0,"index":1613},{"krate":0,"index":1615},{"krate":0,"index":1616},{"krate":0,"index":1626},{"krate":0,"index":1628},{"krate":0,"index":1629},{"krate":0,"index":1632},{"krate":0,"index":1633},{"krate":0,"index":1635},{"krate":0,"index":1637},{"krate":0,"index":609},{"krate":0,"index":611},{"krate":0,"index":613},{"krate":0,"index":615},{"krate":0,"index":639},{"krate":0,"index":663},{"krate":0,"index":1638},{"krate":0,"index":1679},{"krate":0,"index":1681},{"krate":0,"index":1682},{"krate":0,"index":1684},{"krate":0,"index":1685},{"krate":0,"index":1688},{"krate":0,"index":1690},{"krate":0,"index":664},{"krate":0,"index":666},{"krate":0,"index":668},{"krate":0,"index":670},{"krate":0,"index":673}],"decl_id":null,"docs":" Various codes defined in RFC 6455.\n","sig":null,"attributes":[{"value":"/ Various codes defined in RFC 6455.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":94982,"byte_end":95020,"line_start":1,"line_end":1,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1576},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":95216,"byte_end":95220,"line_start":12,"line_end":12,"column_start":5,"column_end":9},"name":"Data","qualname":"::protocol::frame::coding::OpCode::Data","value":"OpCode::Data(Data)","parent":{"krate":0,"index":1575},"children":[],"decl_id":null,"docs":" Data (text or binary).\n","sig":null,"attributes":[{"value":"/ Data (text or binary).","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":95185,"byte_end":95211,"line_start":11,"line_end":11,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1579},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":95277,"byte_end":95284,"line_start":14,"line_end":14,"column_start":5,"column_end":12},"name":"Control","qualname":"::protocol::frame::coding::OpCode::Control","value":"OpCode::Control(Control)","parent":{"krate":0,"index":1575},"children":[],"decl_id":null,"docs":" Control message (close, ping, pong).\n","sig":null,"attributes":[{"value":"/ Control message (close, ping, pong).","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":95232,"byte_end":95272,"line_start":13,"line_end":13,"column_start":5,"column_end":45}}]},{"kind":"Enum","id":{"krate":0,"index":1575},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":95172,"byte_end":95178,"line_start":10,"line_end":10,"column_start":10,"column_end":16},"name":"OpCode","qualname":"::protocol::frame::coding::OpCode","value":"pub enum OpCode { Data(Data), Control(Control), }","parent":null,"children":[{"krate":0,"index":1576},{"krate":0,"index":1579}],"decl_id":null,"docs":" WebSocket message opcode as in RFC 6455.\n","sig":null,"attributes":[{"value":"/ WebSocket message opcode as in RFC 6455.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":95073,"byte_end":95117,"line_start":8,"line_end":8,"column_start":1,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1595},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":95436,"byte_end":95444,"line_start":21,"line_end":21,"column_start":5,"column_end":13},"name":"Continue","qualname":"::protocol::frame::coding::Data::Continue","value":"Data::Continue","parent":{"krate":0,"index":1594},"children":[],"decl_id":null,"docs":" 0x0 denotes a continuation frame\n","sig":null,"attributes":[{"value":"/ 0x0 denotes a continuation frame","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":95395,"byte_end":95431,"line_start":20,"line_end":20,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1597},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":95483,"byte_end":95487,"line_start":23,"line_end":23,"column_start":5,"column_end":9},"name":"Text","qualname":"::protocol::frame::coding::Data::Text","value":"Data::Text","parent":{"krate":0,"index":1594},"children":[],"decl_id":null,"docs":" 0x1 denotes a text frame\n","sig":null,"attributes":[{"value":"/ 0x1 denotes a text frame","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":95450,"byte_end":95478,"line_start":22,"line_end":22,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1599},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":95528,"byte_end":95534,"line_start":25,"line_end":25,"column_start":5,"column_end":11},"name":"Binary","qualname":"::protocol::frame::coding::Data::Binary","value":"Data::Binary","parent":{"krate":0,"index":1594},"children":[],"decl_id":null,"docs":" 0x2 denotes a binary frame\n","sig":null,"attributes":[{"value":"/ 0x2 denotes a binary frame","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":95493,"byte_end":95523,"line_start":24,"line_end":24,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1601},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":95598,"byte_end":95606,"line_start":27,"line_end":27,"column_start":5,"column_end":13},"name":"Reserved","qualname":"::protocol::frame::coding::Data::Reserved","value":"Data::Reserved(u8)","parent":{"krate":0,"index":1594},"children":[],"decl_id":null,"docs":" 0x3-7 are reserved for further non-control frames\n","sig":null,"attributes":[{"value":"/ 0x3-7 are reserved for further non-control frames","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":95540,"byte_end":95593,"line_start":26,"line_end":26,"column_start":5,"column_end":58}}]},{"kind":"Enum","id":{"krate":0,"index":1594},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":95384,"byte_end":95388,"line_start":19,"line_end":19,"column_start":10,"column_end":14},"name":"Data","qualname":"::protocol::frame::coding::Data","value":"pub enum Data { Continue, Text, Binary, Reserved(u8), }","parent":null,"children":[{"krate":0,"index":1595},{"krate":0,"index":1597},{"krate":0,"index":1599},{"krate":0,"index":1601}],"decl_id":null,"docs":" Data opcodes as in RFC 6455\n","sig":null,"attributes":[{"value":"/ Data opcodes as in RFC 6455","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":95298,"byte_end":95329,"line_start":17,"line_end":17,"column_start":1,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1617},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":95757,"byte_end":95762,"line_start":34,"line_end":34,"column_start":5,"column_end":10},"name":"Close","qualname":"::protocol::frame::coding::Control::Close","value":"Control::Close","parent":{"krate":0,"index":1616},"children":[],"decl_id":null,"docs":" 0x8 denotes a connection close\n","sig":null,"attributes":[{"value":"/ 0x8 denotes a connection close","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":95718,"byte_end":95752,"line_start":33,"line_end":33,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1619},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":95795,"byte_end":95799,"line_start":36,"line_end":36,"column_start":5,"column_end":9},"name":"Ping","qualname":"::protocol::frame::coding::Control::Ping","value":"Control::Ping","parent":{"krate":0,"index":1616},"children":[],"decl_id":null,"docs":" 0x9 denotes a ping\n","sig":null,"attributes":[{"value":"/ 0x9 denotes a ping","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":95768,"byte_end":95790,"line_start":35,"line_end":35,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1621},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":95832,"byte_end":95836,"line_start":38,"line_end":38,"column_start":5,"column_end":9},"name":"Pong","qualname":"::protocol::frame::coding::Control::Pong","value":"Control::Pong","parent":{"krate":0,"index":1616},"children":[],"decl_id":null,"docs":" 0xa denotes a pong\n","sig":null,"attributes":[{"value":"/ 0xa denotes a pong","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":95805,"byte_end":95827,"line_start":37,"line_end":37,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1623},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":95896,"byte_end":95904,"line_start":40,"line_end":40,"column_start":5,"column_end":13},"name":"Reserved","qualname":"::protocol::frame::coding::Control::Reserved","value":"Control::Reserved(u8)","parent":{"krate":0,"index":1616},"children":[],"decl_id":null,"docs":" 0xb-f are reserved for further control frames\n","sig":null,"attributes":[{"value":"/ 0xb-f are reserved for further control frames","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":95842,"byte_end":95891,"line_start":39,"line_end":39,"column_start":5,"column_end":54}}]},{"kind":"Enum","id":{"krate":0,"index":1616},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":95704,"byte_end":95711,"line_start":32,"line_end":32,"column_start":10,"column_end":17},"name":"Control","qualname":"::protocol::frame::coding::Control","value":"pub enum Control { Close, Ping, Pong, Reserved(u8), }","parent":null,"children":[{"krate":0,"index":1617},{"krate":0,"index":1619},{"krate":0,"index":1621},{"krate":0,"index":1623}],"decl_id":null,"docs":" Control opcodes as in RFC 6455\n","sig":null,"attributes":[{"value":"/ Control opcodes as in RFC 6455","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":95615,"byte_end":95649,"line_start":30,"line_end":30,"column_start":1,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1639},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":98275,"byte_end":98281,"line_start":122,"line_end":122,"column_start":5,"column_end":11},"name":"Normal","qualname":"::protocol::frame::coding::CloseCode::Normal","value":"CloseCode::Normal","parent":{"krate":0,"index":1638},"children":[],"decl_id":null,"docs":" Indicates a normal closure, meaning that the purpose for\n which the connection was established has been fulfilled.\n","sig":null,"attributes":[{"value":"/ Indicates a normal closure, meaning that the purpose for","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":98145,"byte_end":98205,"line_start":120,"line_end":120,"column_start":5,"column_end":65}},{"value":"/ which the connection was established has been fulfilled.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":98210,"byte_end":98270,"line_start":121,"line_end":121,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1641},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":98423,"byte_end":98427,"line_start":125,"line_end":125,"column_start":5,"column_end":9},"name":"Away","qualname":"::protocol::frame::coding::CloseCode::Away","value":"CloseCode::Away","parent":{"krate":0,"index":1638},"children":[],"decl_id":null,"docs":" Indicates that an endpoint is \"going away\", such as a server\n going down or a browser having navigated away from a page.\n","sig":null,"attributes":[{"value":"/ Indicates that an endpoint is \"going away\", such as a server","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":98287,"byte_end":98351,"line_start":123,"line_end":123,"column_start":5,"column_end":69}},{"value":"/ going down or a browser having navigated away from a page.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":98356,"byte_end":98418,"line_start":124,"line_end":124,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1643},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":98531,"byte_end":98539,"line_start":128,"line_end":128,"column_start":5,"column_end":13},"name":"Protocol","qualname":"::protocol::frame::coding::CloseCode::Protocol","value":"CloseCode::Protocol","parent":{"krate":0,"index":1638},"children":[],"decl_id":null,"docs":" Indicates that an endpoint is terminating the connection due\n to a protocol error.\n","sig":null,"attributes":[{"value":"/ Indicates that an endpoint is terminating the connection due","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":98433,"byte_end":98497,"line_start":126,"line_end":126,"column_start":5,"column_end":69}},{"value":"/ to a protocol error.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":98502,"byte_end":98526,"line_start":127,"line_end":127,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1645},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":98789,"byte_end":98800,"line_start":133,"line_end":133,"column_start":5,"column_end":16},"name":"Unsupported","qualname":"::protocol::frame::coding::CloseCode::Unsupported","value":"CloseCode::Unsupported","parent":{"krate":0,"index":1638},"children":[],"decl_id":null,"docs":" Indicates that an endpoint is terminating the connection\n because it has received a type of data it cannot accept (e.g., an\n endpoint that understands only text data MAY send this if it\n receives a binary message).\n","sig":null,"attributes":[{"value":"/ Indicates that an endpoint is terminating the connection","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":98545,"byte_end":98605,"line_start":129,"line_end":129,"column_start":5,"column_end":65}},{"value":"/ because it has received a type of data it cannot accept (e.g., an","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":98610,"byte_end":98679,"line_start":130,"line_end":130,"column_start":5,"column_end":74}},{"value":"/ endpoint that understands only text data MAY send this if it","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":98684,"byte_end":98748,"line_start":131,"line_end":131,"column_start":5,"column_end":69}},{"value":"/ receives a binary message).","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":98753,"byte_end":98784,"line_start":132,"line_end":132,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1647},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":99017,"byte_end":99023,"line_start":137,"line_end":137,"column_start":5,"column_end":11},"name":"Status","qualname":"::protocol::frame::coding::CloseCode::Status","value":"CloseCode::Status","parent":{"krate":0,"index":1638},"children":[],"decl_id":null,"docs":" Indicates that no status code was included in a closing frame. This\n close code makes it possible to use a single method, `on_close` to\n handle even cases where no close code was provided.\n","sig":null,"attributes":[{"value":"/ Indicates that no status code was included in a closing frame. This","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":98806,"byte_end":98877,"line_start":134,"line_end":134,"column_start":5,"column_end":76}},{"value":"/ close code makes it possible to use a single method, `on_close` to","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":98882,"byte_end":98952,"line_start":135,"line_end":135,"column_start":5,"column_end":75}},{"value":"/ handle even cases where no close code was provided.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":98957,"byte_end":99012,"line_start":136,"line_end":136,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1649},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":99365,"byte_end":99373,"line_start":143,"line_end":143,"column_start":5,"column_end":13},"name":"Abnormal","qualname":"::protocol::frame::coding::CloseCode::Abnormal","value":"CloseCode::Abnormal","parent":{"krate":0,"index":1638},"children":[],"decl_id":null,"docs":" Indicates an abnormal closure. If the abnormal closure was due to an\n error, this close code will not be used. Instead, the `on_error` method\n of the handler will be called with the error. However, if the connection\n is simply dropped, without an error, this close code will be sent to the\n handler.\n","sig":null,"attributes":[{"value":"/ Indicates an abnormal closure. If the abnormal closure was due to an","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":99029,"byte_end":99101,"line_start":138,"line_end":138,"column_start":5,"column_end":77}},{"value":"/ error, this close code will not be used. Instead, the `on_error` method","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":99106,"byte_end":99181,"line_start":139,"line_end":139,"column_start":5,"column_end":80}},{"value":"/ of the handler will be called with the error. However, if the connection","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":99186,"byte_end":99262,"line_start":140,"line_end":140,"column_start":5,"column_end":81}},{"value":"/ is simply dropped, without an error, this close code will be sent to the","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":99267,"byte_end":99343,"line_start":141,"line_end":141,"column_start":5,"column_end":81}},{"value":"/ handler.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":99348,"byte_end":99360,"line_start":142,"line_end":142,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1651},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":99625,"byte_end":99632,"line_start":148,"line_end":148,"column_start":5,"column_end":12},"name":"Invalid","qualname":"::protocol::frame::coding::CloseCode::Invalid","value":"CloseCode::Invalid","parent":{"krate":0,"index":1638},"children":[],"decl_id":null,"docs":" Indicates that an endpoint is terminating the connection\n because it has received data within a message that was not\n consistent with the type of the message (e.g., non-UTF-8 \\[RFC3629\\]\n data within a text message).\n","sig":null,"attributes":[{"value":"/ Indicates that an endpoint is terminating the connection","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":99379,"byte_end":99439,"line_start":144,"line_end":144,"column_start":5,"column_end":65}},{"value":"/ because it has received data within a message that was not","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":99444,"byte_end":99506,"line_start":145,"line_end":145,"column_start":5,"column_end":67}},{"value":"/ consistent with the type of the message (e.g., non-UTF-8 \\[RFC3629\\]","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":99511,"byte_end":99583,"line_start":146,"line_end":146,"column_start":5,"column_end":77}},{"value":"/ data within a text message).","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":99588,"byte_end":99620,"line_start":147,"line_end":147,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1653},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":99989,"byte_end":99995,"line_start":154,"line_end":154,"column_start":5,"column_end":11},"name":"Policy","qualname":"::protocol::frame::coding::CloseCode::Policy","value":"CloseCode::Policy","parent":{"krate":0,"index":1638},"children":[],"decl_id":null,"docs":" Indicates that an endpoint is terminating the connection\n because it has received a message that violates its policy.  This\n is a generic status code that can be returned when there is no\n other more suitable status code (e.g., Unsupported or Size) or if there\n is a need to hide specific details about the policy.\n","sig":null,"attributes":[{"value":"/ Indicates that an endpoint is terminating the connection","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":99638,"byte_end":99698,"line_start":149,"line_end":149,"column_start":5,"column_end":65}},{"value":"/ because it has received a message that violates its policy.  This","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":99703,"byte_end":99772,"line_start":150,"line_end":150,"column_start":5,"column_end":74}},{"value":"/ is a generic status code that can be returned when there is no","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":99777,"byte_end":99843,"line_start":151,"line_end":151,"column_start":5,"column_end":71}},{"value":"/ other more suitable status code (e.g., Unsupported or Size) or if there","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":99848,"byte_end":99923,"line_start":152,"line_end":152,"column_start":5,"column_end":80}},{"value":"/ is a need to hide specific details about the policy.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":99928,"byte_end":99984,"line_start":153,"line_end":153,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1655},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":100151,"byte_end":100155,"line_start":158,"line_end":158,"column_start":5,"column_end":9},"name":"Size","qualname":"::protocol::frame::coding::CloseCode::Size","value":"CloseCode::Size","parent":{"krate":0,"index":1638},"children":[],"decl_id":null,"docs":" Indicates that an endpoint is terminating the connection\n because it has received a message that is too big for it to\n process.\n","sig":null,"attributes":[{"value":"/ Indicates that an endpoint is terminating the connection","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":100001,"byte_end":100061,"line_start":155,"line_end":155,"column_start":5,"column_end":65}},{"value":"/ because it has received a message that is too big for it to","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":100066,"byte_end":100129,"line_start":156,"line_end":156,"column_start":5,"column_end":68}},{"value":"/ process.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":100134,"byte_end":100146,"line_start":157,"line_end":157,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1657},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":100630,"byte_end":100639,"line_start":166,"line_end":166,"column_start":5,"column_end":14},"name":"Extension","qualname":"::protocol::frame::coding::CloseCode::Extension","value":"CloseCode::Extension","parent":{"krate":0,"index":1638},"children":[],"decl_id":null,"docs":" Indicates that an endpoint (client) is terminating the\n connection because it has expected the server to negotiate one or\n more extension, but the server didn't return them in the response\n message of the WebSocket handshake.  The list of extensions that\n are needed should be given as the reason for closing.\n Note that this status code is not used by the server, because it\n can fail the WebSocket handshake instead.\n","sig":null,"attributes":[{"value":"/ Indicates that an endpoint (client) is terminating the","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":100161,"byte_end":100219,"line_start":159,"line_end":159,"column_start":5,"column_end":63}},{"value":"/ connection because it has expected the server to negotiate one or","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":100224,"byte_end":100293,"line_start":160,"line_end":160,"column_start":5,"column_end":74}},{"value":"/ more extension, but the server didn't return them in the response","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":100298,"byte_end":100367,"line_start":161,"line_end":161,"column_start":5,"column_end":74}},{"value":"/ message of the WebSocket handshake.  The list of extensions that","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":100372,"byte_end":100440,"line_start":162,"line_end":162,"column_start":5,"column_end":73}},{"value":"/ are needed should be given as the reason for closing.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":100445,"byte_end":100502,"line_start":163,"line_end":163,"column_start":5,"column_end":62}},{"value":"/ Note that this status code is not used by the server, because it","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":100507,"byte_end":100575,"line_start":164,"line_end":164,"column_start":5,"column_end":73}},{"value":"/ can fail the WebSocket handshake instead.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":100580,"byte_end":100625,"line_start":165,"line_end":165,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1659},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":100817,"byte_end":100822,"line_start":170,"line_end":170,"column_start":5,"column_end":10},"name":"Error","qualname":"::protocol::frame::coding::CloseCode::Error","value":"CloseCode::Error","parent":{"krate":0,"index":1638},"children":[],"decl_id":null,"docs":" Indicates that a server is terminating the connection because\n it encountered an unexpected condition that prevented it from\n fulfilling the request.\n","sig":null,"attributes":[{"value":"/ Indicates that a server is terminating the connection because","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":100645,"byte_end":100710,"line_start":167,"line_end":167,"column_start":5,"column_end":70}},{"value":"/ it encountered an unexpected condition that prevented it from","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":100715,"byte_end":100780,"line_start":168,"line_end":168,"column_start":5,"column_end":70}},{"value":"/ fulfilling the request.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":100785,"byte_end":100812,"line_start":169,"line_end":169,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1661},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":101002,"byte_end":101009,"line_start":173,"line_end":173,"column_start":5,"column_end":12},"name":"Restart","qualname":"::protocol::frame::coding::CloseCode::Restart","value":"CloseCode::Restart","parent":{"krate":0,"index":1638},"children":[],"decl_id":null,"docs":" Indicates that the server is restarting. A client may choose to reconnect,\n and if it does, it should use a randomized delay of 5-30 seconds between attempts.\n","sig":null,"attributes":[{"value":"/ Indicates that the server is restarting. A client may choose to reconnect,","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":100828,"byte_end":100906,"line_start":171,"line_end":171,"column_start":5,"column_end":83}},{"value":"/ and if it does, it should use a randomized delay of 5-30 seconds between attempts.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":100911,"byte_end":100997,"line_start":172,"line_end":172,"column_start":5,"column_end":91}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1663},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":101230,"byte_end":101235,"line_start":177,"line_end":177,"column_start":5,"column_end":10},"name":"Again","qualname":"::protocol::frame::coding::CloseCode::Again","value":"CloseCode::Again","parent":{"krate":0,"index":1638},"children":[],"decl_id":null,"docs":" Indicates that the server is overloaded and the client should either connect\n to a different IP (when multiple targets exist), or reconnect to the same IP\n when a user has performed an action.\n","sig":null,"attributes":[{"value":"/ Indicates that the server is overloaded and the client should either connect","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":101015,"byte_end":101095,"line_start":174,"line_end":174,"column_start":5,"column_end":85}},{"value":"/ to a different IP (when multiple targets exist), or reconnect to the same IP","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":101100,"byte_end":101180,"line_start":175,"line_end":175,"column_start":5,"column_end":85}},{"value":"/ when a user has performed an action.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":101185,"byte_end":101225,"line_start":176,"line_end":176,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1665},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":101260,"byte_end":101263,"line_start":179,"line_end":179,"column_start":5,"column_end":8},"name":"Tls","qualname":"::protocol::frame::coding::CloseCode::Tls","value":"CloseCode::Tls","parent":{"krate":0,"index":1638},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1667},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":101288,"byte_end":101296,"line_start":181,"line_end":181,"column_start":5,"column_end":13},"name":"Reserved","qualname":"::protocol::frame::coding::CloseCode::Reserved","value":"CloseCode::Reserved(u16)","parent":{"krate":0,"index":1638},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1670},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":101326,"byte_end":101330,"line_start":183,"line_end":183,"column_start":5,"column_end":9},"name":"Iana","qualname":"::protocol::frame::coding::CloseCode::Iana","value":"CloseCode::Iana(u16)","parent":{"krate":0,"index":1638},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1673},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":101360,"byte_end":101367,"line_start":185,"line_end":185,"column_start":5,"column_end":12},"name":"Library","qualname":"::protocol::frame::coding::CloseCode::Library","value":"CloseCode::Library(u16)","parent":{"krate":0,"index":1638},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1676},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":101397,"byte_end":101400,"line_start":187,"line_end":187,"column_start":5,"column_end":8},"name":"Bad","qualname":"::protocol::frame::coding::CloseCode::Bad","value":"CloseCode::Bad(u16)","parent":{"krate":0,"index":1638},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1638},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":98129,"byte_end":98138,"line_start":119,"line_end":119,"column_start":10,"column_end":19},"name":"CloseCode","qualname":"::protocol::frame::coding::CloseCode","value":"pub enum CloseCode {\n    Normal,\n    Away,\n    Protocol,\n    Unsupported,\n    Status,\n    Abnormal,\n    Invalid,\n    Policy,\n    Size,\n    Extension,\n    Error,\n    Restart,\n    Again,\n    Tls,\n    Reserved(u16),\n    Iana(u16),\n    Library(u16),\n    Bad(u16),\n}","parent":null,"children":[{"krate":0,"index":1639},{"krate":0,"index":1641},{"krate":0,"index":1643},{"krate":0,"index":1645},{"krate":0,"index":1647},{"krate":0,"index":1649},{"krate":0,"index":1651},{"krate":0,"index":1653},{"krate":0,"index":1655},{"krate":0,"index":1657},{"krate":0,"index":1659},{"krate":0,"index":1661},{"krate":0,"index":1663},{"krate":0,"index":1665},{"krate":0,"index":1667},{"krate":0,"index":1670},{"krate":0,"index":1673},{"krate":0,"index":1676}],"decl_id":null,"docs":" Status code used to indicate why an endpoint is closing the WebSocket connection.\n","sig":null,"attributes":[{"value":"/ Status code used to indicate why an endpoint is closing the WebSocket connection.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":97989,"byte_end":98074,"line_start":117,"line_end":117,"column_start":1,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":665},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":101482,"byte_end":101492,"line_start":192,"line_end":192,"column_start":12,"column_end":22},"name":"is_allowed","qualname":"<CloseCode>::is_allowed","value":"pub fn is_allowed(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if this CloseCode is allowed.\n","sig":null,"attributes":[{"value":"/ Check if this CloseCode is allowed.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":101431,"byte_end":101470,"line_start":191,"line_end":191,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":1691},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":104394,"byte_end":104404,"line_start":20,"line_end":20,"column_start":12,"column_end":22},"name":"CloseFrame","qualname":"::protocol::frame::frame::CloseFrame","value":"CloseFrame { code, reason }","parent":null,"children":[{"krate":0,"index":1693},{"krate":0,"index":1694}],"decl_id":null,"docs":" A struct representing the close command.\n","sig":null,"attributes":[{"value":"/ A struct representing the close command.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":104299,"byte_end":104343,"line_start":18,"line_end":18,"column_start":1,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":1693},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":104449,"byte_end":104453,"line_start":22,"line_end":22,"column_start":9,"column_end":13},"name":"code","qualname":"::protocol::frame::frame::CloseFrame::code","value":"protocol::frame::coding::CloseCode","parent":{"krate":0,"index":1691},"children":[],"decl_id":null,"docs":" The reason as a code.\n","sig":null,"attributes":[{"value":"/ The reason as a code.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":104415,"byte_end":104440,"line_start":21,"line_end":21,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":1694},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":104509,"byte_end":104515,"line_start":24,"line_end":24,"column_start":9,"column_end":15},"name":"reason","qualname":"::protocol::frame::frame::CloseFrame::reason","value":"std::borrow::Cow<'t, str>","parent":{"krate":0,"index":1691},"children":[],"decl_id":null,"docs":" The reason as text string.\n","sig":null,"attributes":[{"value":"/ The reason as text string.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":104470,"byte_end":104500,"line_start":23,"line_end":23,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":756},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":104608,"byte_end":104618,"line_start":29,"line_end":29,"column_start":12,"column_end":22},"name":"into_owned","qualname":"<CloseFrame>::into_owned","value":"pub fn into_owned(Self) -> CloseFrame","parent":null,"children":[],"decl_id":null,"docs":" Convert into a owned string.\n","sig":null,"attributes":[{"value":"/ Convert into a owned string.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":104564,"byte_end":104596,"line_start":28,"line_end":28,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1712},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":105029,"byte_end":105040,"line_start":43,"line_end":43,"column_start":12,"column_end":23},"name":"FrameHeader","qualname":"::protocol::frame::frame::FrameHeader","value":"FrameHeader { is_final, rsv1, rsv2, rsv3, opcode, mask }","parent":null,"children":[{"krate":0,"index":1713},{"krate":0,"index":1714},{"krate":0,"index":1715},{"krate":0,"index":1716},{"krate":0,"index":1717},{"krate":0,"index":1718}],"decl_id":null,"docs":" A struct representing a WebSocket frame header.\n","sig":null,"attributes":[{"value":"/ A struct representing a WebSocket frame header.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":104903,"byte_end":104954,"line_start":40,"line_end":40,"column_start":1,"column_end":52}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":104955,"byte_end":104993,"line_start":41,"line_end":41,"column_start":1,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":1713},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":105134,"byte_end":105142,"line_start":45,"line_end":45,"column_start":9,"column_end":17},"name":"is_final","qualname":"::protocol::frame::frame::FrameHeader::is_final","value":"bool","parent":{"krate":0,"index":1712},"children":[],"decl_id":null,"docs":" Indicates that the frame is the last one of a possibly fragmented message.\n","sig":null,"attributes":[{"value":"/ Indicates that the frame is the last one of a possibly fragmented message.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":105047,"byte_end":105125,"line_start":44,"line_end":44,"column_start":5,"column_end":83}}]},{"kind":"Field","id":{"krate":0,"index":1714},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":105200,"byte_end":105204,"line_start":47,"line_end":47,"column_start":9,"column_end":13},"name":"rsv1","qualname":"::protocol::frame::frame::FrameHeader::rsv1","value":"bool","parent":{"krate":0,"index":1712},"children":[],"decl_id":null,"docs":" Reserved for protocol extensions.\n","sig":null,"attributes":[{"value":"/ Reserved for protocol extensions.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":105154,"byte_end":105191,"line_start":46,"line_end":46,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1715},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":105262,"byte_end":105266,"line_start":49,"line_end":49,"column_start":9,"column_end":13},"name":"rsv2","qualname":"::protocol::frame::frame::FrameHeader::rsv2","value":"bool","parent":{"krate":0,"index":1712},"children":[],"decl_id":null,"docs":" Reserved for protocol extensions.\n","sig":null,"attributes":[{"value":"/ Reserved for protocol extensions.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":105216,"byte_end":105253,"line_start":48,"line_end":48,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1716},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":105324,"byte_end":105328,"line_start":51,"line_end":51,"column_start":9,"column_end":13},"name":"rsv3","qualname":"::protocol::frame::frame::FrameHeader::rsv3","value":"bool","parent":{"krate":0,"index":1712},"children":[],"decl_id":null,"docs":" Reserved for protocol extensions.\n","sig":null,"attributes":[{"value":"/ Reserved for protocol extensions.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":105278,"byte_end":105315,"line_start":50,"line_end":50,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1717},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":105379,"byte_end":105385,"line_start":53,"line_end":53,"column_start":9,"column_end":15},"name":"opcode","qualname":"::protocol::frame::frame::FrameHeader::opcode","value":"protocol::frame::coding::OpCode","parent":{"krate":0,"index":1712},"children":[],"decl_id":null,"docs":" WebSocket protocol opcode.\n","sig":null,"attributes":[{"value":"/ WebSocket protocol opcode.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":105340,"byte_end":105370,"line_start":52,"line_end":52,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":1718},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":105433,"byte_end":105437,"line_start":55,"line_end":55,"column_start":9,"column_end":13},"name":"mask","qualname":"::protocol::frame::frame::FrameHeader::mask","value":"std::option::Option<[u8; 4]>","parent":{"krate":0,"index":1712},"children":[],"decl_id":null,"docs":" A frame mask, if any.\n","sig":null,"attributes":[{"value":"/ A frame mask, if any.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":105399,"byte_end":105424,"line_start":54,"line_end":54,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":763},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":105957,"byte_end":105962,"line_start":75,"line_end":75,"column_start":12,"column_end":17},"name":"parse","qualname":"<FrameHeader>::parse","value":"pub fn parse<impl AsRef<[u8]>: AsRef<[u8]>>(&mut Cursor<impl AsRef<[u8]>>)\n-> Result<Option<(Self, u64)>>","parent":null,"children":[],"decl_id":null,"docs":" Parse a header from an input stream.\n Returns `None` if insufficient data and does not consume anything in this case.\n Payload size is returned along with the header.\n","sig":null,"attributes":[{"value":"/ Parse a header from an input stream.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":105761,"byte_end":105801,"line_start":72,"line_end":72,"column_start":5,"column_end":45}},{"value":"/ Returns `None` if insufficient data and does not consume anything in this case.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":105806,"byte_end":105889,"line_start":73,"line_end":73,"column_start":5,"column_end":88}},{"value":"/ Payload size is returned along with the header.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":105894,"byte_end":105945,"line_start":74,"line_end":74,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":765},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":106400,"byte_end":106403,"line_start":88,"line_end":88,"column_start":12,"column_end":15},"name":"len","qualname":"<FrameHeader>::len","value":"pub fn len(&Self, u64) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the size of the header formatted with given payload length.\n","sig":null,"attributes":[{"value":"/ Get the size of the header formatted with given payload length.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":106278,"byte_end":106345,"line_start":86,"line_end":86,"column_start":5,"column_end":72}},{"value":"allow(clippy :: len_without_is_empty)","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":106350,"byte_end":106388,"line_start":87,"line_end":87,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":766},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":106602,"byte_end":106608,"line_start":93,"line_end":93,"column_start":12,"column_end":18},"name":"format","qualname":"<FrameHeader>::format","value":"pub fn format<impl Write: Write>(&Self, u64, &mut impl Write) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Format a header for given payload size.\n","sig":null,"attributes":[{"value":"/ Format a header for given payload size.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":106547,"byte_end":106590,"line_start":92,"line_end":92,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":1724},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":110031,"byte_end":110036,"line_start":203,"line_end":203,"column_start":12,"column_end":17},"name":"Frame","qualname":"::protocol::frame::frame::Frame","value":"Frame {  }","parent":null,"children":[{"krate":0,"index":1725},{"krate":0,"index":1726}],"decl_id":null,"docs":" A struct representing a WebSocket frame.\n","sig":null,"attributes":[{"value":"/ A struct representing a WebSocket frame.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":109951,"byte_end":109995,"line_start":201,"line_end":201,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":775},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":110234,"byte_end":110237,"line_start":212,"line_end":212,"column_start":12,"column_end":15},"name":"len","qualname":"<Frame>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the length of the frame.\n This is the length of the header + the length of the payload.\n","sig":null,"attributes":[{"value":"/ Get the length of the frame.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":110106,"byte_end":110138,"line_start":209,"line_end":209,"column_start":5,"column_end":37}},{"value":"/ This is the length of the header + the length of the payload.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":110143,"byte_end":110208,"line_start":210,"line_end":210,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":110213,"byte_end":110222,"line_start":211,"line_end":211,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":776},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":110414,"byte_end":110422,"line_start":219,"line_end":219,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Frame>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the frame is empty.\n","sig":null,"attributes":[{"value":"/ Check if the frame is empty.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":110356,"byte_end":110388,"line_start":217,"line_end":217,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":110393,"byte_end":110402,"line_start":218,"line_end":218,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":777},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":110543,"byte_end":110549,"line_start":225,"line_end":225,"column_start":12,"column_end":18},"name":"header","qualname":"<Frame>::header","value":"pub fn header(&Self) -> &FrameHeader","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the frame's header.\n","sig":null,"attributes":[{"value":"/ Get a reference to the frame's header.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":110475,"byte_end":110517,"line_start":223,"line_end":223,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":110522,"byte_end":110531,"line_start":224,"line_end":224,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":778},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":110683,"byte_end":110693,"line_start":231,"line_end":231,"column_start":12,"column_end":22},"name":"header_mut","qualname":"<Frame>::header_mut","value":"pub fn header_mut(&mut Self) -> &mut FrameHeader","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the frame's header.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the frame's header.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":110607,"byte_end":110657,"line_start":229,"line_end":229,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":110662,"byte_end":110671,"line_start":230,"line_end":230,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":779},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":110832,"byte_end":110839,"line_start":237,"line_end":237,"column_start":12,"column_end":19},"name":"payload","qualname":"<Frame>::payload","value":"pub fn payload(&Self) -> &Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the frame's payload.\n","sig":null,"attributes":[{"value":"/ Get a reference to the frame's payload.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":110763,"byte_end":110806,"line_start":235,"line_end":235,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":110811,"byte_end":110820,"line_start":236,"line_end":236,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":780},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":110971,"byte_end":110982,"line_start":243,"line_end":243,"column_start":12,"column_end":23},"name":"payload_mut","qualname":"<Frame>::payload_mut","value":"pub fn payload_mut(&mut Self) -> &mut Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the frame's payload.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the frame's payload.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":110894,"byte_end":110945,"line_start":241,"line_end":241,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":110950,"byte_end":110959,"line_start":242,"line_end":242,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":784},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":111942,"byte_end":111951,"line_start":273,"line_end":273,"column_start":12,"column_end":21},"name":"into_data","qualname":"<Frame>::into_data","value":"pub fn into_data(Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Consume the frame into its payload as binary.\n","sig":null,"attributes":[{"value":"/ Consume the frame into its payload as binary.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":111867,"byte_end":111916,"line_start":271,"line_end":271,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":111921,"byte_end":111930,"line_start":272,"line_end":272,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":785},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":112078,"byte_end":112089,"line_start":279,"line_end":279,"column_start":12,"column_end":23},"name":"into_string","qualname":"<Frame>::into_string","value":"pub fn into_string(Self) -> StdResult<String, FromUtf8Error>","parent":null,"children":[],"decl_id":null,"docs":" Consume the frame into its payload as string.\n","sig":null,"attributes":[{"value":"/ Consume the frame into its payload as string.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":112003,"byte_end":112052,"line_start":277,"line_end":277,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":112057,"byte_end":112066,"line_start":278,"line_end":278,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":787},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":112836,"byte_end":112843,"line_start":301,"line_end":301,"column_start":12,"column_end":19},"name":"message","qualname":"<Frame>::message","value":"pub fn message(Vec<u8>, OpCode, bool) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Create a new data frame.\n","sig":null,"attributes":[{"value":"/ Create a new data frame.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":112782,"byte_end":112810,"line_start":299,"line_end":299,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":112815,"byte_end":112824,"line_start":300,"line_end":300,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":788},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":113168,"byte_end":113172,"line_start":309,"line_end":309,"column_start":12,"column_end":16},"name":"pong","qualname":"<Frame>::pong","value":"pub fn pong(Vec<u8>) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Create a new Pong control frame.\n","sig":null,"attributes":[{"value":"/ Create a new Pong control frame.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":113106,"byte_end":113142,"line_start":307,"line_end":307,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":113147,"byte_end":113156,"line_start":308,"line_end":308,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":789},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":113471,"byte_end":113475,"line_start":321,"line_end":321,"column_start":12,"column_end":16},"name":"ping","qualname":"<Frame>::ping","value":"pub fn ping(Vec<u8>) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Create a new Ping control frame.\n","sig":null,"attributes":[{"value":"/ Create a new Ping control frame.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":113409,"byte_end":113445,"line_start":319,"line_end":319,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":113450,"byte_end":113459,"line_start":320,"line_end":320,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":790},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":113775,"byte_end":113780,"line_start":333,"line_end":333,"column_start":12,"column_end":17},"name":"close","qualname":"<Frame>::close","value":"pub fn close(Option<CloseFrame>) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Create a new Close control frame.\n","sig":null,"attributes":[{"value":"/ Create a new Close control frame.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":113712,"byte_end":113749,"line_start":331,"line_end":331,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":113754,"byte_end":113763,"line_start":332,"line_end":332,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":791},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":114284,"byte_end":114296,"line_start":347,"line_end":347,"column_start":12,"column_end":24},"name":"from_payload","qualname":"<Frame>::from_payload","value":"pub fn from_payload(FrameHeader, Vec<u8>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a frame from given header and data.\n","sig":null,"attributes":[{"value":"/ Create a frame from given header and data.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":114226,"byte_end":114272,"line_start":346,"line_end":346,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":792},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":114436,"byte_end":114442,"line_start":352,"line_end":352,"column_start":12,"column_end":18},"name":"format","qualname":"<Frame>::format","value":"pub fn format<impl Write: Write>(Self, &mut impl Write) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Write a frame out to a buffer\n","sig":null,"attributes":[{"value":"/ Write a frame out to a buffer","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":114391,"byte_end":114424,"line_start":351,"line_end":351,"column_start":5,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":1732},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\mod.rs","byte_start":87074,"byte_end":87085,"line_start":21,"line_end":21,"column_start":12,"column_end":23},"name":"FrameSocket","qualname":"::protocol::frame::FrameSocket","value":"FrameSocket {  }","parent":null,"children":[{"krate":0,"index":1734},{"krate":0,"index":1735}],"decl_id":null,"docs":" A reader and writer for WebSocket frames.\n","sig":null,"attributes":[{"value":"/ A reader and writer for WebSocket frames.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\mod.rs","byte_start":87000,"byte_end":87045,"line_start":19,"line_end":19,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":858},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\mod.rs","byte_start":87304,"byte_end":87307,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<FrameSocket<Stream>>::new","value":"pub fn new(Stream) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new frame socket.\n","sig":null,"attributes":[{"value":"/ Create a new frame socket.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\mod.rs","byte_start":87262,"byte_end":87292,"line_start":29,"line_end":29,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":859},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\mod.rs","byte_start":87469,"byte_end":87488,"line_start":35,"line_end":35,"column_start":12,"column_end":31},"name":"from_partially_read","qualname":"<FrameSocket<Stream>>::from_partially_read","value":"pub fn from_partially_read(Stream, Vec<u8>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new frame socket from partially read data.\n","sig":null,"attributes":[{"value":"/ Create a new frame socket from partially read data.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\mod.rs","byte_start":87402,"byte_end":87457,"line_start":34,"line_end":34,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":860},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\mod.rs","byte_start":87667,"byte_end":87677,"line_start":40,"line_end":40,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FrameSocket<Stream>>::into_inner","value":"pub fn into_inner(Self) -> (Stream, Vec<u8>)","parent":null,"children":[],"decl_id":null,"docs":" Extract a stream from the socket.\n","sig":null,"attributes":[{"value":"/ Extract a stream from the socket.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\mod.rs","byte_start":87618,"byte_end":87655,"line_start":39,"line_end":39,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":861},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\mod.rs","byte_start":87836,"byte_end":87843,"line_start":45,"line_end":45,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FrameSocket<Stream>>::get_ref","value":"pub fn get_ref(&Self) -> &Stream","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the inner stream.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the inner stream.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\mod.rs","byte_start":87773,"byte_end":87824,"line_start":44,"line_end":44,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":862},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\mod.rs","byte_start":87960,"byte_end":87967,"line_start":50,"line_end":50,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FrameSocket<Stream>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut Stream","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the inner stream.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the inner stream.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\mod.rs","byte_start":87896,"byte_end":87948,"line_start":49,"line_end":49,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":865},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\mod.rs","byte_start":88134,"byte_end":88144,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"name":"read_frame","qualname":"<FrameSocket<Stream>>::read_frame","value":"pub fn read_frame(&mut Self, Option<usize>) -> Result<Option<Frame>>","parent":null,"children":[],"decl_id":null,"docs":" Read a frame from stream.\n","sig":null,"attributes":[{"value":"/ Read a frame from stream.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\mod.rs","byte_start":88093,"byte_end":88122,"line_start":59,"line_end":59,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":868},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\mod.rs","byte_start":88603,"byte_end":88614,"line_start":74,"line_end":74,"column_start":12,"column_end":23},"name":"write_frame","qualname":"<FrameSocket<Stream>>::write_frame","value":"pub fn write_frame(&mut Self, Frame) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Write a frame to stream.","sig":null,"attributes":[{"value":"/ Write a frame to stream.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\mod.rs","byte_start":88339,"byte_end":88367,"line_start":69,"line_end":69,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\mod.rs","byte_start":88372,"byte_end":88375,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ This function guarantees that the frame is queued regardless of any errors.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\mod.rs","byte_start":88380,"byte_end":88459,"line_start":71,"line_end":71,"column_start":5,"column_end":84}},{"value":"/ There is no need to resend the frame. In order to handle WouldBlock or Incomplete,","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\mod.rs","byte_start":88464,"byte_end":88550,"line_start":72,"line_end":72,"column_start":5,"column_end":91}},{"value":"/ call write_pending() afterwards.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\mod.rs","byte_start":88555,"byte_end":88591,"line_start":73,"line_end":73,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":869},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\mod.rs","byte_start":88770,"byte_end":88783,"line_start":79,"line_end":79,"column_start":12,"column_end":25},"name":"write_pending","qualname":"<FrameSocket<Stream>>::write_pending","value":"pub fn write_pending(&mut Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Complete pending write, if any.\n","sig":null,"attributes":[{"value":"/ Complete pending write, if any.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\mod.rs","byte_start":88723,"byte_end":88758,"line_start":78,"line_end":78,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1764},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\message.rs","byte_start":124538,"byte_end":124542,"line_start":162,"line_end":162,"column_start":5,"column_end":9},"name":"Text","qualname":"::protocol::message::Message::Text","value":"Message::Text(String)","parent":{"krate":0,"index":1763},"children":[],"decl_id":null,"docs":" A text WebSocket message\n","sig":null,"attributes":[{"value":"/ A text WebSocket message","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\message.rs","byte_start":124505,"byte_end":124533,"line_start":161,"line_end":161,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1767},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\message.rs","byte_start":124591,"byte_end":124597,"line_start":164,"line_end":164,"column_start":5,"column_end":11},"name":"Binary","qualname":"::protocol::message::Message::Binary","value":"Message::Binary(Vec<u8>)","parent":{"krate":0,"index":1763},"children":[],"decl_id":null,"docs":" A binary WebSocket message\n","sig":null,"attributes":[{"value":"/ A binary WebSocket message","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\message.rs","byte_start":124556,"byte_end":124586,"line_start":163,"line_end":163,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1770},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\message.rs","byte_start":124734,"byte_end":124738,"line_start":168,"line_end":168,"column_start":5,"column_end":9},"name":"Ping","qualname":"::protocol::message::Message::Ping","value":"Message::Ping(Vec<u8>)","parent":{"krate":0,"index":1763},"children":[],"decl_id":null,"docs":" A ping message with the specified payload","sig":null,"attributes":[{"value":"/ A ping message with the specified payload","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\message.rs","byte_start":124612,"byte_end":124657,"line_start":165,"line_end":165,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\message.rs","byte_start":124662,"byte_end":124665,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ The payload here must have a length less than 125 bytes","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\message.rs","byte_start":124670,"byte_end":124729,"line_start":167,"line_end":167,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1773},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\message.rs","byte_start":124875,"byte_end":124879,"line_start":172,"line_end":172,"column_start":5,"column_end":9},"name":"Pong","qualname":"::protocol::message::Message::Pong","value":"Message::Pong(Vec<u8>)","parent":{"krate":0,"index":1763},"children":[],"decl_id":null,"docs":" A pong message with the specified payload","sig":null,"attributes":[{"value":"/ A pong message with the specified payload","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\message.rs","byte_start":124753,"byte_end":124798,"line_start":169,"line_end":169,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\message.rs","byte_start":124803,"byte_end":124806,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ The payload here must have a length less than 125 bytes","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\message.rs","byte_start":124811,"byte_end":124870,"line_start":171,"line_end":171,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1776},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\message.rs","byte_start":124949,"byte_end":124954,"line_start":174,"line_end":174,"column_start":5,"column_end":10},"name":"Close","qualname":"::protocol::message::Message::Close","value":"Message::Close(Option<CloseFrame>)","parent":{"krate":0,"index":1763},"children":[],"decl_id":null,"docs":" A close message with the optional close frame.\n","sig":null,"attributes":[{"value":"/ A close message with the optional close frame.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\message.rs","byte_start":124894,"byte_end":124944,"line_start":173,"line_end":173,"column_start":5,"column_end":55}}]},{"kind":"Enum","id":{"krate":0,"index":1763},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\message.rs","byte_start":124491,"byte_end":124498,"line_start":160,"line_end":160,"column_start":10,"column_end":17},"name":"Message","qualname":"::protocol::message::Message","value":"pub enum Message {\n    Text(String),\n    Binary(Vec<u8>),\n    Ping(Vec<u8>),\n    Pong(Vec<u8>),\n    Close(Option<CloseFrame>),\n}","parent":null,"children":[{"krate":0,"index":1764},{"krate":0,"index":1767},{"krate":0,"index":1770},{"krate":0,"index":1773},{"krate":0,"index":1776}],"decl_id":null,"docs":" An enum representing the various forms of a WebSocket message.\n","sig":null,"attributes":[{"value":"/ An enum representing the various forms of a WebSocket message.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\message.rs","byte_start":124376,"byte_end":124442,"line_start":158,"line_end":158,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":949},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\message.rs","byte_start":125077,"byte_end":125081,"line_start":179,"line_end":179,"column_start":12,"column_end":16},"name":"text","qualname":"<Message>::text","value":"pub fn text<S>(S) -> Message where S: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Create a new text WebSocket message from a stringable.\n","sig":null,"attributes":[{"value":"/ Create a new text WebSocket message from a stringable.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\message.rs","byte_start":125007,"byte_end":125065,"line_start":178,"line_end":178,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":951},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\message.rs","byte_start":125275,"byte_end":125281,"line_start":187,"line_end":187,"column_start":12,"column_end":18},"name":"binary","qualname":"<Message>::binary","value":"pub fn binary<B>(B) -> Message where B: Into<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new binary WebSocket message by converting to Vec<u8>.\n","sig":null,"attributes":[{"value":"/ Create a new binary WebSocket message by converting to Vec<u8>.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\message.rs","byte_start":125196,"byte_end":125263,"line_start":186,"line_end":186,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":953},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\message.rs","byte_start":125455,"byte_end":125462,"line_start":195,"line_end":195,"column_start":12,"column_end":19},"name":"is_text","qualname":"<Message>::is_text","value":"pub fn is_text(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether a message is a text message.\n","sig":null,"attributes":[{"value":"/ Indicates whether a message is a text message.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\message.rs","byte_start":125393,"byte_end":125443,"line_start":194,"line_end":194,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":954},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\message.rs","byte_start":125597,"byte_end":125606,"line_start":200,"line_end":200,"column_start":12,"column_end":21},"name":"is_binary","qualname":"<Message>::is_binary","value":"pub fn is_binary(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether a message is a binary message.\n","sig":null,"attributes":[{"value":"/ Indicates whether a message is a binary message.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\message.rs","byte_start":125533,"byte_end":125585,"line_start":199,"line_end":199,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":955},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\message.rs","byte_start":125741,"byte_end":125748,"line_start":205,"line_end":205,"column_start":12,"column_end":19},"name":"is_ping","qualname":"<Message>::is_ping","value":"pub fn is_ping(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether a message is a ping message.\n","sig":null,"attributes":[{"value":"/ Indicates whether a message is a ping message.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\message.rs","byte_start":125679,"byte_end":125729,"line_start":204,"line_end":204,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":956},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\message.rs","byte_start":125881,"byte_end":125888,"line_start":210,"line_end":210,"column_start":12,"column_end":19},"name":"is_pong","qualname":"<Message>::is_pong","value":"pub fn is_pong(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether a message is a pong message.\n","sig":null,"attributes":[{"value":"/ Indicates whether a message is a pong message.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\message.rs","byte_start":125819,"byte_end":125869,"line_start":209,"line_end":209,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":957},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\message.rs","byte_start":126022,"byte_end":126030,"line_start":215,"line_end":215,"column_start":12,"column_end":20},"name":"is_close","qualname":"<Message>::is_close","value":"pub fn is_close(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether a message ia s close message.\n","sig":null,"attributes":[{"value":"/ Indicates whether a message ia s close message.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\message.rs","byte_start":125959,"byte_end":126010,"line_start":214,"line_end":214,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":958},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\message.rs","byte_start":126158,"byte_end":126161,"line_start":220,"line_end":220,"column_start":12,"column_end":15},"name":"len","qualname":"<Message>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the length of the WebSocket message.\n","sig":null,"attributes":[{"value":"/ Get the length of the WebSocket message.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\message.rs","byte_start":126102,"byte_end":126146,"line_start":219,"line_end":219,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":960},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\message.rs","byte_start":126654,"byte_end":126662,"line_start":232,"line_end":232,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Message>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the WebSocket message has no content.\n For example, if the other side of the connection sent an empty string.\n","sig":null,"attributes":[{"value":"/ Returns true if the WebSocket message has no content.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\message.rs","byte_start":126506,"byte_end":126563,"line_start":230,"line_end":230,"column_start":5,"column_end":62}},{"value":"/ For example, if the other side of the connection sent an empty string.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\message.rs","byte_start":126568,"byte_end":126642,"line_start":231,"line_end":231,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":961},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\message.rs","byte_start":126782,"byte_end":126791,"line_start":237,"line_end":237,"column_start":12,"column_end":21},"name":"into_data","qualname":"<Message>::into_data","value":"pub fn into_data(Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Consume the WebSocket and return it as binary data.\n","sig":null,"attributes":[{"value":"/ Consume the WebSocket and return it as binary data.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\message.rs","byte_start":126715,"byte_end":126770,"line_start":236,"line_end":236,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":962},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\message.rs","byte_start":127213,"byte_end":127222,"line_start":247,"line_end":247,"column_start":12,"column_end":21},"name":"into_text","qualname":"<Message>::into_text","value":"pub fn into_text(Self) -> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to consume the WebSocket message and convert it to a String.\n","sig":null,"attributes":[{"value":"/ Attempt to consume the WebSocket message and convert it to a String.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\message.rs","byte_start":127129,"byte_end":127201,"line_start":246,"line_end":246,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":964},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\message.rs","byte_start":127762,"byte_end":127769,"line_start":260,"line_end":260,"column_start":12,"column_end":19},"name":"to_text","qualname":"<Message>::to_text","value":"pub fn to_text(&Self) -> Result<&str>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to get a &str from the WebSocket message,\n this will try to convert binary data to utf8.\n","sig":null,"attributes":[{"value":"/ Attempt to get a &str from the WebSocket message,","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\message.rs","byte_start":127643,"byte_end":127696,"line_start":258,"line_end":258,"column_start":5,"column_end":58}},{"value":"/ this will try to convert binary data to utf8.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\message.rs","byte_start":127701,"byte_end":127750,"line_start":259,"line_end":259,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1791},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":57182,"byte_end":57188,"line_start":32,"line_end":32,"column_start":5,"column_end":11},"name":"Server","qualname":"::protocol::Role::Server","value":"Role::Server","parent":{"krate":0,"index":1790},"children":[],"decl_id":null,"docs":" This socket is a server\n","sig":null,"attributes":[{"value":"/ This socket is a server","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":57150,"byte_end":57177,"line_start":31,"line_end":31,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1793},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":57226,"byte_end":57232,"line_start":34,"line_end":34,"column_start":5,"column_end":11},"name":"Client","qualname":"::protocol::Role::Client","value":"Role::Client","parent":{"krate":0,"index":1790},"children":[],"decl_id":null,"docs":" This socket is a client\n","sig":null,"attributes":[{"value":"/ This socket is a client","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":57194,"byte_end":57221,"line_start":33,"line_end":33,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":1790},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":57139,"byte_end":57143,"line_start":30,"line_end":30,"column_start":10,"column_end":14},"name":"Role","qualname":"::protocol::Role","value":"pub enum Role { Server, Client, }","parent":null,"children":[{"krate":0,"index":1791},{"krate":0,"index":1793}],"decl_id":null,"docs":" Indicates a Client or Server role of the websocket\n","sig":null,"attributes":[{"value":"/ Indicates a Client or Server role of the websocket","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":57030,"byte_end":57084,"line_start":28,"line_end":28,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":1806},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":57326,"byte_end":57341,"line_start":39,"line_end":39,"column_start":12,"column_end":27},"name":"WebSocketConfig","qualname":"::protocol::WebSocketConfig","value":"WebSocketConfig { max_send_queue, max_message_size, max_frame_size, accept_unmasked_frames }","parent":null,"children":[{"krate":0,"index":1807},{"krate":0,"index":1808},{"krate":0,"index":1809},{"krate":0,"index":1810}],"decl_id":null,"docs":" The configuration for WebSocket connection.\n","sig":null,"attributes":[{"value":"/ The configuration for WebSocket connection.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":57237,"byte_end":57284,"line_start":37,"line_end":37,"column_start":1,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":1807},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":57562,"byte_end":57576,"line_start":43,"line_end":43,"column_start":9,"column_end":23},"name":"max_send_queue","qualname":"::protocol::WebSocketConfig::max_send_queue","value":"std::option::Option<usize>","parent":{"krate":0,"index":1806},"children":[],"decl_id":null,"docs":" The size of the send queue. You can use it to turn on/off the backpressure features. `None`\n means here that the size of the queue is unlimited. The default value is the unlimited\n queue.\n","sig":null,"attributes":[{"value":"/ The size of the send queue. You can use it to turn on/off the backpressure features. `None`","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":57348,"byte_end":57443,"line_start":40,"line_end":40,"column_start":5,"column_end":100}},{"value":"/ means here that the size of the queue is unlimited. The default value is the unlimited","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":57448,"byte_end":57538,"line_start":41,"line_end":41,"column_start":5,"column_end":95}},{"value":"/ queue.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":57543,"byte_end":57553,"line_start":42,"line_end":42,"column_start":5,"column_end":15}}]},{"kind":"Field","id":{"krate":0,"index":1808},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":57831,"byte_end":57847,"line_start":47,"line_end":47,"column_start":9,"column_end":25},"name":"max_message_size","qualname":"::protocol::WebSocketConfig::max_message_size","value":"std::option::Option<usize>","parent":{"krate":0,"index":1806},"children":[],"decl_id":null,"docs":" The maximum size of a message. `None` means no size limit. The default value is 64 MiB\n which should be reasonably big for all normal use-cases but small enough to prevent\n memory eating by a malicious user.\n","sig":null,"attributes":[{"value":"/ The maximum size of a message. `None` means no size limit. The default value is 64 MiB","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":57597,"byte_end":57687,"line_start":44,"line_end":44,"column_start":5,"column_end":95}},{"value":"/ which should be reasonably big for all normal use-cases but small enough to prevent","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":57692,"byte_end":57779,"line_start":45,"line_end":45,"column_start":5,"column_end":92}},{"value":"/ memory eating by a malicious user.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":57784,"byte_end":57822,"line_start":46,"line_end":46,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":1809},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":58186,"byte_end":58200,"line_start":52,"line_end":52,"column_start":9,"column_end":23},"name":"max_frame_size","qualname":"::protocol::WebSocketConfig::max_frame_size","value":"std::option::Option<usize>","parent":{"krate":0,"index":1806},"children":[],"decl_id":null,"docs":" The maximum size of a single message frame. `None` means no size limit. The limit is for\n frame payload NOT including the frame header. The default value is 16 MiB which should\n be reasonably big for all normal use-cases but small enough to prevent memory eating\n by a malicious user.\n","sig":null,"attributes":[{"value":"/ The maximum size of a single message frame. `None` means no size limit. The limit is for","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":57868,"byte_end":57960,"line_start":48,"line_end":48,"column_start":5,"column_end":97}},{"value":"/ frame payload NOT including the frame header. The default value is 16 MiB which should","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":57965,"byte_end":58055,"line_start":49,"line_end":49,"column_start":5,"column_end":95}},{"value":"/ be reasonably big for all normal use-cases but small enough to prevent memory eating","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":58060,"byte_end":58148,"line_start":50,"line_end":50,"column_start":5,"column_end":93}},{"value":"/ by a malicious user.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":58153,"byte_end":58177,"line_start":51,"line_end":51,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":1810},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":58622,"byte_end":58644,"line_start":58,"line_end":58,"column_start":9,"column_end":31},"name":"accept_unmasked_frames","qualname":"::protocol::WebSocketConfig::accept_unmasked_frames","value":"bool","parent":{"krate":0,"index":1806},"children":[],"decl_id":null,"docs":" When set to `true`, the server will accept and handle unmasked frames\n from the client. According to the RFC 6455, the server must close the\n connection to the client in such cases, however it seems like there are\n some popular libraries that are sending unmasked frames, ignoring the RFC.\n By default this option is set to `false`, i.e. according to RFC 6455.\n","sig":null,"attributes":[{"value":"/ When set to `true`, the server will accept and handle unmasked frames","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":58221,"byte_end":58294,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ from the client. According to the RFC 6455, the server must close the","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":58299,"byte_end":58372,"line_start":54,"line_end":54,"column_start":5,"column_end":78}},{"value":"/ connection to the client in such cases, however it seems like there are","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":58377,"byte_end":58452,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ some popular libraries that are sending unmasked frames, ignoring the RFC.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":58457,"byte_end":58535,"line_start":56,"line_end":56,"column_start":5,"column_end":83}},{"value":"/ By default this option is set to `false`, i.e. according to RFC 6455.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":58540,"byte_end":58613,"line_start":57,"line_end":57,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":1816},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":59161,"byte_end":59170,"line_start":77,"line_end":77,"column_start":12,"column_end":21},"name":"WebSocket","qualname":"::protocol::WebSocket","value":"WebSocket {  }","parent":null,"children":[{"krate":0,"index":1818},{"krate":0,"index":1819}],"decl_id":null,"docs":" WebSocket input-output stream.","sig":null,"attributes":[{"value":"/ WebSocket input-output stream.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":58929,"byte_end":58963,"line_start":72,"line_end":72,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":58964,"byte_end":58967,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ This is THE structure you want to create to be able to speak the WebSocket protocol.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":58968,"byte_end":59056,"line_start":74,"line_end":74,"column_start":1,"column_end":89}},{"value":"/ It may be created by calling `connect`, `accept` or `client` functions.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":59057,"byte_end":59132,"line_start":75,"line_end":75,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1053},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":59689,"byte_end":59704,"line_start":90,"line_end":90,"column_start":12,"column_end":27},"name":"from_raw_socket","qualname":"<WebSocket<Stream>>::from_raw_socket","value":"pub fn from_raw_socket(Stream, Role, Option<WebSocketConfig>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert a raw socket into a WebSocket without performing a handshake.","sig":null,"attributes":[{"value":"/ Convert a raw socket into a WebSocket without performing a handshake.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":59349,"byte_end":59422,"line_start":85,"line_end":85,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":59427,"byte_end":59430,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Call this function if you're using Tungstenite as a part of a web framework","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":59435,"byte_end":59514,"line_start":87,"line_end":87,"column_start":5,"column_end":84}},{"value":"/ or together with an existing one. If you need an initial handshake, use","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":59519,"byte_end":59594,"line_start":88,"line_end":88,"column_start":5,"column_end":80}},{"value":"/ `connect()` or `accept()` functions of the crate to construct a websocket.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":59599,"byte_end":59677,"line_start":89,"line_end":89,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1054},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":60210,"byte_end":60229,"line_start":99,"line_end":99,"column_start":12,"column_end":31},"name":"from_partially_read","qualname":"<WebSocket<Stream>>::from_partially_read","value":"pub fn from_partially_read(Stream, Vec<u8>, Role, Option<WebSocketConfig>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert a raw socket into a WebSocket without performing a handshake.","sig":null,"attributes":[{"value":"/ Convert a raw socket into a WebSocket without performing a handshake.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":59870,"byte_end":59943,"line_start":94,"line_end":94,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":59948,"byte_end":59951,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Call this function if you're using Tungstenite as a part of a web framework","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":59956,"byte_end":60035,"line_start":96,"line_end":96,"column_start":5,"column_end":84}},{"value":"/ or together with an existing one. If you need an initial handshake, use","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":60040,"byte_end":60115,"line_start":97,"line_end":97,"column_start":5,"column_end":80}},{"value":"/ `connect()` or `accept()` functions of the crate to construct a websocket.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":60120,"byte_end":60198,"line_start":98,"line_end":98,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1055},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":60567,"byte_end":60574,"line_start":112,"line_end":112,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<WebSocket<Stream>>::get_ref","value":"pub fn get_ref(&Self) -> &Stream","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the inner stream.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the inner stream.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":60504,"byte_end":60555,"line_start":111,"line_end":111,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1056},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":60690,"byte_end":60697,"line_start":116,"line_end":116,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<WebSocket<Stream>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut Stream","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the inner stream.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the inner stream.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":60626,"byte_end":60678,"line_start":115,"line_end":115,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1057},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":60803,"byte_end":60813,"line_start":121,"line_end":121,"column_start":12,"column_end":22},"name":"set_config","qualname":"<WebSocket<Stream>>::set_config","value":"pub fn set_config<impl FnOnce(&mut WebSocketConfig): FnOnce(&mut WebSocketConfig)\n                  -> ()>(&mut Self, impl FnOnce(&mut WebSocketConfig))","parent":null,"children":[],"decl_id":null,"docs":" Change the configuration.\n","sig":null,"attributes":[{"value":"/ Change the configuration.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":60762,"byte_end":60791,"line_start":120,"line_end":120,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1059},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":60964,"byte_end":60974,"line_start":126,"line_end":126,"column_start":12,"column_end":22},"name":"get_config","qualname":"<WebSocket<Stream>>::get_config","value":"pub fn get_config(&Self) -> &WebSocketConfig","parent":null,"children":[],"decl_id":null,"docs":" Read the configuration.\n","sig":null,"attributes":[{"value":"/ Read the configuration.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":60925,"byte_end":60952,"line_start":125,"line_end":125,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1060},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":61298,"byte_end":61306,"line_start":134,"line_end":134,"column_start":12,"column_end":20},"name":"can_read","qualname":"<WebSocket<Stream>>::can_read","value":"pub fn can_read(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if it is possible to read messages.","sig":null,"attributes":[{"value":"/ Check if it is possible to read messages.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":61049,"byte_end":61094,"line_start":130,"line_end":130,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":61099,"byte_end":61102,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ Reading is impossible after receiving `Message::Close`. It is still possible after","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":61107,"byte_end":61193,"line_start":132,"line_end":132,"column_start":5,"column_end":91}},{"value":"/ sending close frame since the peer still may send some data before confirming close.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":61198,"byte_end":61286,"line_start":133,"line_end":133,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":1061},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":61522,"byte_end":61531,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"can_write","qualname":"<WebSocket<Stream>>::can_write","value":"pub fn can_write(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if it is possible to write messages.","sig":null,"attributes":[{"value":"/ Check if it is possible to write messages.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":61367,"byte_end":61413,"line_start":138,"line_end":138,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":61418,"byte_end":61421,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ Writing gets impossible immediately after sending or receiving `Message::Close`.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":61426,"byte_end":61510,"line_start":140,"line_end":140,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1064},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":62508,"byte_end":62520,"line_start":161,"line_end":161,"column_start":12,"column_end":24},"name":"read_message","qualname":"<WebSocket<Stream>>::read_message","value":"pub fn read_message(&mut Self) -> Result<Message>","parent":null,"children":[],"decl_id":null,"docs":" Read a message from stream, if possible.","sig":null,"attributes":[{"value":"/ Read a message from stream, if possible.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":61642,"byte_end":61686,"line_start":147,"line_end":147,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":61691,"byte_end":61694,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ This will queue responses to ping and close messages to be sent. It will call","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":61699,"byte_end":61780,"line_start":149,"line_end":149,"column_start":5,"column_end":86}},{"value":"/ `write_pending` before trying to read in order to make sure that those responses","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":61785,"byte_end":61869,"line_start":150,"line_end":150,"column_start":5,"column_end":89}},{"value":"/ make progress even if you never call `write_pending`. That does mean that they","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":61874,"byte_end":61956,"line_start":151,"line_end":151,"column_start":5,"column_end":87}},{"value":"/ get sent out earliest on the next call to `read_message`, `write_message` or `write_pending`.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":61961,"byte_end":62058,"line_start":152,"line_end":152,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":62063,"byte_end":62066,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ ## Closing the connection","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":62071,"byte_end":62100,"line_start":154,"line_end":154,"column_start":5,"column_end":34}},{"value":"/ When the remote endpoint decides to close the connection this will return","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":62105,"byte_end":62182,"line_start":155,"line_end":155,"column_start":5,"column_end":82}},{"value":"/ the close message with an optional close frame.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":62187,"byte_end":62238,"line_start":156,"line_end":156,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":62243,"byte_end":62246,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ You should continue calling `read_message`, `write_message` or `write_pending` to drive","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":62251,"byte_end":62342,"line_start":158,"line_end":158,"column_start":5,"column_end":96}},{"value":"/ the reply to the close frame until [Error::ConnectionClosed] is returned. Once that happens","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":62347,"byte_end":62442,"line_start":159,"line_end":159,"column_start":5,"column_end":100}},{"value":"/ it is safe to drop the underlying connection.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":62447,"byte_end":62496,"line_start":160,"line_end":160,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1065},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":64544,"byte_end":64557,"line_start":192,"line_end":192,"column_start":12,"column_end":25},"name":"write_message","qualname":"<WebSocket<Stream>>::write_message","value":"pub fn write_message(&mut Self, Message) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Send a message to stream, if possible.","sig":null,"attributes":[{"value":"/ Send a message to stream, if possible.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":62616,"byte_end":62658,"line_start":165,"line_end":165,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":62663,"byte_end":62666,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ WebSocket will buffer a configurable number of messages at a time, except to reply to Ping","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":62671,"byte_end":62765,"line_start":167,"line_end":167,"column_start":5,"column_end":99}},{"value":"/ requests. A Pong reply will jump the queue because the","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":62770,"byte_end":62828,"line_start":168,"line_end":168,"column_start":5,"column_end":63}},{"value":"/ [websocket RFC](https://tools.ietf.org/html/rfc6455#section-5.5.2) specifies it should be sent","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":62833,"byte_end":62931,"line_start":169,"line_end":169,"column_start":5,"column_end":103}},{"value":"/ as soon as is practical.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":62936,"byte_end":62964,"line_start":170,"line_end":170,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":62969,"byte_end":62972,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ Note that upon receiving a ping message, tungstenite cues a pong reply automatically.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":62977,"byte_end":63066,"line_start":172,"line_end":172,"column_start":5,"column_end":94}},{"value":"/ When you call either `read_message`, `write_message` or `write_pending` next it will try to send","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":63071,"byte_end":63171,"line_start":173,"line_end":173,"column_start":5,"column_end":105}},{"value":"/ that pong out if the underlying connection can take more data. This means you should not","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":63176,"byte_end":63268,"line_start":174,"line_end":174,"column_start":5,"column_end":97}},{"value":"/ respond to ping frames manually.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":63273,"byte_end":63309,"line_start":175,"line_end":175,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":63314,"byte_end":63317,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ You can however send pong frames manually in order to indicate a unidirectional heartbeat","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":63322,"byte_end":63415,"line_start":177,"line_end":177,"column_start":5,"column_end":98}},{"value":"/ as described in [RFC 6455](https://tools.ietf.org/html/rfc6455#section-5.5.3). Note that","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":63420,"byte_end":63512,"line_start":178,"line_end":178,"column_start":5,"column_end":97}},{"value":"/ if `read_message` returns a ping, you should call `write_pending` until it doesn't return","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":63517,"byte_end":63610,"line_start":179,"line_end":179,"column_start":5,"column_end":98}},{"value":"/ WouldBlock before passing a pong to `write_message`, otherwise the response to the","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":63615,"byte_end":63701,"line_start":180,"line_end":180,"column_start":5,"column_end":91}},{"value":"/ ping will not be sent, but rather replaced by your custom pong message.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":63706,"byte_end":63781,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":63786,"byte_end":63789,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ ## Errors","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":63794,"byte_end":63807,"line_start":183,"line_end":183,"column_start":5,"column_end":18}},{"value":"/ - If the WebSocket's send queue is full, `SendQueueFull` will be returned","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":63812,"byte_end":63889,"line_start":184,"line_end":184,"column_start":5,"column_end":82}},{"value":"/ along with the passed message. Otherwise, the message is queued and Ok(()) is returned.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":63894,"byte_end":63985,"line_start":185,"line_end":185,"column_start":5,"column_end":96}},{"value":"/ - If the connection is closed and should be dropped, this will return [Error::ConnectionClosed].","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":63990,"byte_end":64090,"line_start":186,"line_end":186,"column_start":5,"column_end":105}},{"value":"/ - If you try again after [Error::ConnectionClosed] was returned either from here or from `read_message`,","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":64095,"byte_end":64203,"line_start":187,"line_end":187,"column_start":5,"column_end":113}},{"value":"/   [Error::AlreadyClosed] will be returned. This indicates a program error on your part.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":64208,"byte_end":64299,"line_start":188,"line_end":188,"column_start":5,"column_end":96}},{"value":"/ - [Error::Io] is returned if the underlying connection returns an error","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":64304,"byte_end":64379,"line_start":189,"line_end":189,"column_start":5,"column_end":80}},{"value":"/   (consider these fatal except for WouldBlock).","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":64384,"byte_end":64435,"line_start":190,"line_end":190,"column_start":5,"column_end":56}},{"value":"/ - [Error::Capacity] if your message size is bigger than the configured max message size.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":64440,"byte_end":64532,"line_start":191,"line_end":191,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":1066},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":64721,"byte_end":64734,"line_start":197,"line_end":197,"column_start":12,"column_end":25},"name":"write_pending","qualname":"<WebSocket<Stream>>::write_pending","value":"pub fn write_pending(&mut Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Flush the pending send queue.\n","sig":null,"attributes":[{"value":"/ Flush the pending send queue.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":64676,"byte_end":64709,"line_start":196,"line_end":196,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1067},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":65939,"byte_end":65944,"line_start":222,"line_end":222,"column_start":12,"column_end":17},"name":"close","qualname":"<WebSocket<Stream>>::close","value":"pub fn close(&mut Self, Option<CloseFrame>) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Close the connection.","sig":null,"attributes":[{"value":"/ Close the connection.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":64826,"byte_end":64851,"line_start":201,"line_end":201,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":64856,"byte_end":64859,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ This function guarantees that the close frame will be queued.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":64864,"byte_end":64929,"line_start":203,"line_end":203,"column_start":5,"column_end":70}},{"value":"/ There is no need to call it again. Calling this function is","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":64934,"byte_end":64997,"line_start":204,"line_end":204,"column_start":5,"column_end":68}},{"value":"/ the same as calling `write_message(Message::Close(..))`.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":65002,"byte_end":65062,"line_start":205,"line_end":205,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":65067,"byte_end":65070,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ After queing the close frame you should continue calling `read_message` or","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":65075,"byte_end":65153,"line_start":207,"line_end":207,"column_start":5,"column_end":83}},{"value":"/ `write_pending` to drive the close handshake to completion.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":65158,"byte_end":65221,"line_start":208,"line_end":208,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":65226,"byte_end":65229,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ The websocket RFC defines that the underlying connection should be closed","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":65234,"byte_end":65311,"line_start":210,"line_end":210,"column_start":5,"column_end":82}},{"value":"/ by the server. Tungstenite takes care of this asymmetry for you.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":65316,"byte_end":65384,"line_start":211,"line_end":211,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":65389,"byte_end":65392,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ When the close handshake is finished (we have both sent and received","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":65397,"byte_end":65469,"line_start":213,"line_end":213,"column_start":5,"column_end":77}},{"value":"/ a close message), `read_message` or `write_pending` will return","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":65474,"byte_end":65541,"line_start":214,"line_end":214,"column_start":5,"column_end":72}},{"value":"/ [Error::ConnectionClosed] if this endpoint is the server.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":65546,"byte_end":65607,"line_start":215,"line_end":215,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":65612,"byte_end":65615,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ If this endpoint is a client, [Error::ConnectionClosed] will only be","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":65620,"byte_end":65692,"line_start":217,"line_end":217,"column_start":5,"column_end":77}},{"value":"/ returned after the server has closed the underlying connection.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":65697,"byte_end":65764,"line_start":218,"line_end":218,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":65769,"byte_end":65772,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ It is thus safe to drop the underlying connection as soon as [Error::ConnectionClosed]","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":65777,"byte_end":65867,"line_start":220,"line_end":220,"column_start":5,"column_end":95}},{"value":"/ is returned from `read_message` or `write_pending`.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":65872,"byte_end":65927,"line_start":221,"line_end":221,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1823},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":66131,"byte_end":66147,"line_start":229,"line_end":229,"column_start":12,"column_end":28},"name":"WebSocketContext","qualname":"::protocol::WebSocketContext","value":"WebSocketContext {  }","parent":null,"children":[{"krate":0,"index":1824},{"krate":0,"index":1825},{"krate":0,"index":1826},{"krate":0,"index":1827},{"krate":0,"index":1828},{"krate":0,"index":1829},{"krate":0,"index":1830}],"decl_id":null,"docs":" A context for managing WebSocket stream.\n","sig":null,"attributes":[{"value":"/ A context for managing WebSocket stream.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":66058,"byte_end":66102,"line_start":227,"line_end":227,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1069},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":66757,"byte_end":66760,"line_start":248,"line_end":248,"column_start":12,"column_end":15},"name":"new","qualname":"<WebSocketContext>::new","value":"pub fn new(Role, Option<WebSocketConfig>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a WebSocket context that manages a post-handshake stream.\n","sig":null,"attributes":[{"value":"/ Create a WebSocket context that manages a post-handshake stream.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":66677,"byte_end":66745,"line_start":247,"line_end":247,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1070},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":67208,"byte_end":67227,"line_start":261,"line_end":261,"column_start":12,"column_end":31},"name":"from_partially_read","qualname":"<WebSocketContext>::from_partially_read","value":"pub fn from_partially_read(Vec<u8>, Role, Option<WebSocketConfig>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a WebSocket context that manages an post-handshake stream.\n","sig":null,"attributes":[{"value":"/ Create a WebSocket context that manages an post-handshake stream.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":67127,"byte_end":67196,"line_start":260,"line_end":260,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1071},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":67495,"byte_end":67505,"line_start":269,"line_end":269,"column_start":12,"column_end":22},"name":"set_config","qualname":"<WebSocketContext>::set_config","value":"pub fn set_config<impl FnOnce(&mut WebSocketConfig): FnOnce(&mut WebSocketConfig)\n                  -> ()>(&mut Self, impl FnOnce(&mut WebSocketConfig))","parent":null,"children":[],"decl_id":null,"docs":" Change the configuration.\n","sig":null,"attributes":[{"value":"/ Change the configuration.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":67454,"byte_end":67483,"line_start":268,"line_end":268,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1073},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":67649,"byte_end":67659,"line_start":274,"line_end":274,"column_start":12,"column_end":22},"name":"get_config","qualname":"<WebSocketContext>::get_config","value":"pub fn get_config(&Self) -> &WebSocketConfig","parent":null,"children":[],"decl_id":null,"docs":" Read the configuration.\n","sig":null,"attributes":[{"value":"/ Read the configuration.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":67610,"byte_end":67637,"line_start":273,"line_end":273,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1074},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":67970,"byte_end":67978,"line_start":282,"line_end":282,"column_start":12,"column_end":20},"name":"can_read","qualname":"<WebSocketContext>::can_read","value":"pub fn can_read(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if it is possible to read messages.","sig":null,"attributes":[{"value":"/ Check if it is possible to read messages.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":67721,"byte_end":67766,"line_start":278,"line_end":278,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":67771,"byte_end":67774,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ Reading is impossible after receiving `Message::Close`. It is still possible after","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":67779,"byte_end":67865,"line_start":280,"line_end":280,"column_start":5,"column_end":91}},{"value":"/ sending close frame since the peer still may send some data before confirming close.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":67870,"byte_end":67958,"line_start":281,"line_end":281,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":1075},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":68192,"byte_end":68201,"line_start":289,"line_end":289,"column_start":12,"column_end":21},"name":"can_write","qualname":"<WebSocketContext>::can_write","value":"pub fn can_write(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if it is possible to write messages.","sig":null,"attributes":[{"value":"/ Check if it is possible to write messages.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":68037,"byte_end":68083,"line_start":286,"line_end":286,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":68088,"byte_end":68091,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ Writing gets impossible immediately after sending or receiving `Message::Close`.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":68096,"byte_end":68180,"line_start":288,"line_end":288,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1076},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":68449,"byte_end":68461,"line_start":297,"line_end":297,"column_start":12,"column_end":24},"name":"read_message","qualname":"<WebSocketContext>::read_message","value":"pub fn read_message<Stream>(&mut Self, &mut Stream) -> Result<Message> where\nStream: Read + Write","parent":null,"children":[],"decl_id":null,"docs":" Read a message from the provided stream, if possible.","sig":null,"attributes":[{"value":"/ Read a message from the provided stream, if possible.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":68261,"byte_end":68318,"line_start":293,"line_end":293,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":68323,"byte_end":68326,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ This function sends pong and close responses automatically.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":68331,"byte_end":68394,"line_start":295,"line_end":295,"column_start":5,"column_end":68}},{"value":"/ However, it never blocks on write.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":68399,"byte_end":68437,"line_start":296,"line_end":296,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1078},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":69769,"byte_end":69782,"line_start":325,"line_end":325,"column_start":12,"column_end":25},"name":"write_message","qualname":"<WebSocketContext>::write_message","value":"pub fn write_message<Stream>(&mut Self, &mut Stream, Message) -> Result<()>\nwhere Stream: Read + Write","parent":null,"children":[],"decl_id":null,"docs":" Send a message to the provided stream, if possible.","sig":null,"attributes":[{"value":"/ Send a message to the provided stream, if possible.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":69238,"byte_end":69293,"line_start":317,"line_end":317,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":69298,"byte_end":69301,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ WebSocket will buffer a configurable number of messages at a time, except to reply to Ping","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":69306,"byte_end":69400,"line_start":319,"line_end":319,"column_start":5,"column_end":99}},{"value":"/ and Close requests. If the WebSocket's send queue is full, `SendQueueFull` will be returned","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":69405,"byte_end":69500,"line_start":320,"line_end":320,"column_start":5,"column_end":100}},{"value":"/ along with the passed message. Otherwise, the message is queued and Ok(()) is returned.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":69505,"byte_end":69596,"line_start":321,"line_end":321,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":69601,"byte_end":69604,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ Note that only the last pong frame is stored to be sent, and only the","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":69609,"byte_end":69682,"line_start":323,"line_end":323,"column_start":5,"column_end":78}},{"value":"/ most recent pong frame is sent if multiple pong frames are queued.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":69687,"byte_end":69757,"line_start":324,"line_end":324,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1080},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":71359,"byte_end":71372,"line_start":366,"line_end":366,"column_start":12,"column_end":25},"name":"write_pending","qualname":"<WebSocketContext>::write_pending","value":"pub fn write_pending<Stream>(&mut Self, &mut Stream) -> Result<()> where\nStream: Read + Write","parent":null,"children":[],"decl_id":null,"docs":" Flush the pending send queue.\n","sig":null,"attributes":[{"value":"/ Flush the pending send queue.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":71314,"byte_end":71347,"line_start":365,"line_end":365,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1082},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":73360,"byte_end":73365,"line_start":409,"line_end":409,"column_start":12,"column_end":17},"name":"close","qualname":"<WebSocketContext>::close","value":"pub fn close<Stream>(&mut Self, &mut Stream, Option<CloseFrame>) -> Result<()>\nwhere Stream: Read + Write","parent":null,"children":[],"decl_id":null,"docs":" Close the connection.","sig":null,"attributes":[{"value":"/ Close the connection.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":73120,"byte_end":73145,"line_start":404,"line_end":404,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":73150,"byte_end":73153,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ This function guarantees that the close frame will be queued.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":73158,"byte_end":73223,"line_start":406,"line_end":406,"column_start":5,"column_end":70}},{"value":"/ There is no need to call it again. Calling this function is","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":73228,"byte_end":73291,"line_start":407,"line_end":407,"column_start":5,"column_end":68}},{"value":"/ the same as calling `write(Message::Close(..))`.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":73296,"byte_end":73348,"line_start":408,"line_end":408,"column_start":5,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":1129},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\server.rs","byte_start":131053,"byte_end":131071,"line_start":23,"line_end":23,"column_start":8,"column_end":26},"name":"accept_with_config","qualname":"::server::accept_with_config","value":"pub fn accept_with_config<S: Read + Write>(S, Option<WebSocketConfig>)\n-> Result<WebSocket<S>, HandshakeError<ServerHandshake<S, NoCallback>>>","parent":null,"children":[],"decl_id":null,"docs":" Accept the given Stream as a WebSocket.","sig":null,"attributes":[{"value":"/ Accept the given Stream as a WebSocket.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\server.rs","byte_start":130581,"byte_end":130624,"line_start":14,"line_end":14,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\server.rs","byte_start":130625,"byte_end":130628,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Uses a configuration provided as an argument. Calling it with `None` will use the default one","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\server.rs","byte_start":130629,"byte_end":130726,"line_start":16,"line_end":16,"column_start":1,"column_end":98}},{"value":"/ used by `accept()`.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\server.rs","byte_start":130727,"byte_end":130750,"line_start":17,"line_end":17,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\server.rs","byte_start":130751,"byte_end":130754,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This function starts a server WebSocket handshake over the given stream.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\server.rs","byte_start":130755,"byte_end":130831,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ If you want TLS support, use `native_tls::TlsStream`, `rustls::Stream` or","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\server.rs","byte_start":130832,"byte_end":130909,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ `openssl::ssl::SslStream` for the stream here. Any `Read + Write` streams are supported,","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\server.rs","byte_start":130910,"byte_end":131002,"line_start":21,"line_end":21,"column_start":1,"column_end":93}},{"value":"/ including those from `Mio` and others.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\server.rs","byte_start":131003,"byte_end":131045,"line_start":22,"line_end":22,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":1131},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\server.rs","byte_start":131622,"byte_end":131628,"line_start":36,"line_end":36,"column_start":8,"column_end":14},"name":"accept","qualname":"::server::accept","value":"pub fn accept<S: Read + Write>(S)\n-> Result<WebSocket<S>, HandshakeError<ServerHandshake<S, NoCallback>>>","parent":null,"children":[],"decl_id":null,"docs":" Accept the given Stream as a WebSocket.","sig":null,"attributes":[{"value":"/ Accept the given Stream as a WebSocket.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\server.rs","byte_start":131276,"byte_end":131319,"line_start":30,"line_end":30,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\server.rs","byte_start":131320,"byte_end":131323,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This function starts a server WebSocket handshake over the given stream.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\server.rs","byte_start":131324,"byte_end":131400,"line_start":32,"line_end":32,"column_start":1,"column_end":77}},{"value":"/ If you want TLS support, use `native_tls::TlsStream`, `rustls::Stream` or","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\server.rs","byte_start":131401,"byte_end":131478,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/ `openssl::ssl::SslStream` for the stream here. Any `Read + Write` streams are supported,","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\server.rs","byte_start":131479,"byte_end":131571,"line_start":34,"line_end":34,"column_start":1,"column_end":93}},{"value":"/ including those from `Mio` and others.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\server.rs","byte_start":131572,"byte_end":131614,"line_start":35,"line_end":35,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":1133},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\server.rs","byte_start":132172,"byte_end":132194,"line_start":50,"line_end":50,"column_start":8,"column_end":30},"name":"accept_hdr_with_config","qualname":"::server::accept_hdr_with_config","value":"pub fn accept_hdr_with_config<S: Read + Write,\n                              C: Callback>(S, C, Option<WebSocketConfig>)\n-> Result<WebSocket<S>, HandshakeError<ServerHandshake<S, C>>>","parent":null,"children":[],"decl_id":null,"docs":" Accept the given Stream as a WebSocket.","sig":null,"attributes":[{"value":"/ Accept the given Stream as a WebSocket.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\server.rs","byte_start":131778,"byte_end":131821,"line_start":42,"line_end":42,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\server.rs","byte_start":131822,"byte_end":131825,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Uses a configuration provided as an argument. Calling it with `None` will use the default one","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\server.rs","byte_start":131826,"byte_end":131923,"line_start":44,"line_end":44,"column_start":1,"column_end":98}},{"value":"/ used by `accept_hdr()`.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\server.rs","byte_start":131924,"byte_end":131951,"line_start":45,"line_end":45,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\server.rs","byte_start":131952,"byte_end":131955,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ This function does the same as `accept()` but accepts an extra callback","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\server.rs","byte_start":131956,"byte_end":132031,"line_start":47,"line_end":47,"column_start":1,"column_end":76}},{"value":"/ for header processing. The callback receives headers of the incoming","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\server.rs","byte_start":132032,"byte_end":132104,"line_start":48,"line_end":48,"column_start":1,"column_end":73}},{"value":"/ requests and is able to add extra headers to the reply.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\server.rs","byte_start":132105,"byte_end":132164,"line_start":49,"line_end":49,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1136},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\server.rs","byte_start":132694,"byte_end":132704,"line_start":63,"line_end":63,"column_start":8,"column_end":18},"name":"accept_hdr","qualname":"::server::accept_hdr","value":"pub fn accept_hdr<S: Read + Write, C: Callback>(S, C)\n-> Result<WebSocket<S>, HandshakeError<ServerHandshake<S, C>>>","parent":null,"children":[],"decl_id":null,"docs":" Accept the given Stream as a WebSocket.","sig":null,"attributes":[{"value":"/ Accept the given Stream as a WebSocket.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\server.rs","byte_start":132430,"byte_end":132473,"line_start":58,"line_end":58,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\server.rs","byte_start":132474,"byte_end":132477,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ This function does the same as `accept()` but accepts an extra callback","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\server.rs","byte_start":132478,"byte_end":132553,"line_start":60,"line_end":60,"column_start":1,"column_end":76}},{"value":"/ for header processing. The callback receives headers of the incoming","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\server.rs","byte_start":132554,"byte_end":132626,"line_start":61,"line_end":61,"column_start":1,"column_end":73}},{"value":"/ requests and is able to add extra headers to the reply.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\server.rs","byte_start":132627,"byte_end":132686,"line_start":62,"line_end":62,"column_start":1,"column_end":60}}]},{"kind":"Mod","id":{"krate":0,"index":1139},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\stream.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\stream.rs","parent":null,"children":[{"krate":0,"index":1140},{"krate":0,"index":1141},{"krate":0,"index":1142},{"krate":0,"index":1145},{"krate":0,"index":1146},{"krate":0,"index":1148},{"krate":0,"index":1149},{"krate":0,"index":1152},{"krate":0,"index":1155},{"krate":0,"index":1158},{"krate":0,"index":1855},{"krate":0,"index":1860},{"krate":0,"index":1862},{"krate":0,"index":1863},{"krate":0,"index":1161},{"krate":0,"index":1163},{"krate":0,"index":1165},{"krate":0,"index":1170},{"krate":0,"index":1173},{"krate":0,"index":1176},{"krate":0,"index":1180}],"decl_id":null,"docs":" Convenience wrapper for streams to switch between plain TCP and TLS at runtime.","sig":null,"attributes":[{"value":"/ Convenience wrapper for streams to switch between plain TCP and TLS at runtime.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\stream.rs","byte_start":132889,"byte_end":132972,"line_start":1,"line_end":1,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\stream.rs","byte_start":132973,"byte_end":132976,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/  There is no dependency on actual TLS implementations. Everything like","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\stream.rs","byte_start":132977,"byte_end":133051,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"/ `native_tls` or `openssl` will work as long as there is a TLS stream supporting standard","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\stream.rs","byte_start":133052,"byte_end":133144,"line_start":4,"line_end":4,"column_start":1,"column_end":93}},{"value":"/ `Read + Write` traits.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\stream.rs","byte_start":133145,"byte_end":133171,"line_start":5,"line_end":5,"column_start":1,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1856},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\stream.rs","byte_start":133530,"byte_end":133535,"line_start":23,"line_end":23,"column_start":5,"column_end":10},"name":"Plain","qualname":"::stream::Mode::Plain","value":"Mode::Plain","parent":{"krate":0,"index":1855},"children":[],"decl_id":null,"docs":" Plain mode (`ws://` URL).\n","sig":null,"attributes":[{"value":"/ Plain mode (`ws://` URL).","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\stream.rs","byte_start":133496,"byte_end":133525,"line_start":22,"line_end":22,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1858},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\stream.rs","byte_start":133574,"byte_end":133577,"line_start":25,"line_end":25,"column_start":5,"column_end":8},"name":"Tls","qualname":"::stream::Mode::Tls","value":"Mode::Tls","parent":{"krate":0,"index":1855},"children":[],"decl_id":null,"docs":" TLS mode (`wss://` URL).\n","sig":null,"attributes":[{"value":"/ TLS mode (`wss://` URL).","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\stream.rs","byte_start":133541,"byte_end":133569,"line_start":24,"line_end":24,"column_start":5,"column_end":33}}]},{"kind":"Enum","id":{"krate":0,"index":1855},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\stream.rs","byte_start":133485,"byte_end":133489,"line_start":21,"line_end":21,"column_start":10,"column_end":14},"name":"Mode","qualname":"::stream::Mode","value":"pub enum Mode { Plain, Tls, }","parent":null,"children":[{"krate":0,"index":1856},{"krate":0,"index":1858}],"decl_id":null,"docs":" Stream mode, either plain TCP or TLS.\n","sig":null,"attributes":[{"value":"/ Stream mode, either plain TCP or TLS.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\stream.rs","byte_start":133404,"byte_end":133445,"line_start":19,"line_end":19,"column_start":1,"column_end":42}}]},{"kind":"Trait","id":{"krate":0,"index":1161},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\stream.rs","byte_start":133625,"byte_end":133632,"line_start":29,"line_end":29,"column_start":11,"column_end":18},"name":"NoDelay","qualname":"::stream::NoDelay","value":"NoDelay","parent":null,"children":[{"krate":0,"index":1162}],"decl_id":null,"docs":" Trait to switch TCP_NODELAY.\n","sig":null,"attributes":[{"value":"/ Trait to switch TCP_NODELAY.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\stream.rs","byte_start":133582,"byte_end":133614,"line_start":28,"line_end":28,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1162},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\stream.rs","byte_start":133697,"byte_end":133708,"line_start":31,"line_end":31,"column_start":8,"column_end":19},"name":"set_nodelay","qualname":"::stream::NoDelay::set_nodelay","value":"pub fn set_nodelay(&mut Self, bool) -> IoResult<()>","parent":{"krate":0,"index":1161},"children":[],"decl_id":null,"docs":" Set the TCP_NODELAY option to the given value.\n","sig":null,"attributes":[{"value":"/ Set the TCP_NODELAY option to the given value.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\stream.rs","byte_start":133639,"byte_end":133689,"line_start":30,"line_end":30,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1167},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\stream.rs","byte_start":134483,"byte_end":134488,"line_start":58,"line_end":58,"column_start":5,"column_end":10},"name":"Plain","qualname":"::stream::MaybeTlsStream::Plain","value":"MaybeTlsStream::Plain(S)","parent":{"krate":0,"index":1165},"children":[],"decl_id":null,"docs":" Unencrypted socket stream.\n","sig":null,"attributes":[{"value":"/ Unencrypted socket stream.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\stream.rs","byte_start":134448,"byte_end":134478,"line_start":57,"line_end":57,"column_start":5,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":1165},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\stream.rs","byte_start":134410,"byte_end":134424,"line_start":56,"line_end":56,"column_start":10,"column_end":24},"name":"MaybeTlsStream","qualname":"::stream::MaybeTlsStream","value":"pub enum MaybeTlsStream<S: Read + Write> { Plain(S), }","parent":null,"children":[{"krate":0,"index":1167}],"decl_id":null,"docs":" A stream that might be protected with TLS.\n","sig":null,"attributes":[{"value":"/ A stream that might be protected with TLS.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\stream.rs","byte_start":134336,"byte_end":134382,"line_start":54,"line_end":54,"column_start":1,"column_end":47}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\stream.rs","byte_start":134383,"byte_end":134400,"line_start":55,"line_end":55,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":1183},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\util.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"util","qualname":"::util","value":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\util.rs","parent":null,"children":[{"krate":0,"index":1184},{"krate":0,"index":1185},{"krate":0,"index":1186},{"krate":0,"index":1189},{"krate":0,"index":1192},{"krate":0,"index":1195},{"krate":0,"index":1198},{"krate":0,"index":1200},{"krate":0,"index":1202},{"krate":0,"index":1205},{"krate":0,"index":1208}],"decl_id":null,"docs":" Helper traits to ease non-blocking handling.\n","sig":null,"attributes":[{"value":"/ Helper traits to ease non-blocking handling.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\util.rs","byte_start":137602,"byte_end":137650,"line_start":1,"line_end":1,"column_start":1,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":1198},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\util.rs","byte_start":137820,"byte_end":137836,"line_start":11,"line_end":11,"column_start":11,"column_end":27},"name":"NonBlockingError","qualname":"::util::NonBlockingError","value":"NonBlockingError: Sized","parent":null,"children":[{"krate":0,"index":1199}],"decl_id":null,"docs":" Non-blocking IO handling.\n","sig":null,"attributes":[{"value":"/ Non-blocking IO handling.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\util.rs","byte_start":137780,"byte_end":137809,"line_start":10,"line_end":10,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1199},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\util.rs","byte_start":137918,"byte_end":137935,"line_start":13,"line_end":13,"column_start":8,"column_end":25},"name":"into_non_blocking","qualname":"::util::NonBlockingError::into_non_blocking","value":"pub fn into_non_blocking(Self) -> Option<Self>","parent":{"krate":0,"index":1198},"children":[],"decl_id":null,"docs":" Convert WouldBlock to None and don't touch other errors.\n","sig":null,"attributes":[{"value":"/ Convert WouldBlock to None and don't touch other errors.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\util.rs","byte_start":137850,"byte_end":137910,"line_start":12,"line_end":12,"column_start":5,"column_end":65}}]},{"kind":"Trait","id":{"krate":0,"index":1205},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\util.rs","byte_start":138497,"byte_end":138514,"line_start":37,"line_end":37,"column_start":11,"column_end":28},"name":"NonBlockingResult","qualname":"::util::NonBlockingResult","value":"NonBlockingResult","parent":null,"children":[{"krate":0,"index":1206},{"krate":0,"index":1207}],"decl_id":null,"docs":" Non-blocking IO wrapper.","sig":null,"attributes":[{"value":"/ Non-blocking IO wrapper.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\util.rs","byte_start":138386,"byte_end":138414,"line_start":34,"line_end":34,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\util.rs","byte_start":138415,"byte_end":138418,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ This trait is implemented for `Result<T, E: NonBlockingError>`.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\util.rs","byte_start":138419,"byte_end":138486,"line_start":36,"line_end":36,"column_start":1,"column_end":68}}]},{"kind":"Type","id":{"krate":0,"index":1206},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\util.rs","byte_start":138587,"byte_end":138593,"line_start":39,"line_end":39,"column_start":10,"column_end":16},"name":"Result","qualname":"::util::NonBlockingResult::Result","value":"type Result;","parent":{"krate":0,"index":1205},"children":[],"decl_id":null,"docs":" Type of the converted result: `Result<Option<T>, E>`\n","sig":null,"attributes":[{"value":"/ Type of the converted result: `Result<Option<T>, E>`","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\util.rs","byte_start":138521,"byte_end":138577,"line_start":38,"line_end":38,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1207},"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\util.rs","byte_start":138644,"byte_end":138652,"line_start":41,"line_end":41,"column_start":8,"column_end":16},"name":"no_block","qualname":"::util::NonBlockingResult::no_block","value":"pub fn no_block(Self) -> Self::Result","parent":{"krate":0,"index":1205},"children":[],"decl_id":null,"docs":" Perform the non-block conversion.\n","sig":null,"attributes":[{"value":"/ Perform the non-block conversion.","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\util.rs","byte_start":138599,"byte_end":138636,"line_start":40,"line_end":40,"column_start":5,"column_end":42}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\buffer.rs","byte_start":1554,"byte_end":1564,"line_start":18,"line_end":18,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\buffer.rs","byte_start":3363,"byte_end":3373,"line_start":70,"line_end":70,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\buffer.rs","byte_start":3685,"byte_end":3695,"line_start":84,"line_end":84,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":12312,"byte_end":12318,"line_start":199,"line_end":199,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":12622,"byte_end":12625,"line_start":211,"line_end":211,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":12907,"byte_end":12910,"line_start":223,"line_end":223,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":13047,"byte_end":13054,"line_start":229,"line_end":229,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":13182,"byte_end":13189,"line_start":235,"line_end":235,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":16108,"byte_end":16113,"line_start":72,"line_end":72,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":16223,"byte_end":16228,"line_start":78,"line_end":78,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":192}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":16356,"byte_end":16361,"line_start":84,"line_end":84,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":16519,"byte_end":16524,"line_start":90,"line_end":90,"column_start":48,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":16674,"byte_end":16679,"line_start":96,"line_end":96,"column_start":41,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":16799,"byte_end":16804,"line_start":102,"line_end":102,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":16951,"byte_end":16956,"line_start":108,"line_end":108,"column_start":48,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":17097,"byte_end":17102,"line_start":114,"line_end":114,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\client.rs","byte_start":28111,"byte_end":28126,"line_start":37,"line_end":37,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\client.rs","byte_start":29234,"byte_end":29249,"line_start":72,"line_end":72,"column_start":41,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\client.rs","byte_start":31567,"byte_end":31577,"line_start":146,"line_end":146,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\client.rs","byte_start":34371,"byte_end":34379,"line_start":205,"line_end":205,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\client.rs","byte_start":34809,"byte_end":34817,"line_start":216,"line_end":216,"column_start":63,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":315}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\headers.rs","byte_start":39368,"byte_end":39377,"line_start":18,"line_end":18,"column_start":63,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":345}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\headers.rs","byte_start":39730,"byte_end":39739,"line_start":31,"line_end":31,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\server.rs","byte_start":44686,"byte_end":44693,"line_start":114,"line_end":114,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":458}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\server.rs","byte_start":45120,"byte_end":45127,"line_start":125,"line_end":125,"column_start":62,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":463}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\server.rs","byte_start":46771,"byte_end":46772,"line_start":166,"line_end":166,"column_start":22,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\server.rs","byte_start":47142,"byte_end":47152,"line_start":183,"line_end":183,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":470}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\server.rs","byte_start":48011,"byte_end":48026,"line_start":209,"line_end":209,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\server.rs","byte_start":48867,"byte_end":48882,"line_start":228,"line_end":228,"column_start":54,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\machine.rs","byte_start":52645,"byte_end":52661,"line_start":18,"line_end":18,"column_start":14,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":519},{"krate":0,"index":520}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\machine.rs","byte_start":53358,"byte_end":53374,"line_start":37,"line_end":37,"column_start":28,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":523}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\mod.rs","byte_start":23670,"byte_end":23682,"line_start":27,"line_end":27,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\mod.rs","byte_start":24925,"byte_end":24939,"line_start":64,"line_end":64,"column_start":42,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":579}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\mod.rs","byte_start":25277,"byte_end":25291,"line_start":73,"line_end":73,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":582}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\mod.rs","byte_start":25602,"byte_end":25616,"line_start":82,"line_end":82,"column_start":42,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\mod.rs","byte_start":25669,"byte_end":25683,"line_start":84,"line_end":84,"column_start":43,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":587}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":95935,"byte_end":95939,"line_start":43,"line_end":43,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":610}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":96278,"byte_end":96285,"line_start":54,"line_end":54,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":96629,"byte_end":96635,"line_start":65,"line_end":65,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":614}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":97378,"byte_end":97384,"line_start":95,"line_end":95,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":640}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":101415,"byte_end":101424,"line_start":190,"line_end":190,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":665}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":101612,"byte_end":101621,"line_start":197,"line_end":197,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":667}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":102531,"byte_end":102540,"line_start":235,"line_end":235,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":104543,"byte_end":104553,"line_start":27,"line_end":27,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":756}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":104765,"byte_end":104775,"line_start":34,"line_end":34,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":759}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":105476,"byte_end":105487,"line_start":58,"line_end":58,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":761}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":105743,"byte_end":105754,"line_start":71,"line_end":71,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":763},{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":107747,"byte_end":107758,"line_start":129,"line_end":129,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":770}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":110094,"byte_end":110099,"line_start":208,"line_end":208,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":775},{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":778},{"krate":0,"index":779},{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":784},{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":789},{"krate":0,"index":790},{"krate":0,"index":791},{"krate":0,"index":792}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":114674,"byte_end":114679,"line_start":360,"line_end":360,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":795}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":115388,"byte_end":115400,"line_start":393,"line_end":393,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":808}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\mod.rs","byte_start":87236,"byte_end":87247,"line_start":28,"line_end":28,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":858},{"krate":0,"index":859},{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":862}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\mod.rs","byte_start":88043,"byte_end":88054,"line_start":55,"line_end":55,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":865}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\mod.rs","byte_start":88288,"byte_end":88299,"line_start":65,"line_end":65,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":868},{"krate":0,"index":869}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\mod.rs","byte_start":89219,"byte_end":89229,"line_start":95,"line_end":95,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":871},{"krate":0,"index":872},{"krate":0,"index":873},{"krate":0,"index":875},{"krate":0,"index":877}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\message.rs","byte_start":119947,"byte_end":119962,"line_start":22,"line_end":22,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":931},{"krate":0,"index":933}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\message.rs","byte_start":122184,"byte_end":122201,"line_start":95,"line_end":95,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":940},{"krate":0,"index":942}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\message.rs","byte_start":124993,"byte_end":125000,"line_start":177,"line_end":177,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":949},{"krate":0,"index":951},{"krate":0,"index":953},{"krate":0,"index":954},{"krate":0,"index":955},{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":958},{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":962},{"krate":0,"index":964}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\message.rs","byte_start":128172,"byte_end":128179,"line_start":272,"line_end":272,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":966}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\message.rs","byte_start":128286,"byte_end":128293,"line_start":278,"line_end":278,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":969}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\message.rs","byte_start":128402,"byte_end":128409,"line_start":284,"line_end":284,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":972}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\message.rs","byte_start":128512,"byte_end":128519,"line_start":290,"line_end":290,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":974}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\message.rs","byte_start":128621,"byte_end":128624,"line_start":296,"line_end":296,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":976}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\message.rs","byte_start":128734,"byte_end":128740,"line_start":302,"line_end":302,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":978},{"krate":0,"index":979}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\message.rs","byte_start":128891,"byte_end":128898,"line_start":310,"line_end":310,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":981}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":58672,"byte_end":58687,"line_start":61,"line_end":61,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1050}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":59325,"byte_end":59334,"line_start":84,"line_end":84,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1053},{"krate":0,"index":1054},{"krate":0,"index":1055},{"krate":0,"index":1056},{"krate":0,"index":1057},{"krate":0,"index":1059},{"krate":0,"index":1060},{"krate":0,"index":1061}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":61618,"byte_end":61627,"line_start":146,"line_end":146,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1064},{"krate":0,"index":1065},{"krate":0,"index":1066},{"krate":0,"index":1067}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":66654,"byte_end":66670,"line_start":246,"line_end":246,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1069},{"krate":0,"index":1070},{"krate":0,"index":1071},{"krate":0,"index":1073},{"krate":0,"index":1074},{"krate":0,"index":1075},{"krate":0,"index":1076},{"krate":0,"index":1078},{"krate":0,"index":1080},{"krate":0,"index":1082},{"krate":0,"index":1084},{"krate":0,"index":1086},{"krate":0,"index":1089}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":82809,"byte_end":82823,"line_start":627,"line_end":627,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1092},{"krate":0,"index":1093},{"krate":0,"index":1094}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":83804,"byte_end":83810,"line_start":654,"line_end":654,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1099}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\stream.rs","byte_start":133772,"byte_end":133781,"line_start":34,"line_end":34,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1164}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\stream.rs","byte_start":134814,"byte_end":134828,"line_start":67,"line_end":67,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1172}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\stream.rs","byte_start":135948,"byte_end":135962,"line_start":94,"line_end":94,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1175}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\stream.rs","byte_start":136377,"byte_end":136391,"line_start":106,"line_end":106,"column_start":33,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1178},{"krate":0,"index":1179}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\stream.rs","byte_start":137169,"byte_end":137183,"line_start":128,"line_end":128,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1182}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\util.rs","byte_start":137988,"byte_end":137995,"line_start":16,"line_end":16,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1201}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\util.rs","byte_start":138194,"byte_end":138199,"line_start":25,"line_end":25,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1203}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\util.rs","byte_start":138712,"byte_end":138721,"line_start":44,"line_end":44,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1211},{"krate":0,"index":1212}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\lib.rs","byte_start":321,"byte_end":327,"line_start":17,"line_end":17,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":6}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\lib.rs","byte_start":337,"byte_end":343,"line_start":18,"line_end":18,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":40}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\lib.rs","byte_start":353,"byte_end":358,"line_start":19,"line_end":19,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":159}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\lib.rs","byte_start":368,"byte_end":377,"line_start":20,"line_end":20,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":205}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\mod.rs","byte_start":23218,"byte_end":23224,"line_start":3,"line_end":3,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":206}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\mod.rs","byte_start":23234,"byte_end":23241,"line_start":4,"line_end":4,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":318}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\mod.rs","byte_start":23251,"byte_end":23257,"line_start":5,"line_end":5,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":349}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\lib.rs","byte_start":387,"byte_end":395,"line_start":21,"line_end":21,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":595}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":56554,"byte_end":56559,"line_start":3,"line_end":3,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":596}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\mod.rs","byte_start":86717,"byte_end":86723,"line_start":3,"line_end":3,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":597}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\lib.rs","byte_start":417,"byte_end":423,"line_start":23,"line_end":23,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1139}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\lib.rs","byte_start":504,"byte_end":508,"line_start":26,"line_end":26,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1183}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\buffer.rs","byte_start":1554,"byte_end":1564,"line_start":18,"line_end":18,"column_start":31,"column_end":41},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1260},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\buffer.rs","byte_start":3363,"byte_end":3373,"line_start":70,"line_end":70,"column_start":39,"column_end":49},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1260},"to":{"krate":16,"index":42}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\buffer.rs","byte_start":3685,"byte_end":3695,"line_start":84,"line_end":84,"column_start":43,"column_end":53},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1260},"to":{"krate":2,"index":2831}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":12312,"byte_end":12318,"line_start":199,"line_end":199,"column_start":28,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":5,"index":7286},"to":{"krate":0,"index":130}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":12622,"byte_end":12625,"line_start":211,"line_end":211,"column_start":28,"column_end":31},"kind":{"Impl":{"id":4}},"from":{"krate":14,"index":3215},"to":{"krate":0,"index":130}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":12907,"byte_end":12910,"line_start":223,"line_end":223,"column_start":28,"column_end":31},"kind":{"Impl":{"id":5}},"from":{"krate":20,"index":899},"to":{"krate":0,"index":130}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":13047,"byte_end":13054,"line_start":229,"line_end":229,"column_start":28,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":289},"to":{"krate":0,"index":130}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\client.rs","byte_start":13182,"byte_end":13189,"line_start":235,"line_end":235,"column_start":46,"column_end":53},"kind":{"Impl":{"id":7}},"from":{"krate":31,"index":280},"to":{"krate":0,"index":130}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":16108,"byte_end":16113,"line_start":72,"line_end":72,"column_start":31,"column_end":36},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1269},"to":{"krate":2,"index":2759}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":16223,"byte_end":16228,"line_start":78,"line_end":78,"column_start":38,"column_end":43},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1269},"to":{"krate":2,"index":2759}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":16356,"byte_end":16361,"line_start":84,"line_end":84,"column_start":49,"column_end":54},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1269},"to":{"krate":2,"index":2759}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":16519,"byte_end":16524,"line_start":90,"line_end":90,"column_start":48,"column_end":53},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1269},"to":{"krate":2,"index":2759}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":16674,"byte_end":16679,"line_start":96,"line_end":96,"column_start":41,"column_end":46},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1269},"to":{"krate":2,"index":2759}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":16799,"byte_end":16804,"line_start":102,"line_end":102,"column_start":38,"column_end":43},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1269},"to":{"krate":2,"index":2759}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":16951,"byte_end":16956,"line_start":108,"line_end":108,"column_start":48,"column_end":53},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1269},"to":{"krate":2,"index":2759}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\error.rs","byte_start":17097,"byte_end":17102,"line_start":114,"line_end":114,"column_start":32,"column_end":37},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1269},"to":{"krate":2,"index":2759}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\client.rs","byte_start":28111,"byte_end":28126,"line_start":37,"line_end":37,"column_start":23,"column_end":38},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1479},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\client.rs","byte_start":29234,"byte_end":29249,"line_start":72,"line_end":72,"column_start":41,"column_end":56},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1479},"to":{"krate":0,"index":588}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\client.rs","byte_start":31567,"byte_end":31577,"line_start":146,"line_end":146,"column_start":6,"column_end":16},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1487},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\client.rs","byte_start":34371,"byte_end":34379,"line_start":205,"line_end":205,"column_start":19,"column_end":27},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":290},"to":{"krate":0,"index":525}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\client.rs","byte_start":34809,"byte_end":34817,"line_start":216,"line_end":216,"column_start":63,"column_end":71},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":290},"to":{"krate":0,"index":339}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\headers.rs","byte_start":39196,"byte_end":39201,"line_start":13,"line_end":13,"column_start":35,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":2858},"to":{"krate":0,"index":339}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\headers.rs","byte_start":39368,"byte_end":39377,"line_start":18,"line_end":18,"column_start":63,"column_end":72},"kind":{"Impl":{"id":38}},"from":{"krate":14,"index":2381},"to":{"krate":0,"index":339}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\headers.rs","byte_start":39730,"byte_end":39739,"line_start":31,"line_end":31,"column_start":19,"column_end":28},"kind":{"Impl":{"id":39}},"from":{"krate":14,"index":2381},"to":{"krate":0,"index":525}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\server.rs","byte_start":44686,"byte_end":44693,"line_start":114,"line_end":114,"column_start":19,"column_end":26},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":438},"to":{"krate":0,"index":525}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\server.rs","byte_start":45120,"byte_end":45127,"line_start":125,"line_end":125,"column_start":62,"column_end":69},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":438},"to":{"krate":0,"index":339}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\server.rs","byte_start":46389,"byte_end":46394,"line_start":155,"line_end":155,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":2858},"to":{"krate":0,"index":464}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\server.rs","byte_start":46771,"byte_end":46772,"line_start":166,"line_end":166,"column_start":22,"column_end":23},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":467},"to":{"krate":0,"index":464}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\server.rs","byte_start":47142,"byte_end":47152,"line_start":183,"line_end":183,"column_start":19,"column_end":29},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1491},"to":{"krate":0,"index":464}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\server.rs","byte_start":48011,"byte_end":48026,"line_start":209,"line_end":209,"column_start":36,"column_end":51},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1498},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\server.rs","byte_start":48867,"byte_end":48882,"line_start":228,"line_end":228,"column_start":54,"column_end":69},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1498},"to":{"krate":0,"index":588}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\machine.rs","byte_start":52645,"byte_end":52661,"line_start":18,"line_end":18,"column_start":14,"column_end":30},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1509},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\machine.rs","byte_start":53358,"byte_end":53374,"line_start":37,"line_end":37,"column_start":28,"column_end":44},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1509},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\machine.rs","byte_start":56180,"byte_end":56185,"line_start":110,"line_end":110,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":2858},"to":{"krate":0,"index":525}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\mod.rs","byte_start":23670,"byte_end":23682,"line_start":27,"line_end":27,"column_start":27,"column_end":39},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1555},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\mod.rs","byte_start":24925,"byte_end":24939,"line_start":64,"line_end":64,"column_start":42,"column_end":56},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":569},"to":{"krate":2,"index":8894}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\mod.rs","byte_start":25277,"byte_end":25291,"line_start":73,"line_end":73,"column_start":44,"column_end":58},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":569},"to":{"krate":2,"index":8901}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\mod.rs","byte_start":25602,"byte_end":25616,"line_start":82,"line_end":82,"column_start":42,"column_end":56},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":569},"to":{"krate":1,"index":2326}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\handshake\\mod.rs","byte_start":25669,"byte_end":25683,"line_start":84,"line_end":84,"column_start":43,"column_end":57},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":569},"to":{"krate":2,"index":2759}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":95935,"byte_end":95939,"line_start":43,"line_end":43,"column_start":23,"column_end":27},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1594},"to":{"krate":2,"index":8901}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":96278,"byte_end":96285,"line_start":54,"line_end":54,"column_start":23,"column_end":30},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1616},"to":{"krate":2,"index":8901}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":96629,"byte_end":96635,"line_start":65,"line_end":65,"column_start":23,"column_end":29},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1575},"to":{"krate":2,"index":8901}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":97378,"byte_end":97384,"line_start":95,"line_end":95,"column_start":19,"column_end":25},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1575},"to":{"krate":2,"index":2759}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":101415,"byte_end":101424,"line_start":190,"line_end":190,"column_start":6,"column_end":15},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1638},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":101612,"byte_end":101621,"line_start":197,"line_end":197,"column_start":23,"column_end":32},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1638},"to":{"krate":2,"index":8901}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\coding.rs","byte_start":102531,"byte_end":102540,"line_start":235,"line_end":235,"column_start":20,"column_end":29},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1638},"to":{"krate":2,"index":2759}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":104543,"byte_end":104553,"line_start":27,"line_end":27,"column_start":10,"column_end":20},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1691},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":104765,"byte_end":104775,"line_start":34,"line_end":34,"column_start":27,"column_end":37},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1691},"to":{"krate":2,"index":8901}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":105476,"byte_end":105487,"line_start":58,"line_end":58,"column_start":18,"column_end":29},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1712},"to":{"krate":2,"index":2831}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":105743,"byte_end":105754,"line_start":71,"line_end":71,"column_start":6,"column_end":17},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1712},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":107747,"byte_end":107758,"line_start":129,"line_end":129,"column_start":6,"column_end":17},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1712},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":110094,"byte_end":110099,"line_start":208,"line_end":208,"column_start":6,"column_end":11},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1724},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":114674,"byte_end":114679,"line_start":360,"line_end":360,"column_start":23,"column_end":28},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1724},"to":{"krate":2,"index":8901}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\frame.rs","byte_start":115388,"byte_end":115400,"line_start":393,"line_end":393,"column_start":6,"column_end":18},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":796},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\mod.rs","byte_start":87236,"byte_end":87247,"line_start":28,"line_end":28,"column_start":14,"column_end":25},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1732},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\mod.rs","byte_start":88043,"byte_end":88054,"line_start":55,"line_end":55,"column_start":14,"column_end":25},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1732},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\mod.rs","byte_start":88288,"byte_end":88299,"line_start":65,"line_end":65,"column_start":14,"column_end":25},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1732},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\frame\\mod.rs","byte_start":89219,"byte_end":89229,"line_start":95,"line_end":95,"column_start":6,"column_end":16},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1739},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\message.rs","byte_start":119947,"byte_end":119962,"line_start":22,"line_end":22,"column_start":10,"column_end":25},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1745},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\message.rs","byte_start":122184,"byte_end":122201,"line_start":95,"line_end":95,"column_start":6,"column_end":23},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1750},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\message.rs","byte_start":124993,"byte_end":125000,"line_start":177,"line_end":177,"column_start":6,"column_end":13},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1763},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\message.rs","byte_start":128172,"byte_end":128179,"line_start":272,"line_end":272,"column_start":23,"column_end":30},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1763},"to":{"krate":2,"index":2759}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\message.rs","byte_start":128286,"byte_end":128293,"line_start":278,"line_end":278,"column_start":28,"column_end":35},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1763},"to":{"krate":2,"index":2759}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\message.rs","byte_start":128402,"byte_end":128409,"line_start":284,"line_end":284,"column_start":29,"column_end":36},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1763},"to":{"krate":2,"index":2759}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\message.rs","byte_start":128512,"byte_end":128519,"line_start":290,"line_end":290,"column_start":24,"column_end":31},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1763},"to":{"krate":2,"index":2759}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\message.rs","byte_start":128621,"byte_end":128624,"line_start":296,"line_end":296,"column_start":24,"column_end":27},"kind":{"Impl":{"id":82}},"from":{"krate":5,"index":6773},"to":{"krate":2,"index":2759}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\message.rs","byte_start":128734,"byte_end":128740,"line_start":302,"line_end":302,"column_start":27,"column_end":33},"kind":{"Impl":{"id":83}},"from":{"krate":5,"index":7286},"to":{"krate":2,"index":2766}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\message.rs","byte_start":128891,"byte_end":128898,"line_start":310,"line_end":310,"column_start":23,"column_end":30},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1763},"to":{"krate":2,"index":8901}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":58672,"byte_end":58687,"line_start":61,"line_end":61,"column_start":18,"column_end":33},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1806},"to":{"krate":2,"index":2831}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":59325,"byte_end":59334,"line_start":84,"line_end":84,"column_start":14,"column_end":23},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1816},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":61618,"byte_end":61627,"line_start":146,"line_end":146,"column_start":28,"column_end":37},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1816},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":66654,"byte_end":66670,"line_start":246,"line_end":246,"column_start":6,"column_end":22},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1823},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":82809,"byte_end":82823,"line_start":627,"line_end":627,"column_start":6,"column_end":20},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1833},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\protocol\\mod.rs","byte_start":83804,"byte_end":83810,"line_start":654,"line_end":654,"column_start":34,"column_end":40},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":186},"to":{"krate":0,"index":1095}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\stream.rs","byte_start":133772,"byte_end":133781,"line_start":34,"line_end":34,"column_start":18,"column_end":27},"kind":{"Impl":{"id":91}},"from":{"krate":1,"index":5010},"to":{"krate":0,"index":1161}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\stream.rs","byte_start":134814,"byte_end":134828,"line_start":67,"line_end":67,"column_start":41,"column_end":55},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1165},"to":{"krate":2,"index":8894}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\stream.rs","byte_start":135948,"byte_end":135962,"line_start":94,"line_end":94,"column_start":32,"column_end":46},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1165},"to":{"krate":1,"index":4271}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\stream.rs","byte_start":136377,"byte_end":136391,"line_start":106,"line_end":106,"column_start":33,"column_end":47},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1165},"to":{"krate":1,"index":4332}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\stream.rs","byte_start":137169,"byte_end":137183,"line_start":128,"line_end":128,"column_start":45,"column_end":59},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1165},"to":{"krate":0,"index":1161}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\util.rs","byte_start":137838,"byte_end":137843,"line_start":11,"line_end":11,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":2858},"to":{"krate":0,"index":1198}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\util.rs","byte_start":137988,"byte_end":137995,"line_start":16,"line_end":16,"column_start":27,"column_end":34},"kind":{"Impl":{"id":96}},"from":{"krate":1,"index":3753},"to":{"krate":0,"index":1198}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\util.rs","byte_start":138194,"byte_end":138199,"line_start":25,"line_end":25,"column_start":27,"column_end":32},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1269},"to":{"krate":0,"index":1198}},{"span":{"file_name":"C:\\Users\\Mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.15.0\\src\\util.rs","byte_start":138712,"byte_end":138721,"line_start":44,"line_end":44,"column_start":34,"column_end":43},"kind":{"Impl":{"id":98}},"from":{"krate":2,"index":40076},"to":{"krate":0,"index":1205}}]}